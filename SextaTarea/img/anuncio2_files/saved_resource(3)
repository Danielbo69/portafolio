(function($) {
	function do_all_client_side_twitter_oembed() {	
		if( typeof twttr === undefined ) {
			$.getScript('//platform.twitter.com/widgets.js', function() { $( '.pending-tweet' ).each( do_client_side_twitter_oembed ); } );
		}
	}

	// handle failed tweets or tweets that haven't been fetched yet
	function do_client_side_twitter_oembed() {
		var $this = $(this),
			text,
			url = 'https://api.twitter.com/1/statuses/oembed.json?omit_script=true&callback=?&';

		// Handle instances where make_clickable gets too friendly and linkifies our Twitter URL 
		if ( $this.has( 'a' ).length ) {
			text = $this.find( 'a' ).first().attr( 'href' );
		} else {
			text = $this.text();
		}
			
		// If we find an exact match, we want to fetch its content from the oembed endpoint and display it
		if ( text.match( /^http(s|):\/\/twitter\.com(\/\#\!\/|\/)([a-zA-Z0-9_]{1,20})\/status(es)*\/(\d+)$/ ) ) {
			url += 'url=' + encodeURIComponent( text );
		} else if ( text.match( /^(\d+)$/ ) ) {
			url += 'id=' + text;
		} else {
			return;
		}

		// Need to make a JSONP call to avoid CORS issues
		$.getJSON( url, function( data ) {
			if ( data.html ) {
				$this.html( data.html );
				$this.show();
				twttr.widgets.load();
			}
		} );
	}

	$( document ).ready( do_all_client_side_twitter_oembed );
	$( document.body ).on('post-load', do_all_client_side_twitter_oembed );
})(jQuery);
;
jQuery( document.body ).on( 'post-load', function() {
	if ( typeof twttr == 'object' && twttr.widgets && twttr.widgets.load )
		twttr.widgets.load();
});;
/*!
 * jQuery UI Core 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/ui-core/
 */
!function(a){"function"==typeof define&&define.amd?define(["jquery"],a):a(jQuery)}(function(a){function b(b,d){var e,f,g,h=b.nodeName.toLowerCase();return"area"===h?(e=b.parentNode,f=e.name,!(!b.href||!f||"map"!==e.nodeName.toLowerCase())&&(g=a("img[usemap='#"+f+"']")[0],!!g&&c(g))):(/^(input|select|textarea|button|object)$/.test(h)?!b.disabled:"a"===h?b.href||d:d)&&c(b)}function c(b){return a.expr.filters.visible(b)&&!a(b).parents().addBack().filter(function(){return"hidden"===a.css(this,"visibility")}).length}a.ui=a.ui||{},a.extend(a.ui,{version:"1.11.4",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),a.fn.extend({scrollParent:function(b){var c=this.css("position"),d="absolute"===c,e=b?/(auto|scroll|hidden)/:/(auto|scroll)/,f=this.parents().filter(function(){var b=a(this);return(!d||"static"!==b.css("position"))&&e.test(b.css("overflow")+b.css("overflow-y")+b.css("overflow-x"))}).eq(0);return"fixed"!==c&&f.length?f:a(this[0].ownerDocument||document)},uniqueId:function(){var a=0;return function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++a)})}}(),removeUniqueId:function(){return this.each(function(){/^ui-id-\d+$/.test(this.id)&&a(this).removeAttr("id")})}}),a.extend(a.expr[":"],{data:a.expr.createPseudo?a.expr.createPseudo(function(b){return function(c){return!!a.data(c,b)}}):function(b,c,d){return!!a.data(b,d[3])},focusable:function(c){return b(c,!isNaN(a.attr(c,"tabindex")))},tabbable:function(c){var d=a.attr(c,"tabindex"),e=isNaN(d);return(e||d>=0)&&b(c,!e)}}),a("<a>").outerWidth(1).jquery||a.each(["Width","Height"],function(b,c){function d(b,c,d,f){return a.each(e,function(){c-=parseFloat(a.css(b,"padding"+this))||0,d&&(c-=parseFloat(a.css(b,"border"+this+"Width"))||0),f&&(c-=parseFloat(a.css(b,"margin"+this))||0)}),c}var e="Width"===c?["Left","Right"]:["Top","Bottom"],f=c.toLowerCase(),g={innerWidth:a.fn.innerWidth,innerHeight:a.fn.innerHeight,outerWidth:a.fn.outerWidth,outerHeight:a.fn.outerHeight};a.fn["inner"+c]=function(b){return void 0===b?g["inner"+c].call(this):this.each(function(){a(this).css(f,d(this,b)+"px")})},a.fn["outer"+c]=function(b,e){return"number"!=typeof b?g["outer"+c].call(this,b):this.each(function(){a(this).css(f,d(this,b,!0,e)+"px")})}}),a.fn.addBack||(a.fn.addBack=function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}),a("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(a.fn.removeData=function(b){return function(c){return arguments.length?b.call(this,a.camelCase(c)):b.call(this)}}(a.fn.removeData)),a.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()),a.fn.extend({focus:function(b){return function(c,d){return"number"==typeof c?this.each(function(){var b=this;setTimeout(function(){a(b).focus(),d&&d.call(b)},c)}):b.apply(this,arguments)}}(a.fn.focus),disableSelection:function(){var a="onselectstart"in document.createElement("div")?"selectstart":"mousedown";return function(){return this.bind(a+".ui-disableSelection",function(a){a.preventDefault()})}}(),enableSelection:function(){return this.unbind(".ui-disableSelection")},zIndex:function(b){if(void 0!==b)return this.css("zIndex",b);if(this.length)for(var c,d,e=a(this[0]);e.length&&e[0]!==document;){if(c=e.css("position"),("absolute"===c||"relative"===c||"fixed"===c)&&(d=parseInt(e.css("zIndex"),10),!isNaN(d)&&0!==d))return d;e=e.parent()}return 0}}),a.ui.plugin={add:function(b,c,d){var e,f=a.ui[b].prototype;for(e in d)f.plugins[e]=f.plugins[e]||[],f.plugins[e].push([c,d[e]])},call:function(a,b,c,d){var e,f=a.plugins[b];if(f&&(d||a.element[0].parentNode&&11!==a.element[0].parentNode.nodeType))for(e=0;e<f.length;e++)a.options[f[e][0]]&&f[e][1].apply(a.element,c)}}});;
/*!
 * jQuery UI Effects 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/effects-core/
 */
!function(a){"function"==typeof define&&define.amd?define(["jquery"],a):a(jQuery)}(function(a){var b="ui-effects-",c=a;/*!
 * jQuery Color Animations v2.1.2
 * https://github.com/jquery/jquery-color
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * Date: Wed Jan 16 08:47:09 2013 -0600
 */
return a.effects={effect:{}},function(a,b){function c(a,b,c){var d=l[b.type]||{};return null==a?c||!b.def?null:b.def:(a=d.floor?~~a:parseFloat(a),isNaN(a)?b.def:d.mod?(a+d.mod)%d.mod:0>a?0:d.max<a?d.max:a)}function d(b){var c=j(),d=c._rgba=[];return b=b.toLowerCase(),o(i,function(a,e){var f,g=e.re.exec(b),h=g&&e.parse(g),i=e.space||"rgba";if(h)return f=c[i](h),c[k[i].cache]=f[k[i].cache],d=c._rgba=f._rgba,!1}),d.length?("0,0,0,0"===d.join()&&a.extend(d,f.transparent),c):f[b]}function e(a,b,c){return c=(c+1)%1,6*c<1?a+(b-a)*c*6:2*c<1?b:3*c<2?a+(b-a)*(2/3-c)*6:a}var f,g="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",h=/^([\-+])=\s*(\d+\.?\d*)/,i=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(a){return[a[1],a[2],a[3],a[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(a){return[2.55*a[1],2.55*a[2],2.55*a[3],a[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(a){return[parseInt(a[1],16),parseInt(a[2],16),parseInt(a[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(a){return[parseInt(a[1]+a[1],16),parseInt(a[2]+a[2],16),parseInt(a[3]+a[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(a){return[a[1],a[2]/100,a[3]/100,a[4]]}}],j=a.Color=function(b,c,d,e){return new a.Color.fn.parse(b,c,d,e)},k={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},l={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},m=j.support={},n=a("<p>")[0],o=a.each;n.style.cssText="background-color:rgba(1,1,1,.5)",m.rgba=n.style.backgroundColor.indexOf("rgba")>-1,o(k,function(a,b){b.cache="_"+a,b.props.alpha={idx:3,type:"percent",def:1}}),j.fn=a.extend(j.prototype,{parse:function(e,g,h,i){if(e===b)return this._rgba=[null,null,null,null],this;(e.jquery||e.nodeType)&&(e=a(e).css(g),g=b);var l=this,m=a.type(e),n=this._rgba=[];return g!==b&&(e=[e,g,h,i],m="array"),"string"===m?this.parse(d(e)||f._default):"array"===m?(o(k.rgba.props,function(a,b){n[b.idx]=c(e[b.idx],b)}),this):"object"===m?(e instanceof j?o(k,function(a,b){e[b.cache]&&(l[b.cache]=e[b.cache].slice())}):o(k,function(b,d){var f=d.cache;o(d.props,function(a,b){if(!l[f]&&d.to){if("alpha"===a||null==e[a])return;l[f]=d.to(l._rgba)}l[f][b.idx]=c(e[a],b,!0)}),l[f]&&a.inArray(null,l[f].slice(0,3))<0&&(l[f][3]=1,d.from&&(l._rgba=d.from(l[f])))}),this):void 0},is:function(a){var b=j(a),c=!0,d=this;return o(k,function(a,e){var f,g=b[e.cache];return g&&(f=d[e.cache]||e.to&&e.to(d._rgba)||[],o(e.props,function(a,b){if(null!=g[b.idx])return c=g[b.idx]===f[b.idx]})),c}),c},_space:function(){var a=[],b=this;return o(k,function(c,d){b[d.cache]&&a.push(c)}),a.pop()},transition:function(a,b){var d=j(a),e=d._space(),f=k[e],g=0===this.alpha()?j("transparent"):this,h=g[f.cache]||f.to(g._rgba),i=h.slice();return d=d[f.cache],o(f.props,function(a,e){var f=e.idx,g=h[f],j=d[f],k=l[e.type]||{};null!==j&&(null===g?i[f]=j:(k.mod&&(j-g>k.mod/2?g+=k.mod:g-j>k.mod/2&&(g-=k.mod)),i[f]=c((j-g)*b+g,e)))}),this[e](i)},blend:function(b){if(1===this._rgba[3])return this;var c=this._rgba.slice(),d=c.pop(),e=j(b)._rgba;return j(a.map(c,function(a,b){return(1-d)*e[b]+d*a}))},toRgbaString:function(){var b="rgba(",c=a.map(this._rgba,function(a,b){return null==a?b>2?1:0:a});return 1===c[3]&&(c.pop(),b="rgb("),b+c.join()+")"},toHslaString:function(){var b="hsla(",c=a.map(this.hsla(),function(a,b){return null==a&&(a=b>2?1:0),b&&b<3&&(a=Math.round(100*a)+"%"),a});return 1===c[3]&&(c.pop(),b="hsl("),b+c.join()+")"},toHexString:function(b){var c=this._rgba.slice(),d=c.pop();return b&&c.push(~~(255*d)),"#"+a.map(c,function(a){return a=(a||0).toString(16),1===a.length?"0"+a:a}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),j.fn.parse.prototype=j.fn,k.hsla.to=function(a){if(null==a[0]||null==a[1]||null==a[2])return[null,null,null,a[3]];var b,c,d=a[0]/255,e=a[1]/255,f=a[2]/255,g=a[3],h=Math.max(d,e,f),i=Math.min(d,e,f),j=h-i,k=h+i,l=.5*k;return b=i===h?0:d===h?60*(e-f)/j+360:e===h?60*(f-d)/j+120:60*(d-e)/j+240,c=0===j?0:l<=.5?j/k:j/(2-k),[Math.round(b)%360,c,l,null==g?1:g]},k.hsla.from=function(a){if(null==a[0]||null==a[1]||null==a[2])return[null,null,null,a[3]];var b=a[0]/360,c=a[1],d=a[2],f=a[3],g=d<=.5?d*(1+c):d+c-d*c,h=2*d-g;return[Math.round(255*e(h,g,b+1/3)),Math.round(255*e(h,g,b)),Math.round(255*e(h,g,b-1/3)),f]},o(k,function(d,e){var f=e.props,g=e.cache,i=e.to,k=e.from;j.fn[d]=function(d){if(i&&!this[g]&&(this[g]=i(this._rgba)),d===b)return this[g].slice();var e,h=a.type(d),l="array"===h||"object"===h?d:arguments,m=this[g].slice();return o(f,function(a,b){var d=l["object"===h?a:b.idx];null==d&&(d=m[b.idx]),m[b.idx]=c(d,b)}),k?(e=j(k(m)),e[g]=m,e):j(m)},o(f,function(b,c){j.fn[b]||(j.fn[b]=function(e){var f,g=a.type(e),i="alpha"===b?this._hsla?"hsla":"rgba":d,j=this[i](),k=j[c.idx];return"undefined"===g?k:("function"===g&&(e=e.call(this,k),g=a.type(e)),null==e&&c.empty?this:("string"===g&&(f=h.exec(e),f&&(e=k+parseFloat(f[2])*("+"===f[1]?1:-1))),j[c.idx]=e,this[i](j)))})})}),j.hook=function(b){var c=b.split(" ");o(c,function(b,c){a.cssHooks[c]={set:function(b,e){var f,g,h="";if("transparent"!==e&&("string"!==a.type(e)||(f=d(e)))){if(e=j(f||e),!m.rgba&&1!==e._rgba[3]){for(g="backgroundColor"===c?b.parentNode:b;(""===h||"transparent"===h)&&g&&g.style;)try{h=a.css(g,"backgroundColor"),g=g.parentNode}catch(i){}e=e.blend(h&&"transparent"!==h?h:"_default")}e=e.toRgbaString()}try{b.style[c]=e}catch(i){}}},a.fx.step[c]=function(b){b.colorInit||(b.start=j(b.elem,c),b.end=j(b.end),b.colorInit=!0),a.cssHooks[c].set(b.elem,b.start.transition(b.end,b.pos))}})},j.hook(g),a.cssHooks.borderColor={expand:function(a){var b={};return o(["Top","Right","Bottom","Left"],function(c,d){b["border"+d+"Color"]=a}),b}},f=a.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(c),function(){function b(b){var c,d,e=b.ownerDocument.defaultView?b.ownerDocument.defaultView.getComputedStyle(b,null):b.currentStyle,f={};if(e&&e.length&&e[0]&&e[e[0]])for(d=e.length;d--;)c=e[d],"string"==typeof e[c]&&(f[a.camelCase(c)]=e[c]);else for(c in e)"string"==typeof e[c]&&(f[c]=e[c]);return f}function d(b,c){var d,e,g={};for(d in c)e=c[d],b[d]!==e&&(f[d]||!a.fx.step[d]&&isNaN(parseFloat(e))||(g[d]=e));return g}var e=["add","remove","toggle"],f={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};a.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(b,d){a.fx.step[d]=function(a){("none"!==a.end&&!a.setAttr||1===a.pos&&!a.setAttr)&&(c.style(a.elem,d,a.end),a.setAttr=!0)}}),a.fn.addBack||(a.fn.addBack=function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}),a.effects.animateClass=function(c,f,g,h){var i=a.speed(f,g,h);return this.queue(function(){var f,g=a(this),h=g.attr("class")||"",j=i.children?g.find("*").addBack():g;j=j.map(function(){var c=a(this);return{el:c,start:b(this)}}),f=function(){a.each(e,function(a,b){c[b]&&g[b+"Class"](c[b])})},f(),j=j.map(function(){return this.end=b(this.el[0]),this.diff=d(this.start,this.end),this}),g.attr("class",h),j=j.map(function(){var b=this,c=a.Deferred(),d=a.extend({},i,{queue:!1,complete:function(){c.resolve(b)}});return this.el.animate(this.diff,d),c.promise()}),a.when.apply(a,j.get()).done(function(){f(),a.each(arguments,function(){var b=this.el;a.each(this.diff,function(a){b.css(a,"")})}),i.complete.call(g[0])})})},a.fn.extend({addClass:function(b){return function(c,d,e,f){return d?a.effects.animateClass.call(this,{add:c},d,e,f):b.apply(this,arguments)}}(a.fn.addClass),removeClass:function(b){return function(c,d,e,f){return arguments.length>1?a.effects.animateClass.call(this,{remove:c},d,e,f):b.apply(this,arguments)}}(a.fn.removeClass),toggleClass:function(b){return function(c,d,e,f,g){return"boolean"==typeof d||void 0===d?e?a.effects.animateClass.call(this,d?{add:c}:{remove:c},e,f,g):b.apply(this,arguments):a.effects.animateClass.call(this,{toggle:c},d,e,f)}}(a.fn.toggleClass),switchClass:function(b,c,d,e,f){return a.effects.animateClass.call(this,{add:c,remove:b},d,e,f)}})}(),function(){function c(b,c,d,e){return a.isPlainObject(b)&&(c=b,b=b.effect),b={effect:b},null==c&&(c={}),a.isFunction(c)&&(e=c,d=null,c={}),("number"==typeof c||a.fx.speeds[c])&&(e=d,d=c,c={}),a.isFunction(d)&&(e=d,d=null),c&&a.extend(b,c),d=d||c.duration,b.duration=a.fx.off?0:"number"==typeof d?d:d in a.fx.speeds?a.fx.speeds[d]:a.fx.speeds._default,b.complete=e||c.complete,b}function d(b){return!(b&&"number"!=typeof b&&!a.fx.speeds[b])||("string"==typeof b&&!a.effects.effect[b]||(!!a.isFunction(b)||"object"==typeof b&&!b.effect))}a.extend(a.effects,{version:"1.11.4",save:function(a,c){for(var d=0;d<c.length;d++)null!==c[d]&&a.data(b+c[d],a[0].style[c[d]])},restore:function(a,c){var d,e;for(e=0;e<c.length;e++)null!==c[e]&&(d=a.data(b+c[e]),void 0===d&&(d=""),a.css(c[e],d))},setMode:function(a,b){return"toggle"===b&&(b=a.is(":hidden")?"show":"hide"),b},getBaseline:function(a,b){var c,d;switch(a[0]){case"top":c=0;break;case"middle":c=.5;break;case"bottom":c=1;break;default:c=a[0]/b.height}switch(a[1]){case"left":d=0;break;case"center":d=.5;break;case"right":d=1;break;default:d=a[1]/b.width}return{x:d,y:c}},createWrapper:function(b){if(b.parent().is(".ui-effects-wrapper"))return b.parent();var c={width:b.outerWidth(!0),height:b.outerHeight(!0),"float":b.css("float")},d=a("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),e={width:b.width(),height:b.height()},f=document.activeElement;try{f.id}catch(g){f=document.body}return b.wrap(d),(b[0]===f||a.contains(b[0],f))&&a(f).focus(),d=b.parent(),"static"===b.css("position")?(d.css({position:"relative"}),b.css({position:"relative"})):(a.extend(c,{position:b.css("position"),zIndex:b.css("z-index")}),a.each(["top","left","bottom","right"],function(a,d){c[d]=b.css(d),isNaN(parseInt(c[d],10))&&(c[d]="auto")}),b.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),b.css(e),d.css(c).show()},removeWrapper:function(b){var c=document.activeElement;return b.parent().is(".ui-effects-wrapper")&&(b.parent().replaceWith(b),(b[0]===c||a.contains(b[0],c))&&a(c).focus()),b},setTransition:function(b,c,d,e){return e=e||{},a.each(c,function(a,c){var f=b.cssUnit(c);f[0]>0&&(e[c]=f[0]*d+f[1])}),e}}),a.fn.extend({effect:function(){function b(b){function c(){a.isFunction(f)&&f.call(e[0]),a.isFunction(b)&&b()}var e=a(this),f=d.complete,h=d.mode;(e.is(":hidden")?"hide"===h:"show"===h)?(e[h](),c()):g.call(e[0],d,c)}var d=c.apply(this,arguments),e=d.mode,f=d.queue,g=a.effects.effect[d.effect];return a.fx.off||!g?e?this[e](d.duration,d.complete):this.each(function(){d.complete&&d.complete.call(this)}):f===!1?this.each(b):this.queue(f||"fx",b)},show:function(a){return function(b){if(d(b))return a.apply(this,arguments);var e=c.apply(this,arguments);return e.mode="show",this.effect.call(this,e)}}(a.fn.show),hide:function(a){return function(b){if(d(b))return a.apply(this,arguments);var e=c.apply(this,arguments);return e.mode="hide",this.effect.call(this,e)}}(a.fn.hide),toggle:function(a){return function(b){if(d(b)||"boolean"==typeof b)return a.apply(this,arguments);var e=c.apply(this,arguments);return e.mode="toggle",this.effect.call(this,e)}}(a.fn.toggle),cssUnit:function(b){var c=this.css(b),d=[];return a.each(["em","px","%","pt"],function(a,b){c.indexOf(b)>0&&(d=[parseFloat(c),b])}),d}})}(),function(){var b={};a.each(["Quad","Cubic","Quart","Quint","Expo"],function(a,c){b[c]=function(b){return Math.pow(b,a+2)}}),a.extend(b,{Sine:function(a){return 1-Math.cos(a*Math.PI/2)},Circ:function(a){return 1-Math.sqrt(1-a*a)},Elastic:function(a){return 0===a||1===a?a:-Math.pow(2,8*(a-1))*Math.sin((80*(a-1)-7.5)*Math.PI/15)},Back:function(a){return a*a*(3*a-2)},Bounce:function(a){for(var b,c=4;a<((b=Math.pow(2,--c))-1)/11;);return 1/Math.pow(4,3-c)-7.5625*Math.pow((3*b-2)/22-a,2)}}),a.each(b,function(b,c){a.easing["easeIn"+b]=c,a.easing["easeOut"+b]=function(a){return 1-c(1-a)},a.easing["easeInOut"+b]=function(a){return a<.5?c(2*a)/2:1-c(a*-2+2)/2}})}(),a.effects});;
//     Underscore.js 1.8.3
//     http://underscorejs.org
//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.
(function(){function n(n){function t(t,r,e,u,i,o){for(;i>=0&&o>i;i+=n){var a=u?u[i]:i;e=r(e,t[a],a,t)}return e}return function(r,e,u,i){e=b(e,i,4);var o=!k(r)&&m.keys(r),a=(o||r).length,c=n>0?0:a-1;return arguments.length<3&&(u=r[o?o[c]:c],c+=n),t(r,e,u,o,c,a)}}function t(n){return function(t,r,e){r=x(r,e);for(var u=O(t),i=n>0?0:u-1;i>=0&&u>i;i+=n)if(r(t[i],i,t))return i;return-1}}function r(n,t,r){return function(e,u,i){var o=0,a=O(e);if("number"==typeof i)n>0?o=i>=0?i:Math.max(i+a,o):a=i>=0?Math.min(i+1,a):i+a+1;else if(r&&i&&a)return i=r(e,u),e[i]===u?i:-1;if(u!==u)return i=t(l.call(e,o,a),m.isNaN),i>=0?i+o:-1;for(i=n>0?o:a-1;i>=0&&a>i;i+=n)if(e[i]===u)return i;return-1}}function e(n,t){var r=I.length,e=n.constructor,u=m.isFunction(e)&&e.prototype||a,i="constructor";for(m.has(n,i)&&!m.contains(t,i)&&t.push(i);r--;)i=I[r],i in n&&n[i]!==u[i]&&!m.contains(t,i)&&t.push(i)}var u=this,i=u._,o=Array.prototype,a=Object.prototype,c=Function.prototype,f=o.push,l=o.slice,s=a.toString,p=a.hasOwnProperty,h=Array.isArray,v=Object.keys,g=c.bind,y=Object.create,d=function(){},m=function(n){return n instanceof m?n:this instanceof m?void(this._wrapped=n):new m(n)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=m),exports._=m):u._=m,m.VERSION="1.8.3";var b=function(n,t,r){if(t===void 0)return n;switch(null==r?3:r){case 1:return function(r){return n.call(t,r)};case 2:return function(r,e){return n.call(t,r,e)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,i){return n.call(t,r,e,u,i)}}return function(){return n.apply(t,arguments)}},x=function(n,t,r){return null==n?m.identity:m.isFunction(n)?b(n,t,r):m.isObject(n)?m.matcher(n):m.property(n)};m.iteratee=function(n,t){return x(n,t,1/0)};var _=function(n,t){return function(r){var e=arguments.length;if(2>e||null==r)return r;for(var u=1;e>u;u++)for(var i=arguments[u],o=n(i),a=o.length,c=0;a>c;c++){var f=o[c];t&&r[f]!==void 0||(r[f]=i[f])}return r}},j=function(n){if(!m.isObject(n))return{};if(y)return y(n);d.prototype=n;var t=new d;return d.prototype=null,t},w=function(n){return function(t){return null==t?void 0:t[n]}},A=Math.pow(2,53)-1,O=w("length"),k=function(n){var t=O(n);return"number"==typeof t&&t>=0&&A>=t};m.each=m.forEach=function(n,t,r){t=b(t,r);var e,u;if(k(n))for(e=0,u=n.length;u>e;e++)t(n[e],e,n);else{var i=m.keys(n);for(e=0,u=i.length;u>e;e++)t(n[i[e]],i[e],n)}return n},m.map=m.collect=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=Array(u),o=0;u>o;o++){var a=e?e[o]:o;i[o]=t(n[a],a,n)}return i},m.reduce=m.foldl=m.inject=n(1),m.reduceRight=m.foldr=n(-1),m.find=m.detect=function(n,t,r){var e;return e=k(n)?m.findIndex(n,t,r):m.findKey(n,t,r),e!==void 0&&e!==-1?n[e]:void 0},m.filter=m.select=function(n,t,r){var e=[];return t=x(t,r),m.each(n,function(n,r,u){t(n,r,u)&&e.push(n)}),e},m.reject=function(n,t,r){return m.filter(n,m.negate(x(t)),r)},m.every=m.all=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;u>i;i++){var o=e?e[i]:i;if(!t(n[o],o,n))return!1}return!0},m.some=m.any=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;u>i;i++){var o=e?e[i]:i;if(t(n[o],o,n))return!0}return!1},m.contains=m.includes=m.include=function(n,t,r,e){return k(n)||(n=m.values(n)),("number"!=typeof r||e)&&(r=0),m.indexOf(n,t,r)>=0},m.invoke=function(n,t){var r=l.call(arguments,2),e=m.isFunction(t);return m.map(n,function(n){var u=e?t:n[t];return null==u?u:u.apply(n,r)})},m.pluck=function(n,t){return m.map(n,m.property(t))},m.where=function(n,t){return m.filter(n,m.matcher(t))},m.findWhere=function(n,t){return m.find(n,m.matcher(t))},m.max=function(n,t,r){var e,u,i=-1/0,o=-1/0;if(null==t&&null!=n){n=k(n)?n:m.values(n);for(var a=0,c=n.length;c>a;a++)e=n[a],e>i&&(i=e)}else t=x(t,r),m.each(n,function(n,r,e){u=t(n,r,e),(u>o||u===-1/0&&i===-1/0)&&(i=n,o=u)});return i},m.min=function(n,t,r){var e,u,i=1/0,o=1/0;if(null==t&&null!=n){n=k(n)?n:m.values(n);for(var a=0,c=n.length;c>a;a++)e=n[a],i>e&&(i=e)}else t=x(t,r),m.each(n,function(n,r,e){u=t(n,r,e),(o>u||1/0===u&&1/0===i)&&(i=n,o=u)});return i},m.shuffle=function(n){for(var t,r=k(n)?n:m.values(n),e=r.length,u=Array(e),i=0;e>i;i++)t=m.random(0,i),t!==i&&(u[i]=u[t]),u[t]=r[i];return u},m.sample=function(n,t,r){return null==t||r?(k(n)||(n=m.values(n)),n[m.random(n.length-1)]):m.shuffle(n).slice(0,Math.max(0,t))},m.sortBy=function(n,t,r){return t=x(t,r),m.pluck(m.map(n,function(n,r,e){return{value:n,index:r,criteria:t(n,r,e)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index-t.index}),"value")};var F=function(n){return function(t,r,e){var u={};return r=x(r,e),m.each(t,function(e,i){var o=r(e,i,t);n(u,e,o)}),u}};m.groupBy=F(function(n,t,r){m.has(n,r)?n[r].push(t):n[r]=[t]}),m.indexBy=F(function(n,t,r){n[r]=t}),m.countBy=F(function(n,t,r){m.has(n,r)?n[r]++:n[r]=1}),m.toArray=function(n){return n?m.isArray(n)?l.call(n):k(n)?m.map(n,m.identity):m.values(n):[]},m.size=function(n){return null==n?0:k(n)?n.length:m.keys(n).length},m.partition=function(n,t,r){t=x(t,r);var e=[],u=[];return m.each(n,function(n,r,i){(t(n,r,i)?e:u).push(n)}),[e,u]},m.first=m.head=m.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:m.initial(n,n.length-t)},m.initial=function(n,t,r){return l.call(n,0,Math.max(0,n.length-(null==t||r?1:t)))},m.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:m.rest(n,Math.max(0,n.length-t))},m.rest=m.tail=m.drop=function(n,t,r){return l.call(n,null==t||r?1:t)},m.compact=function(n){return m.filter(n,m.identity)};var S=function(n,t,r,e){for(var u=[],i=0,o=e||0,a=O(n);a>o;o++){var c=n[o];if(k(c)&&(m.isArray(c)||m.isArguments(c))){t||(c=S(c,t,r));var f=0,l=c.length;for(u.length+=l;l>f;)u[i++]=c[f++]}else r||(u[i++]=c)}return u};m.flatten=function(n,t){return S(n,t,!1)},m.without=function(n){return m.difference(n,l.call(arguments,1))},m.uniq=m.unique=function(n,t,r,e){m.isBoolean(t)||(e=r,r=t,t=!1),null!=r&&(r=x(r,e));for(var u=[],i=[],o=0,a=O(n);a>o;o++){var c=n[o],f=r?r(c,o,n):c;t?(o&&i===f||u.push(c),i=f):r?m.contains(i,f)||(i.push(f),u.push(c)):m.contains(u,c)||u.push(c)}return u},m.union=function(){return m.uniq(S(arguments,!0,!0))},m.intersection=function(n){for(var t=[],r=arguments.length,e=0,u=O(n);u>e;e++){var i=n[e];if(!m.contains(t,i)){for(var o=1;r>o&&m.contains(arguments[o],i);o++);o===r&&t.push(i)}}return t},m.difference=function(n){var t=S(arguments,!0,!0,1);return m.filter(n,function(n){return!m.contains(t,n)})},m.zip=function(){return m.unzip(arguments)},m.unzip=function(n){for(var t=n&&m.max(n,O).length||0,r=Array(t),e=0;t>e;e++)r[e]=m.pluck(n,e);return r},m.object=function(n,t){for(var r={},e=0,u=O(n);u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},m.findIndex=t(1),m.findLastIndex=t(-1),m.sortedIndex=function(n,t,r,e){r=x(r,e,1);for(var u=r(t),i=0,o=O(n);o>i;){var a=Math.floor((i+o)/2);r(n[a])<u?i=a+1:o=a}return i},m.indexOf=r(1,m.findIndex,m.sortedIndex),m.lastIndexOf=r(-1,m.findLastIndex),m.range=function(n,t,r){null==t&&(t=n||0,n=0),r=r||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=Array(e),i=0;e>i;i++,n+=r)u[i]=n;return u};var E=function(n,t,r,e,u){if(!(e instanceof t))return n.apply(r,u);var i=j(n.prototype),o=n.apply(i,u);return m.isObject(o)?o:i};m.bind=function(n,t){if(g&&n.bind===g)return g.apply(n,l.call(arguments,1));if(!m.isFunction(n))throw new TypeError("Bind must be called on a function");var r=l.call(arguments,2),e=function(){return E(n,e,t,this,r.concat(l.call(arguments)))};return e},m.partial=function(n){var t=l.call(arguments,1),r=function(){for(var e=0,u=t.length,i=Array(u),o=0;u>o;o++)i[o]=t[o]===m?arguments[e++]:t[o];for(;e<arguments.length;)i.push(arguments[e++]);return E(n,r,this,this,i)};return r},m.bindAll=function(n){var t,r,e=arguments.length;if(1>=e)throw new Error("bindAll must be passed function names");for(t=1;e>t;t++)r=arguments[t],n[r]=m.bind(n[r],n);return n},m.memoize=function(n,t){var r=function(e){var u=r.cache,i=""+(t?t.apply(this,arguments):e);return m.has(u,i)||(u[i]=n.apply(this,arguments)),u[i]};return r.cache={},r},m.delay=function(n,t){var r=l.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},m.defer=m.partial(m.delay,m,1),m.throttle=function(n,t,r){var e,u,i,o=null,a=0;r||(r={});var c=function(){a=r.leading===!1?0:m.now(),o=null,i=n.apply(e,u),o||(e=u=null)};return function(){var f=m.now();a||r.leading!==!1||(a=f);var l=t-(f-a);return e=this,u=arguments,0>=l||l>t?(o&&(clearTimeout(o),o=null),a=f,i=n.apply(e,u),o||(e=u=null)):o||r.trailing===!1||(o=setTimeout(c,l)),i}},m.debounce=function(n,t,r){var e,u,i,o,a,c=function(){var f=m.now()-o;t>f&&f>=0?e=setTimeout(c,t-f):(e=null,r||(a=n.apply(i,u),e||(i=u=null)))};return function(){i=this,u=arguments,o=m.now();var f=r&&!e;return e||(e=setTimeout(c,t)),f&&(a=n.apply(i,u),i=u=null),a}},m.wrap=function(n,t){return m.partial(t,n)},m.negate=function(n){return function(){return!n.apply(this,arguments)}},m.compose=function(){var n=arguments,t=n.length-1;return function(){for(var r=t,e=n[t].apply(this,arguments);r--;)e=n[r].call(this,e);return e}},m.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},m.before=function(n,t){var r;return function(){return--n>0&&(r=t.apply(this,arguments)),1>=n&&(t=null),r}},m.once=m.partial(m.before,2);var M=!{toString:null}.propertyIsEnumerable("toString"),I=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"];m.keys=function(n){if(!m.isObject(n))return[];if(v)return v(n);var t=[];for(var r in n)m.has(n,r)&&t.push(r);return M&&e(n,t),t},m.allKeys=function(n){if(!m.isObject(n))return[];var t=[];for(var r in n)t.push(r);return M&&e(n,t),t},m.values=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;r>u;u++)e[u]=n[t[u]];return e},m.mapObject=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=u.length,o={},a=0;i>a;a++)e=u[a],o[e]=t(n[e],e,n);return o},m.pairs=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;r>u;u++)e[u]=[t[u],n[t[u]]];return e},m.invert=function(n){for(var t={},r=m.keys(n),e=0,u=r.length;u>e;e++)t[n[r[e]]]=r[e];return t},m.functions=m.methods=function(n){var t=[];for(var r in n)m.isFunction(n[r])&&t.push(r);return t.sort()},m.extend=_(m.allKeys),m.extendOwn=m.assign=_(m.keys),m.findKey=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=0,o=u.length;o>i;i++)if(e=u[i],t(n[e],e,n))return e},m.pick=function(n,t,r){var e,u,i={},o=n;if(null==o)return i;m.isFunction(t)?(u=m.allKeys(o),e=b(t,r)):(u=S(arguments,!1,!1,1),e=function(n,t,r){return t in r},o=Object(o));for(var a=0,c=u.length;c>a;a++){var f=u[a],l=o[f];e(l,f,o)&&(i[f]=l)}return i},m.omit=function(n,t,r){if(m.isFunction(t))t=m.negate(t);else{var e=m.map(S(arguments,!1,!1,1),String);t=function(n,t){return!m.contains(e,t)}}return m.pick(n,t,r)},m.defaults=_(m.allKeys,!0),m.create=function(n,t){var r=j(n);return t&&m.extendOwn(r,t),r},m.clone=function(n){return m.isObject(n)?m.isArray(n)?n.slice():m.extend({},n):n},m.tap=function(n,t){return t(n),n},m.isMatch=function(n,t){var r=m.keys(t),e=r.length;if(null==n)return!e;for(var u=Object(n),i=0;e>i;i++){var o=r[i];if(t[o]!==u[o]||!(o in u))return!1}return!0};var N=function(n,t,r,e){if(n===t)return 0!==n||1/n===1/t;if(null==n||null==t)return n===t;n instanceof m&&(n=n._wrapped),t instanceof m&&(t=t._wrapped);var u=s.call(n);if(u!==s.call(t))return!1;switch(u){case"[object RegExp]":case"[object String]":return""+n==""+t;case"[object Number]":return+n!==+n?+t!==+t:0===+n?1/+n===1/t:+n===+t;case"[object Date]":case"[object Boolean]":return+n===+t}var i="[object Array]"===u;if(!i){if("object"!=typeof n||"object"!=typeof t)return!1;var o=n.constructor,a=t.constructor;if(o!==a&&!(m.isFunction(o)&&o instanceof o&&m.isFunction(a)&&a instanceof a)&&"constructor"in n&&"constructor"in t)return!1}r=r||[],e=e||[];for(var c=r.length;c--;)if(r[c]===n)return e[c]===t;if(r.push(n),e.push(t),i){if(c=n.length,c!==t.length)return!1;for(;c--;)if(!N(n[c],t[c],r,e))return!1}else{var f,l=m.keys(n);if(c=l.length,m.keys(t).length!==c)return!1;for(;c--;)if(f=l[c],!m.has(t,f)||!N(n[f],t[f],r,e))return!1}return r.pop(),e.pop(),!0};m.isEqual=function(n,t){return N(n,t)},m.isEmpty=function(n){return null==n?!0:k(n)&&(m.isArray(n)||m.isString(n)||m.isArguments(n))?0===n.length:0===m.keys(n).length},m.isElement=function(n){return!(!n||1!==n.nodeType)},m.isArray=h||function(n){return"[object Array]"===s.call(n)},m.isObject=function(n){var t=typeof n;return"function"===t||"object"===t&&!!n},m.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(n){m["is"+n]=function(t){return s.call(t)==="[object "+n+"]"}}),m.isArguments(arguments)||(m.isArguments=function(n){return m.has(n,"callee")}),"function"!=typeof/./&&"object"!=typeof Int8Array&&(m.isFunction=function(n){return"function"==typeof n||!1}),m.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},m.isNaN=function(n){return m.isNumber(n)&&n!==+n},m.isBoolean=function(n){return n===!0||n===!1||"[object Boolean]"===s.call(n)},m.isNull=function(n){return null===n},m.isUndefined=function(n){return n===void 0},m.has=function(n,t){return null!=n&&p.call(n,t)},m.noConflict=function(){return u._=i,this},m.identity=function(n){return n},m.constant=function(n){return function(){return n}},m.noop=function(){},m.property=w,m.propertyOf=function(n){return null==n?function(){}:function(t){return n[t]}},m.matcher=m.matches=function(n){return n=m.extendOwn({},n),function(t){return m.isMatch(t,n)}},m.times=function(n,t,r){var e=Array(Math.max(0,n));t=b(t,r,1);for(var u=0;n>u;u++)e[u]=t(u);return e},m.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))},m.now=Date.now||function(){return(new Date).getTime()};var B={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},T=m.invert(B),R=function(n){var t=function(t){return n[t]},r="(?:"+m.keys(n).join("|")+")",e=RegExp(r),u=RegExp(r,"g");return function(n){return n=null==n?"":""+n,e.test(n)?n.replace(u,t):n}};m.escape=R(B),m.unescape=R(T),m.result=function(n,t,r){var e=null==n?void 0:n[t];return e===void 0&&(e=r),m.isFunction(e)?e.call(n):e};var q=0;m.uniqueId=function(n){var t=++q+"";return n?n+t:t},m.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var K=/(.)^/,z={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},D=/\\|'|\r|\n|\u2028|\u2029/g,L=function(n){return"\\"+z[n]};m.template=function(n,t,r){!t&&r&&(t=r),t=m.defaults({},t,m.templateSettings);var e=RegExp([(t.escape||K).source,(t.interpolate||K).source,(t.evaluate||K).source].join("|")+"|$","g"),u=0,i="__p+='";n.replace(e,function(t,r,e,o,a){return i+=n.slice(u,a).replace(D,L),u=a+t.length,r?i+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'":e?i+="'+\n((__t=("+e+"))==null?'':__t)+\n'":o&&(i+="';\n"+o+"\n__p+='"),t}),i+="';\n",t.variable||(i="with(obj||{}){\n"+i+"}\n"),i="var __t,__p='',__j=Array.prototype.join,"+"print=function(){__p+=__j.call(arguments,'');};\n"+i+"return __p;\n";try{var o=new Function(t.variable||"obj","_",i)}catch(a){throw a.source=i,a}var c=function(n){return o.call(this,n,m)},f=t.variable||"obj";return c.source="function("+f+"){\n"+i+"}",c},m.chain=function(n){var t=m(n);return t._chain=!0,t};var P=function(n,t){return n._chain?m(t).chain():t};m.mixin=function(n){m.each(m.functions(n),function(t){var r=m[t]=n[t];m.prototype[t]=function(){var n=[this._wrapped];return f.apply(n,arguments),P(this,r.apply(m,n))}})},m.mixin(m),m.each(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=o[n];m.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!==n&&"splice"!==n||0!==r.length||delete r[0],P(this,r)}}),m.each(["concat","join","slice"],function(n){var t=o[n];m.prototype[n]=function(){return P(this,t.apply(this._wrapped,arguments))}}),m.prototype.value=function(){return this._wrapped},m.prototype.valueOf=m.prototype.toJSON=m.prototype.value,m.prototype.toString=function(){return""+this._wrapped},"function"==typeof define&&define.amd&&define("underscore",[],function(){return m})}).call(this);
;
(function(t){var e=typeof self=="object"&&self.self===self&&self||typeof global=="object"&&global.global===global&&global;if(typeof define==="function"&&define.amd){define(["underscore","jquery","exports"],function(i,r,n){e.Backbone=t(e,n,i,r)})}else if(typeof exports!=="undefined"){var i=require("underscore"),r;try{r=require("jquery")}catch(n){}t(e,exports,i,r)}else{e.Backbone=t(e,{},e._,e.jQuery||e.Zepto||e.ender||e.$)}})(function(t,e,i,r){var n=t.Backbone;var s=Array.prototype.slice;e.VERSION="1.3.3";e.$=r;e.noConflict=function(){t.Backbone=n;return this};e.emulateHTTP=false;e.emulateJSON=false;var a=function(t,e,r){switch(t){case 1:return function(){return i[e](this[r])};case 2:return function(t){return i[e](this[r],t)};case 3:return function(t,n){return i[e](this[r],o(t,this),n)};case 4:return function(t,n,s){return i[e](this[r],o(t,this),n,s)};default:return function(){var t=s.call(arguments);t.unshift(this[r]);return i[e].apply(i,t)}}};var h=function(t,e,r){i.each(e,function(e,n){if(i[n])t.prototype[n]=a(e,n,r)})};var o=function(t,e){if(i.isFunction(t))return t;if(i.isObject(t)&&!e._isModel(t))return l(t);if(i.isString(t))return function(e){return e.get(t)};return t};var l=function(t){var e=i.matches(t);return function(t){return e(t.attributes)}};var u=e.Events={};var c=/\s+/;var f=function(t,e,r,n,s){var a=0,h;if(r&&typeof r==="object"){if(n!==void 0&&"context"in s&&s.context===void 0)s.context=n;for(h=i.keys(r);a<h.length;a++){e=f(t,e,h[a],r[h[a]],s)}}else if(r&&c.test(r)){for(h=r.split(c);a<h.length;a++){e=t(e,h[a],n,s)}}else{e=t(e,r,n,s)}return e};u.on=function(t,e,i){return d(this,t,e,i)};var d=function(t,e,i,r,n){t._events=f(v,t._events||{},e,i,{context:r,ctx:t,listening:n});if(n){var s=t._listeners||(t._listeners={});s[n.id]=n}return t};u.listenTo=function(t,e,r){if(!t)return this;var n=t._listenId||(t._listenId=i.uniqueId("l"));var s=this._listeningTo||(this._listeningTo={});var a=s[n];if(!a){var h=this._listenId||(this._listenId=i.uniqueId("l"));a=s[n]={obj:t,objId:n,id:h,listeningTo:s,count:0}}d(t,e,r,this,a);return this};var v=function(t,e,i,r){if(i){var n=t[e]||(t[e]=[]);var s=r.context,a=r.ctx,h=r.listening;if(h)h.count++;n.push({callback:i,context:s,ctx:s||a,listening:h})}return t};u.off=function(t,e,i){if(!this._events)return this;this._events=f(g,this._events,t,e,{context:i,listeners:this._listeners});return this};u.stopListening=function(t,e,r){var n=this._listeningTo;if(!n)return this;var s=t?[t._listenId]:i.keys(n);for(var a=0;a<s.length;a++){var h=n[s[a]];if(!h)break;h.obj.off(e,r,this)}return this};var g=function(t,e,r,n){if(!t)return;var s=0,a;var h=n.context,o=n.listeners;if(!e&&!r&&!h){var l=i.keys(o);for(;s<l.length;s++){a=o[l[s]];delete o[a.id];delete a.listeningTo[a.objId]}return}var u=e?[e]:i.keys(t);for(;s<u.length;s++){e=u[s];var c=t[e];if(!c)break;var f=[];for(var d=0;d<c.length;d++){var v=c[d];if(r&&r!==v.callback&&r!==v.callback._callback||h&&h!==v.context){f.push(v)}else{a=v.listening;if(a&&--a.count===0){delete o[a.id];delete a.listeningTo[a.objId]}}}if(f.length){t[e]=f}else{delete t[e]}}return t};u.once=function(t,e,r){var n=f(p,{},t,e,i.bind(this.off,this));if(typeof t==="string"&&r==null)e=void 0;return this.on(n,e,r)};u.listenToOnce=function(t,e,r){var n=f(p,{},e,r,i.bind(this.stopListening,this,t));return this.listenTo(t,n)};var p=function(t,e,r,n){if(r){var s=t[e]=i.once(function(){n(e,s);r.apply(this,arguments)});s._callback=r}return t};u.trigger=function(t){if(!this._events)return this;var e=Math.max(0,arguments.length-1);var i=Array(e);for(var r=0;r<e;r++)i[r]=arguments[r+1];f(m,this._events,t,void 0,i);return this};var m=function(t,e,i,r){if(t){var n=t[e];var s=t.all;if(n&&s)s=s.slice();if(n)_(n,r);if(s)_(s,[e].concat(r))}return t};var _=function(t,e){var i,r=-1,n=t.length,s=e[0],a=e[1],h=e[2];switch(e.length){case 0:while(++r<n)(i=t[r]).callback.call(i.ctx);return;case 1:while(++r<n)(i=t[r]).callback.call(i.ctx,s);return;case 2:while(++r<n)(i=t[r]).callback.call(i.ctx,s,a);return;case 3:while(++r<n)(i=t[r]).callback.call(i.ctx,s,a,h);return;default:while(++r<n)(i=t[r]).callback.apply(i.ctx,e);return}};u.bind=u.on;u.unbind=u.off;i.extend(e,u);var y=e.Model=function(t,e){var r=t||{};e||(e={});this.cid=i.uniqueId(this.cidPrefix);this.attributes={};if(e.collection)this.collection=e.collection;if(e.parse)r=this.parse(r,e)||{};var n=i.result(this,"defaults");r=i.defaults(i.extend({},n,r),n);this.set(r,e);this.changed={};this.initialize.apply(this,arguments)};i.extend(y.prototype,u,{changed:null,validationError:null,idAttribute:"id",cidPrefix:"c",initialize:function(){},toJSON:function(t){return i.clone(this.attributes)},sync:function(){return e.sync.apply(this,arguments)},get:function(t){return this.attributes[t]},escape:function(t){return i.escape(this.get(t))},has:function(t){return this.get(t)!=null},matches:function(t){return!!i.iteratee(t,this)(this.attributes)},set:function(t,e,r){if(t==null)return this;var n;if(typeof t==="object"){n=t;r=e}else{(n={})[t]=e}r||(r={});if(!this._validate(n,r))return false;var s=r.unset;var a=r.silent;var h=[];var o=this._changing;this._changing=true;if(!o){this._previousAttributes=i.clone(this.attributes);this.changed={}}var l=this.attributes;var u=this.changed;var c=this._previousAttributes;for(var f in n){e=n[f];if(!i.isEqual(l[f],e))h.push(f);if(!i.isEqual(c[f],e)){u[f]=e}else{delete u[f]}s?delete l[f]:l[f]=e}if(this.idAttribute in n)this.id=this.get(this.idAttribute);if(!a){if(h.length)this._pending=r;for(var d=0;d<h.length;d++){this.trigger("change:"+h[d],this,l[h[d]],r)}}if(o)return this;if(!a){while(this._pending){r=this._pending;this._pending=false;this.trigger("change",this,r)}}this._pending=false;this._changing=false;return this},unset:function(t,e){return this.set(t,void 0,i.extend({},e,{unset:true}))},clear:function(t){var e={};for(var r in this.attributes)e[r]=void 0;return this.set(e,i.extend({},t,{unset:true}))},hasChanged:function(t){if(t==null)return!i.isEmpty(this.changed);return i.has(this.changed,t)},changedAttributes:function(t){if(!t)return this.hasChanged()?i.clone(this.changed):false;var e=this._changing?this._previousAttributes:this.attributes;var r={};for(var n in t){var s=t[n];if(i.isEqual(e[n],s))continue;r[n]=s}return i.size(r)?r:false},previous:function(t){if(t==null||!this._previousAttributes)return null;return this._previousAttributes[t]},previousAttributes:function(){return i.clone(this._previousAttributes)},fetch:function(t){t=i.extend({parse:true},t);var e=this;var r=t.success;t.success=function(i){var n=t.parse?e.parse(i,t):i;if(!e.set(n,t))return false;if(r)r.call(t.context,e,i,t);e.trigger("sync",e,i,t)};B(this,t);return this.sync("read",this,t)},save:function(t,e,r){var n;if(t==null||typeof t==="object"){n=t;r=e}else{(n={})[t]=e}r=i.extend({validate:true,parse:true},r);var s=r.wait;if(n&&!s){if(!this.set(n,r))return false}else if(!this._validate(n,r)){return false}var a=this;var h=r.success;var o=this.attributes;r.success=function(t){a.attributes=o;var e=r.parse?a.parse(t,r):t;if(s)e=i.extend({},n,e);if(e&&!a.set(e,r))return false;if(h)h.call(r.context,a,t,r);a.trigger("sync",a,t,r)};B(this,r);if(n&&s)this.attributes=i.extend({},o,n);var l=this.isNew()?"create":r.patch?"patch":"update";if(l==="patch"&&!r.attrs)r.attrs=n;var u=this.sync(l,this,r);this.attributes=o;return u},destroy:function(t){t=t?i.clone(t):{};var e=this;var r=t.success;var n=t.wait;var s=function(){e.stopListening();e.trigger("destroy",e,e.collection,t)};t.success=function(i){if(n)s();if(r)r.call(t.context,e,i,t);if(!e.isNew())e.trigger("sync",e,i,t)};var a=false;if(this.isNew()){i.defer(t.success)}else{B(this,t);a=this.sync("delete",this,t)}if(!n)s();return a},url:function(){var t=i.result(this,"urlRoot")||i.result(this.collection,"url")||F();if(this.isNew())return t;var e=this.get(this.idAttribute);return t.replace(/[^\/]$/,"$&/")+encodeURIComponent(e)},parse:function(t,e){return t},clone:function(){return new this.constructor(this.attributes)},isNew:function(){return!this.has(this.idAttribute)},isValid:function(t){return this._validate({},i.extend({},t,{validate:true}))},_validate:function(t,e){if(!e.validate||!this.validate)return true;t=i.extend({},this.attributes,t);var r=this.validationError=this.validate(t,e)||null;if(!r)return true;this.trigger("invalid",this,r,i.extend(e,{validationError:r}));return false}});var b={keys:1,values:1,pairs:1,invert:1,pick:0,omit:0,chain:1,isEmpty:1};h(y,b,"attributes");var x=e.Collection=function(t,e){e||(e={});if(e.model)this.model=e.model;if(e.comparator!==void 0)this.comparator=e.comparator;this._reset();this.initialize.apply(this,arguments);if(t)this.reset(t,i.extend({silent:true},e))};var w={add:true,remove:true,merge:true};var E={add:true,remove:false};var I=function(t,e,i){i=Math.min(Math.max(i,0),t.length);var r=Array(t.length-i);var n=e.length;var s;for(s=0;s<r.length;s++)r[s]=t[s+i];for(s=0;s<n;s++)t[s+i]=e[s];for(s=0;s<r.length;s++)t[s+n+i]=r[s]};i.extend(x.prototype,u,{model:y,initialize:function(){},toJSON:function(t){return this.map(function(e){return e.toJSON(t)})},sync:function(){return e.sync.apply(this,arguments)},add:function(t,e){return this.set(t,i.extend({merge:false},e,E))},remove:function(t,e){e=i.extend({},e);var r=!i.isArray(t);t=r?[t]:t.slice();var n=this._removeModels(t,e);if(!e.silent&&n.length){e.changes={added:[],merged:[],removed:n};this.trigger("update",this,e)}return r?n[0]:n},set:function(t,e){if(t==null)return;e=i.extend({},w,e);if(e.parse&&!this._isModel(t)){t=this.parse(t,e)||[]}var r=!i.isArray(t);t=r?[t]:t.slice();var n=e.at;if(n!=null)n=+n;if(n>this.length)n=this.length;if(n<0)n+=this.length+1;var s=[];var a=[];var h=[];var o=[];var l={};var u=e.add;var c=e.merge;var f=e.remove;var d=false;var v=this.comparator&&n==null&&e.sort!==false;var g=i.isString(this.comparator)?this.comparator:null;var p,m;for(m=0;m<t.length;m++){p=t[m];var _=this.get(p);if(_){if(c&&p!==_){var y=this._isModel(p)?p.attributes:p;if(e.parse)y=_.parse(y,e);_.set(y,e);h.push(_);if(v&&!d)d=_.hasChanged(g)}if(!l[_.cid]){l[_.cid]=true;s.push(_)}t[m]=_}else if(u){p=t[m]=this._prepareModel(p,e);if(p){a.push(p);this._addReference(p,e);l[p.cid]=true;s.push(p)}}}if(f){for(m=0;m<this.length;m++){p=this.models[m];if(!l[p.cid])o.push(p)}if(o.length)this._removeModels(o,e)}var b=false;var x=!v&&u&&f;if(s.length&&x){b=this.length!==s.length||i.some(this.models,function(t,e){return t!==s[e]});this.models.length=0;I(this.models,s,0);this.length=this.models.length}else if(a.length){if(v)d=true;I(this.models,a,n==null?this.length:n);this.length=this.models.length}if(d)this.sort({silent:true});if(!e.silent){for(m=0;m<a.length;m++){if(n!=null)e.index=n+m;p=a[m];p.trigger("add",p,this,e)}if(d||b)this.trigger("sort",this,e);if(a.length||o.length||h.length){e.changes={added:a,removed:o,merged:h};this.trigger("update",this,e)}}return r?t[0]:t},reset:function(t,e){e=e?i.clone(e):{};for(var r=0;r<this.models.length;r++){this._removeReference(this.models[r],e)}e.previousModels=this.models;this._reset();t=this.add(t,i.extend({silent:true},e));if(!e.silent)this.trigger("reset",this,e);return t},push:function(t,e){return this.add(t,i.extend({at:this.length},e))},pop:function(t){var e=this.at(this.length-1);return this.remove(e,t)},unshift:function(t,e){return this.add(t,i.extend({at:0},e))},shift:function(t){var e=this.at(0);return this.remove(e,t)},slice:function(){return s.apply(this.models,arguments)},get:function(t){if(t==null)return void 0;return this._byId[t]||this._byId[this.modelId(t.attributes||t)]||t.cid&&this._byId[t.cid]},has:function(t){return this.get(t)!=null},at:function(t){if(t<0)t+=this.length;return this.models[t]},where:function(t,e){return this[e?"find":"filter"](t)},findWhere:function(t){return this.where(t,true)},sort:function(t){var e=this.comparator;if(!e)throw new Error("Cannot sort a set without a comparator");t||(t={});var r=e.length;if(i.isFunction(e))e=i.bind(e,this);if(r===1||i.isString(e)){this.models=this.sortBy(e)}else{this.models.sort(e)}if(!t.silent)this.trigger("sort",this,t);return this},pluck:function(t){return this.map(t+"")},fetch:function(t){t=i.extend({parse:true},t);var e=t.success;var r=this;t.success=function(i){var n=t.reset?"reset":"set";r[n](i,t);if(e)e.call(t.context,r,i,t);r.trigger("sync",r,i,t)};B(this,t);return this.sync("read",this,t)},create:function(t,e){e=e?i.clone(e):{};var r=e.wait;t=this._prepareModel(t,e);if(!t)return false;if(!r)this.add(t,e);var n=this;var s=e.success;e.success=function(t,e,i){if(r)n.add(t,i);if(s)s.call(i.context,t,e,i)};t.save(null,e);return t},parse:function(t,e){return t},clone:function(){return new this.constructor(this.models,{model:this.model,comparator:this.comparator})},modelId:function(t){return t[this.model.prototype.idAttribute||"id"]},_reset:function(){this.length=0;this.models=[];this._byId={}},_prepareModel:function(t,e){if(this._isModel(t)){if(!t.collection)t.collection=this;return t}e=e?i.clone(e):{};e.collection=this;var r=new this.model(t,e);if(!r.validationError)return r;this.trigger("invalid",this,r.validationError,e);return false},_removeModels:function(t,e){var i=[];for(var r=0;r<t.length;r++){var n=this.get(t[r]);if(!n)continue;var s=this.indexOf(n);this.models.splice(s,1);this.length--;delete this._byId[n.cid];var a=this.modelId(n.attributes);if(a!=null)delete this._byId[a];if(!e.silent){e.index=s;n.trigger("remove",n,this,e)}i.push(n);this._removeReference(n,e)}return i},_isModel:function(t){return t instanceof y},_addReference:function(t,e){this._byId[t.cid]=t;var i=this.modelId(t.attributes);if(i!=null)this._byId[i]=t;t.on("all",this._onModelEvent,this)},_removeReference:function(t,e){delete this._byId[t.cid];var i=this.modelId(t.attributes);if(i!=null)delete this._byId[i];if(this===t.collection)delete t.collection;t.off("all",this._onModelEvent,this)},_onModelEvent:function(t,e,i,r){if(e){if((t==="add"||t==="remove")&&i!==this)return;if(t==="destroy")this.remove(e,r);if(t==="change"){var n=this.modelId(e.previousAttributes());var s=this.modelId(e.attributes);if(n!==s){if(n!=null)delete this._byId[n];if(s!=null)this._byId[s]=e}}}this.trigger.apply(this,arguments)}});var S={forEach:3,each:3,map:3,collect:3,reduce:0,foldl:0,inject:0,reduceRight:0,foldr:0,find:3,detect:3,filter:3,select:3,reject:3,every:3,all:3,some:3,any:3,include:3,includes:3,contains:3,invoke:0,max:3,min:3,toArray:1,size:1,first:3,head:3,take:3,initial:3,rest:3,tail:3,drop:3,last:3,without:0,difference:0,indexOf:3,shuffle:1,lastIndexOf:3,isEmpty:1,chain:1,sample:3,partition:3,groupBy:3,countBy:3,sortBy:3,indexBy:3,findIndex:3,findLastIndex:3};h(x,S,"models");var k=e.View=function(t){this.cid=i.uniqueId("view");i.extend(this,i.pick(t,P));this._ensureElement();this.initialize.apply(this,arguments)};var T=/^(\S+)\s*(.*)$/;var P=["model","collection","el","id","attributes","className","tagName","events"];i.extend(k.prototype,u,{tagName:"div",$:function(t){return this.$el.find(t)},initialize:function(){},render:function(){return this},remove:function(){this._removeElement();this.stopListening();return this},_removeElement:function(){this.$el.remove()},setElement:function(t){this.undelegateEvents();this._setElement(t);this.delegateEvents();return this},_setElement:function(t){this.$el=t instanceof e.$?t:e.$(t);this.el=this.$el[0]},delegateEvents:function(t){t||(t=i.result(this,"events"));if(!t)return this;this.undelegateEvents();for(var e in t){var r=t[e];if(!i.isFunction(r))r=this[r];if(!r)continue;var n=e.match(T);this.delegate(n[1],n[2],i.bind(r,this))}return this},delegate:function(t,e,i){this.$el.on(t+".delegateEvents"+this.cid,e,i);return this},undelegateEvents:function(){if(this.$el)this.$el.off(".delegateEvents"+this.cid);return this},undelegate:function(t,e,i){this.$el.off(t+".delegateEvents"+this.cid,e,i);return this},_createElement:function(t){return document.createElement(t)},_ensureElement:function(){if(!this.el){var t=i.extend({},i.result(this,"attributes"));if(this.id)t.id=i.result(this,"id");if(this.className)t["class"]=i.result(this,"className");this.setElement(this._createElement(i.result(this,"tagName")));this._setAttributes(t)}else{this.setElement(i.result(this,"el"))}},_setAttributes:function(t){this.$el.attr(t)}});e.sync=function(t,r,n){var s=H[t];i.defaults(n||(n={}),{emulateHTTP:e.emulateHTTP,emulateJSON:e.emulateJSON});var a={type:s,dataType:"json"};if(!n.url){a.url=i.result(r,"url")||F()}if(n.data==null&&r&&(t==="create"||t==="update"||t==="patch")){a.contentType="application/json";a.data=JSON.stringify(n.attrs||r.toJSON(n))}if(n.emulateJSON){a.contentType="application/x-www-form-urlencoded";a.data=a.data?{model:a.data}:{}}if(n.emulateHTTP&&(s==="PUT"||s==="DELETE"||s==="PATCH")){a.type="POST";if(n.emulateJSON)a.data._method=s;var h=n.beforeSend;n.beforeSend=function(t){t.setRequestHeader("X-HTTP-Method-Override",s);if(h)return h.apply(this,arguments)}}if(a.type!=="GET"&&!n.emulateJSON){a.processData=false}var o=n.error;n.error=function(t,e,i){n.textStatus=e;n.errorThrown=i;if(o)o.call(n.context,t,e,i)};var l=n.xhr=e.ajax(i.extend(a,n));r.trigger("request",r,l,n);return l};var H={create:"POST",update:"PUT",patch:"PATCH","delete":"DELETE",read:"GET"};e.ajax=function(){return e.$.ajax.apply(e.$,arguments)};var $=e.Router=function(t){t||(t={});if(t.routes)this.routes=t.routes;this._bindRoutes();this.initialize.apply(this,arguments)};var A=/\((.*?)\)/g;var C=/(\(\?)?:\w+/g;var R=/\*\w+/g;var j=/[\-{}\[\]+?.,\\\^$|#\s]/g;i.extend($.prototype,u,{initialize:function(){},route:function(t,r,n){if(!i.isRegExp(t))t=this._routeToRegExp(t);if(i.isFunction(r)){n=r;r=""}if(!n)n=this[r];var s=this;e.history.route(t,function(i){var a=s._extractParameters(t,i);if(s.execute(n,a,r)!==false){s.trigger.apply(s,["route:"+r].concat(a));s.trigger("route",r,a);e.history.trigger("route",s,r,a)}});return this},execute:function(t,e,i){if(t)t.apply(this,e)},navigate:function(t,i){e.history.navigate(t,i);return this},_bindRoutes:function(){if(!this.routes)return;this.routes=i.result(this,"routes");var t,e=i.keys(this.routes);while((t=e.pop())!=null){this.route(t,this.routes[t])}},_routeToRegExp:function(t){t=t.replace(j,"\\$&").replace(A,"(?:$1)?").replace(C,function(t,e){return e?t:"([^/?]+)"}).replace(R,"([^?]*?)");return new RegExp("^"+t+"(?:\\?([\\s\\S]*))?$")},_extractParameters:function(t,e){var r=t.exec(e).slice(1);return i.map(r,function(t,e){if(e===r.length-1)return t||null;return t?decodeURIComponent(t):null})}});var N=e.History=function(){this.handlers=[];this.checkUrl=i.bind(this.checkUrl,this);if(typeof window!=="undefined"){this.location=window.location;this.history=window.history}};var M=/^[#\/]|\s+$/g;var O=/^\/+|\/+$/g;var U=/#.*$/;N.started=false;i.extend(N.prototype,u,{interval:50,atRoot:function(){var t=this.location.pathname.replace(/[^\/]$/,"$&/");return t===this.root&&!this.getSearch()},matchRoot:function(){var t=this.decodeFragment(this.location.pathname);var e=t.slice(0,this.root.length-1)+"/";return e===this.root},decodeFragment:function(t){return decodeURI(t.replace(/%25/g,"%2525"))},getSearch:function(){var t=this.location.href.replace(/#.*/,"").match(/\?.+/);return t?t[0]:""},getHash:function(t){var e=(t||this).location.href.match(/#(.*)$/);return e?e[1]:""},getPath:function(){var t=this.decodeFragment(this.location.pathname+this.getSearch()).slice(this.root.length-1);return t.charAt(0)==="/"?t.slice(1):t},getFragment:function(t){if(t==null){if(this._usePushState||!this._wantsHashChange){t=this.getPath()}else{t=this.getHash()}}return t.replace(M,"")},start:function(t){if(N.started)throw new Error("Backbone.history has already been started");N.started=true;this.options=i.extend({root:"/"},this.options,t);this.root=this.options.root;this._wantsHashChange=this.options.hashChange!==false;this._hasHashChange="onhashchange"in window&&(document.documentMode===void 0||document.documentMode>7);this._useHashChange=this._wantsHashChange&&this._hasHashChange;this._wantsPushState=!!this.options.pushState;this._hasPushState=!!(this.history&&this.history.pushState);this._usePushState=this._wantsPushState&&this._hasPushState;this.fragment=this.getFragment();this.root=("/"+this.root+"/").replace(O,"/");if(this._wantsHashChange&&this._wantsPushState){if(!this._hasPushState&&!this.atRoot()){var e=this.root.slice(0,-1)||"/";this.location.replace(e+"#"+this.getPath());return true}else if(this._hasPushState&&this.atRoot()){this.navigate(this.getHash(),{replace:true})}}if(!this._hasHashChange&&this._wantsHashChange&&!this._usePushState){this.iframe=document.createElement("iframe");this.iframe.src="javascript:0";this.iframe.style.display="none";this.iframe.tabIndex=-1;var r=document.body;var n=r.insertBefore(this.iframe,r.firstChild).contentWindow;n.document.open();n.document.close();n.location.hash="#"+this.fragment}var s=window.addEventListener||function(t,e){return attachEvent("on"+t,e)};if(this._usePushState){s("popstate",this.checkUrl,false)}else if(this._useHashChange&&!this.iframe){s("hashchange",this.checkUrl,false)}else if(this._wantsHashChange){this._checkUrlInterval=setInterval(this.checkUrl,this.interval)}if(!this.options.silent)return this.loadUrl()},stop:function(){var t=window.removeEventListener||function(t,e){return detachEvent("on"+t,e)};if(this._usePushState){t("popstate",this.checkUrl,false)}else if(this._useHashChange&&!this.iframe){t("hashchange",this.checkUrl,false)}if(this.iframe){document.body.removeChild(this.iframe);this.iframe=null}if(this._checkUrlInterval)clearInterval(this._checkUrlInterval);N.started=false},route:function(t,e){this.handlers.unshift({route:t,callback:e})},checkUrl:function(t){var e=this.getFragment();if(e===this.fragment&&this.iframe){e=this.getHash(this.iframe.contentWindow)}if(e===this.fragment)return false;if(this.iframe)this.navigate(e);this.loadUrl()},loadUrl:function(t){if(!this.matchRoot())return false;t=this.fragment=this.getFragment(t);return i.some(this.handlers,function(e){if(e.route.test(t)){e.callback(t);return true}})},navigate:function(t,e){if(!N.started)return false;if(!e||e===true)e={trigger:!!e};t=this.getFragment(t||"");var i=this.root;if(t===""||t.charAt(0)==="?"){i=i.slice(0,-1)||"/"}var r=i+t;t=this.decodeFragment(t.replace(U,""));if(this.fragment===t)return;this.fragment=t;if(this._usePushState){this.history[e.replace?"replaceState":"pushState"]({},document.title,r)}else if(this._wantsHashChange){this._updateHash(this.location,t,e.replace);if(this.iframe&&t!==this.getHash(this.iframe.contentWindow)){var n=this.iframe.contentWindow;if(!e.replace){n.document.open();n.document.close()}this._updateHash(n.location,t,e.replace)}}else{return this.location.assign(r)}if(e.trigger)return this.loadUrl(t)},_updateHash:function(t,e,i){if(i){var r=t.href.replace(/(javascript:|#).*$/,"");t.replace(r+"#"+e)}else{t.hash="#"+e}}});e.history=new N;var q=function(t,e){var r=this;var n;if(t&&i.has(t,"constructor")){n=t.constructor}else{n=function(){return r.apply(this,arguments)}}i.extend(n,r,e);n.prototype=i.create(r.prototype,t);n.prototype.constructor=n;n.__super__=r.prototype;return n};y.extend=x.extend=$.extend=k.extend=N.extend=q;var F=function(){throw new Error('A "url" property or function must be specified')};var B=function(t,e){var i=e.error;e.error=function(r){if(i)i.call(e.context,t,r,e);t.trigger("error",t,r,e)}};return e});
;
!function(a){function b(a){return a=b.buildAjaxOptions(a),b.transport(a)}var c=window.wpApiSettings;b.buildAjaxOptions=function(b){var d,e,f,g,h,i=b.url,j=b.path;if("string"==typeof b.namespace&&"string"==typeof b.endpoint&&(d=b.namespace.replace(/^\/|\/$/g,""),e=b.endpoint.replace(/^\//,""),j=e?d+"/"+e:d),"string"==typeof j&&(i=c.root+j.replace(/^\//,"")),g=!(b.data&&b.data._wpnonce),f=b.headers||{},g)for(h in f)if(f.hasOwnProperty(h)&&"x-wp-nonce"===h.toLowerCase()){g=!1;break}return g&&(f=a.extend({"X-WP-Nonce":c.nonce},f)),b=a.extend({},b,{headers:f,url:i}),delete b.path,delete b.namespace,delete b.endpoint,b},b.transport=a.ajax,window.wp=window.wp||{},window.wp.apiRequest=b}(jQuery);;
!function(a,b){"use strict";function c(){this.models={},this.collections={},this.views={}}a.wp=a.wp||{},wp.api=wp.api||new c,wp.api.versionString=wp.api.versionString||"wp/v2/",!_.isFunction(_.includes)&&_.isFunction(_.contains)&&(_.includes=_.contains)}(window),function(a,b){"use strict";var c,d;a.wp=a.wp||{},wp.api=wp.api||{},wp.api.utils=wp.api.utils||{},wp.api.getModelByRoute=function(a){return _.find(wp.api.models,function(b){return b.prototype.route&&a===b.prototype.route.index})},wp.api.getCollectionByRoute=function(a){return _.find(wp.api.collections,function(b){return b.prototype.route&&a===b.prototype.route.index})},Date.prototype.toISOString||(c=function(a){return d=String(a),1===d.length&&(d="0"+d),d},Date.prototype.toISOString=function(){return this.getUTCFullYear()+"-"+c(this.getUTCMonth()+1)+"-"+c(this.getUTCDate())+"T"+c(this.getUTCHours())+":"+c(this.getUTCMinutes())+":"+c(this.getUTCSeconds())+"."+String((this.getUTCMilliseconds()/1e3).toFixed(3)).slice(2,5)+"Z"}),wp.api.utils.parseISO8601=function(a){var c,d,e,f,g=0,h=[1,4,5,6,7,10,11];if(d=/^(\d{4}|[+\-]\d{6})(?:-(\d{2})(?:-(\d{2}))?)?(?:T(\d{2}):(\d{2})(?::(\d{2})(?:\.(\d{3}))?)?(?:(Z)|([+\-])(\d{2})(?::(\d{2}))?)?)?$/.exec(a)){for(e=0;f=h[e];++e)d[f]=+d[f]||0;d[2]=(+d[2]||1)-1,d[3]=+d[3]||1,"Z"!==d[8]&&b!==d[9]&&(g=60*d[10]+d[11],"+"===d[9]&&(g=0-g)),c=Date.UTC(d[1],d[2],d[3],d[4],d[5]+g,d[6],d[7])}else c=Date.parse?Date.parse(a):NaN;return c},wp.api.utils.getRootUrl=function(){return a.location.origin?a.location.origin+"/":a.location.protocol+"/"+a.location.host+"/"},wp.api.utils.capitalize=function(a){return _.isUndefined(a)?a:a.charAt(0).toUpperCase()+a.slice(1)},wp.api.utils.capitalizeAndCamelCaseDashes=function(a){return _.isUndefined(a)?a:(a=wp.api.utils.capitalize(a),wp.api.utils.camelCaseDashes(a))},wp.api.utils.camelCaseDashes=function(a){return a.replace(/-([a-z])/g,function(a){return a[1].toUpperCase()})},wp.api.utils.extractRoutePart=function(a,b,c,d){var e;return b=b||1,c=c||wp.api.versionString,0===a.indexOf("/"+c)&&(a=a.substr(c.length+1)),e=a.split("/"),d&&(e=e.reverse()),_.isUndefined(e[--b])?"":e[b]},wp.api.utils.extractParentName=function(a){var b,c=a.lastIndexOf("_id>[\\d]+)/");return c<0?"":(b=a.substr(0,c-1),b=b.split("/"),b.pop(),b=b.pop())},wp.api.utils.decorateFromRoute=function(a,b){_.each(a,function(a){_.includes(a.methods,"POST")||_.includes(a.methods,"PUT")?_.isEmpty(a.args)||(_.isEmpty(b.prototype.args)?b.prototype.args=a.args:b.prototype.args=_.extend(b.prototype.args,a.args)):_.includes(a.methods,"GET")&&(_.isEmpty(a.args)||(_.isEmpty(b.prototype.options)?b.prototype.options=a.args:b.prototype.options=_.extend(b.prototype.options,a.args)))})},wp.api.utils.addMixinsAndHelpers=function(a,b,c){var d=!1,e=["date","modified","date_gmt","modified_gmt"],f={setDate:function(a,b){var c=b||"date";return!(_.indexOf(e,c)<0)&&void this.set(c,a.toISOString())},getDate:function(a){var b=a||"date",c=this.get(b);return!(_.indexOf(e,b)<0||_.isNull(c))&&new Date(wp.api.utils.parseISO8601(c))}},g=function(a,b,c,d,e){var f,g,h,i;return i=jQuery.Deferred(),g=a.get("_embedded")||{},_.isNumber(b)&&0!==b?(g[d]&&(h=_.findWhere(g[d],{id:b})),h||(h={id:b}),f=new wp.api.models[c](h),f.get(e)?i.resolve(f):f.fetch({success:function(a){i.resolve(a)},error:function(a,b){i.reject(b)}}),i.promise()):(i.reject(),i)},h=function(a,b,c,d){var e,f,g,h="",j="",k=jQuery.Deferred();return e=a.get("id"),f=a.get("_embedded")||{},_.isNumber(e)&&0!==e?(_.isUndefined(c)||_.isUndefined(f[c])?h={parent:e}:j=_.isUndefined(d)?f[c]:f[c][d],g=new wp.api.collections[b](j,h),_.isUndefined(g.models[0])?g.fetch({success:function(a){i(a,e),k.resolve(a)},error:function(a,b){k.reject(b)}}):(i(g,e),k.resolve(g)),k.promise()):(k.reject(),k)},i=function(a,b){_.each(a.models,function(a){a.set("parent_post",b)})},j={getMeta:function(a){var b=this.get("meta");return b[a]},getMetas:function(){return this.get("meta")},setMetas:function(a){var b=this.get("meta");_.extend(b,a),this.set("meta",b)},setMeta:function(a,b){var c=this.get("meta");c[a]=b,this.set("meta",c)}},k={getRevisions:function(){return h(this,"PostRevisions")}},l={getTags:function(){var a=this.get("tags"),b=new wp.api.collections.Tags;return _.isEmpty(a)?jQuery.Deferred().resolve([]):b.fetch({data:{include:a}})},setTags:function(a){var b,c,d=this,e=[];return!_.isString(a)&&void(_.isArray(a)?(b=new wp.api.collections.Tags,b.fetch({data:{per_page:100},success:function(b){_.each(a,function(a){c=new wp.api.models.Tag(b.findWhere({slug:a})),c.set("parent_post",d.get("id")),e.push(c)}),a=new wp.api.collections.Tags(e),d.setTagsWithCollection(a)}})):this.setTagsWithCollection(a))},setTagsWithCollection:function(a){return this.set("tags",a.pluck("id")),this.save()}},m={getCategories:function(){var a=this.get("categories"),b=new wp.api.collections.Categories;return _.isEmpty(a)?jQuery.Deferred().resolve([]):b.fetch({data:{include:a}})},setCategories:function(a){var b,c,d=this,e=[];return!_.isString(a)&&void(_.isArray(a)?(b=new wp.api.collections.Categories,b.fetch({data:{per_page:100},success:function(b){_.each(a,function(a){c=new wp.api.models.Category(b.findWhere({slug:a})),c.set("parent_post",d.get("id")),e.push(c)}),a=new wp.api.collections.Categories(e),d.setCategoriesWithCollection(a)}})):this.setCategoriesWithCollection(a))},setCategoriesWithCollection:function(a){return this.set("categories",a.pluck("id")),this.save()}},n={getAuthorUser:function(){return g(this,this.get("author"),"User","author","name")}},o={getFeaturedMedia:function(){return g(this,this.get("featured_media"),"Media","wp:featuredmedia","source_url")}};return _.isUndefined(a.prototype.args)?a:(_.each(e,function(b){_.isUndefined(a.prototype.args[b])||(d=!0)}),d&&(a=a.extend(f)),_.isUndefined(a.prototype.args.author)||(a=a.extend(n)),_.isUndefined(a.prototype.args.featured_media)||(a=a.extend(o)),_.isUndefined(a.prototype.args.categories)||(a=a.extend(m)),_.isUndefined(a.prototype.args.meta)||(a=a.extend(j)),_.isUndefined(a.prototype.args.tags)||(a=a.extend(l)),_.isUndefined(c.collections[b+"Revisions"])||(a=a.extend(k)),a)}}(window),function(){"use strict";var a=window.wpApiSettings||{},b=["Comment","Media","Comment","Post","Page","Status","Taxonomy","Type"];wp.api.WPApiBaseModel=Backbone.Model.extend({initialize:function(){-1===_.indexOf(b,this.name)&&(this.requireForceForDelete=!0)},sync:function(a,b,c){var d;return c=c||{},_.isNull(b.get("date_gmt"))&&b.unset("date_gmt"),_.isEmpty(b.get("slug"))&&b.unset("slug"),_.isFunction(b.nonce)&&!_.isEmpty(b.nonce())&&(d=c.beforeSend,c.beforeSend=function(a){if(a.setRequestHeader("X-WP-Nonce",b.nonce()),d)return d.apply(this,arguments)},c.complete=function(a){var c=a.getResponseHeader("X-WP-Nonce");c&&_.isFunction(b.nonce)&&b.nonce()!==c&&b.endpointModel.set("nonce",c)}),this.requireForceForDelete&&"delete"===a&&(b.url=b.url()+"?force=true"),Backbone.sync(a,b,c)},save:function(a,b){return!(!_.includes(this.methods,"PUT")&&!_.includes(this.methods,"POST"))&&Backbone.Model.prototype.save.call(this,a,b)},destroy:function(a){return!!_.includes(this.methods,"DELETE")&&Backbone.Model.prototype.destroy.call(this,a)}}),wp.api.models.Schema=wp.api.WPApiBaseModel.extend({defaults:{_links:{},namespace:null,routes:{}},initialize:function(b,c){var d=this;c=c||{},wp.api.WPApiBaseModel.prototype.initialize.call(d,b,c),d.apiRoot=c.apiRoot||a.root,d.versionString=c.versionString||a.versionString},url:function(){return this.apiRoot+this.versionString}})}(),function(){"use strict";window.wpApiSettings||{};wp.api.WPApiBaseCollection=Backbone.Collection.extend({initialize:function(a,b){this.state={data:{},currentPage:null,totalPages:null,totalObjects:null},_.isUndefined(b)?this.parent="":this.parent=b.parent},sync:function(a,b,c){var d,e,f=this;return c=c||{},_.isFunction(b.nonce)&&!_.isEmpty(b.nonce())&&(d=c.beforeSend,c.beforeSend=function(a){if(a.setRequestHeader("X-WP-Nonce",b.nonce()),d)return d.apply(f,arguments)},c.complete=function(a){var c=a.getResponseHeader("X-WP-Nonce");c&&_.isFunction(b.nonce)&&b.nonce()!==c&&b.endpointModel.set("nonce",c)}),"read"===a&&(c.data?(f.state.data=_.clone(c.data),delete f.state.data.page):f.state.data=c.data={},"undefined"==typeof c.data.page?(f.state.currentPage=null,f.state.totalPages=null,f.state.totalObjects=null):f.state.currentPage=c.data.page-1,e=c.success,c.success=function(a,b,c){if(_.isUndefined(c)||(f.state.totalPages=parseInt(c.getResponseHeader("x-wp-totalpages"),10),f.state.totalObjects=parseInt(c.getResponseHeader("x-wp-total"),10)),null===f.state.currentPage?f.state.currentPage=1:f.state.currentPage++,e)return e.apply(this,arguments)}),Backbone.sync(a,b,c)},more:function(a){if(a=a||{},a.data=a.data||{},_.extend(a.data,this.state.data),"undefined"==typeof a.data.page){if(!this.hasMore())return!1;null===this.state.currentPage||this.state.currentPage<=1?a.data.page=2:a.data.page=this.state.currentPage+1}return this.fetch(a)},hasMore:function(){return null===this.state.totalPages||null===this.state.totalObjects||null===this.state.currentPage?null:this.state.currentPage<this.state.totalPages}})}(),function(){"use strict";var a,b={},c=window.wpApiSettings||{};window.wp=window.wp||{},wp.api=wp.api||{},_.isEmpty(c)&&(c.root=window.location.origin+"/wp-json/"),a=Backbone.Model.extend({defaults:{apiRoot:c.root,versionString:wp.api.versionString,nonce:null,schema:null,models:{},collections:{}},initialize:function(){var a,b=this;Backbone.Model.prototype.initialize.apply(b,arguments),a=jQuery.Deferred(),b.schemaConstructed=a.promise(),b.schemaModel=new wp.api.models.Schema(null,{apiRoot:b.get("apiRoot"),versionString:b.get("versionString"),nonce:b.get("nonce")}),b.schemaModel.once("change",function(){b.constructFromSchema(),a.resolve(b)}),b.get("schema")?b.schemaModel.set(b.schemaModel.parse(b.get("schema"))):!_.isUndefined(sessionStorage)&&(_.isUndefined(c.cacheSchema)||c.cacheSchema)&&sessionStorage.getItem("wp-api-schema-model"+b.get("apiRoot")+b.get("versionString"))?b.schemaModel.set(b.schemaModel.parse(JSON.parse(sessionStorage.getItem("wp-api-schema-model"+b.get("apiRoot")+b.get("versionString"))))):b.schemaModel.fetch({success:function(a){if(!_.isUndefined(sessionStorage)&&(_.isUndefined(c.cacheSchema)||c.cacheSchema))try{sessionStorage.setItem("wp-api-schema-model"+b.get("apiRoot")+b.get("versionString"),JSON.stringify(a))}catch(d){}},error:function(a){window.console.log(a)}})},constructFromSchema:function(){var a,b,d,e,f=this,g=c.mapping||{models:{Categories:"Category",Comments:"Comment",Pages:"Page",PagesMeta:"PageMeta",PagesRevisions:"PageRevision",Posts:"Post",PostsCategories:"PostCategory",PostsRevisions:"PostRevision",PostsTags:"PostTag",Schema:"Schema",Statuses:"Status",Tags:"Tag",Taxonomies:"Taxonomy",Types:"Type",Users:"User"},collections:{PagesMeta:"PageMeta",PagesRevisions:"PageRevisions",PostsCategories:"PostCategories",PostsMeta:"PostMeta",PostsRevisions:"PostRevisions",PostsTags:"PostTags"}},h=f.get("modelEndpoints"),i=new RegExp("(?:.*[+)]|/("+h.join("|")+"))$");a=[],b=[],d=f.get("apiRoot").replace(wp.api.utils.getRootUrl(),""),e={},e.models={},e.collections={},_.each(f.schemaModel.get("routes"),function(c,e){e!==f.get(" versionString")&&e!==d&&e!=="/"+f.get("versionString").slice(0,-1)&&(i.test(e)?a.push({index:e,route:c}):b.push({index:e,route:c}))}),_.each(a,function(a){var b,c=wp.api.utils.extractRoutePart(a.index,2,f.get("versionString"),!0),d=wp.api.utils.extractRoutePart(a.index,1,f.get("versionString"),!1),h=wp.api.utils.extractRoutePart(a.index,1,f.get("versionString"),!0);d===f.get("versionString")&&(d=""),"me"===h&&(c="me"),""!==d&&d!==c?(b=wp.api.utils.capitalizeAndCamelCaseDashes(d)+wp.api.utils.capitalizeAndCamelCaseDashes(c),b=g.models[b]||b,e.models[b]=wp.api.WPApiBaseModel.extend({url:function(){var a=f.get("apiRoot")+f.get("versionString")+d+"/"+(_.isUndefined(this.get("parent"))||0===this.get("parent")?_.isUndefined(this.get("parent_post"))?"":this.get("parent_post")+"/":this.get("parent")+"/")+c;return _.isUndefined(this.get("id"))||(a+="/"+this.get("id")),a},nonce:function(){return f.get("nonce")},endpointModel:f,route:a,name:b,methods:a.route.methods,endpoints:a.route.endpoints})):(b=wp.api.utils.capitalizeAndCamelCaseDashes(c),b=g.models[b]||b,e.models[b]=wp.api.WPApiBaseModel.extend({url:function(){var a=f.get("apiRoot")+f.get("versionString")+("me"===c?"users/me":c);return _.isUndefined(this.get("id"))||(a+="/"+this.get("id")),a},nonce:function(){return f.get("nonce")},endpointModel:f,route:a,name:b,methods:a.route.methods,endpoints:a.route.endpoints})),wp.api.utils.decorateFromRoute(a.route.endpoints,e.models[b],f.get("versionString"))}),_.each(b,function(a){var b,c,d=a.index.slice(a.index.lastIndexOf("/")+1),h=wp.api.utils.extractRoutePart(a.index,1,f.get("versionString"),!1);""!==h&&h!==d&&f.get("versionString")!==h?(b=wp.api.utils.capitalizeAndCamelCaseDashes(h)+wp.api.utils.capitalizeAndCamelCaseDashes(d),c=g.models[b]||b,b=g.collections[b]||b,e.collections[b]=wp.api.WPApiBaseCollection.extend({url:function(){return f.get("apiRoot")+f.get("versionString")+h+"/"+this.parent+"/"+d},model:function(a,b){return new e.models[c](a,b)},nonce:function(){return f.get("nonce")},endpointModel:f,name:b,route:a,methods:a.route.methods})):(b=wp.api.utils.capitalizeAndCamelCaseDashes(d),c=g.models[b]||b,b=g.collections[b]||b,e.collections[b]=wp.api.WPApiBaseCollection.extend({url:function(){return f.get("apiRoot")+f.get("versionString")+d},model:function(a,b){return new e.models[c](a,b)},nonce:function(){return f.get("nonce")},endpointModel:f,name:b,route:a,methods:a.route.methods})),wp.api.utils.decorateFromRoute(a.route.endpoints,e.collections[b])}),_.each(e.models,function(a,b){e.models[b]=wp.api.utils.addMixinsAndHelpers(a,b,e)}),f.set("models",e.models),f.set("collections",e.collections)}}),wp.api.endpoints=new Backbone.Collection,wp.api.init=function(d){var e,f,g,h={};return d=d||{},h.nonce=_.isString(d.nonce)?d.nonce:c.nonce||"",h.apiRoot=d.apiRoot||c.root||"/wp-json",h.versionString=d.versionString||c.versionString||"wp/v2/",h.schema=d.schema||null,h.modelEndpoints=d.modelEndpoints||["me","settings"],h.schema||h.apiRoot!==c.root||h.versionString!==c.versionString||(h.schema=c.schema),b[h.apiRoot+h.versionString]||(e=wp.api.endpoints.findWhere({apiRoot:h.apiRoot,versionString:h.versionString}),e||(e=new a(h)),f=jQuery.Deferred(),g=f.promise(),e.schemaConstructed.done(function(a){wp.api.endpoints.add(a),wp.api.models=_.extend(wp.api.models,a.get("models")),wp.api.collections=_.extend(wp.api.collections,a.get("collections")),f.resolve(a)}),b[h.apiRoot+h.versionString]=g),b[h.apiRoot+h.versionString]},wp.api.loadPromise=wp.api.init()}();;
/*!
 * JavaScript Cookie v2.0.3
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */
(function (factory) {
	if (typeof define === 'function' && define.amd) {
		define(factory);
	} else if (typeof exports === 'object') {
		module.exports = factory();
	} else {
		var _OldCookies = window.Cookies;
		var api = window.Cookies = factory();
		api.noConflict = function () {
			window.Cookies = _OldCookies;
			return api;
		};
	}
}(function () {
	function extend () {
		var i = 0;
		var result = {};
		for (; i < arguments.length; i++) {
			var attributes = arguments[ i ];
			for (var key in attributes) {
				result[key] = attributes[key];
			}
		}
		return result;
	}

	function init (converter) {
		function api (key, value, attributes) {
			var result;

			// Write

			if (arguments.length > 1) {
				attributes = extend({
					path: '/'
				}, api.defaults, attributes);

				if (typeof attributes.expires === 'number') {
					var expires = new Date();
					expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);
					attributes.expires = expires;
				}

				try {
					result = JSON.stringify(value);
					if (/^[\{\[]/.test(result)) {
						value = result;
					}
				} catch (e) {}

				value = encodeURIComponent(String(value));
				value = value.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);

				key = encodeURIComponent(String(key));
				key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);
				key = key.replace(/[\(\)]/g, escape);

				return (document.cookie = [
					key, '=', value,
					attributes.expires && '; expires=' + attributes.expires.toUTCString(), // use expires attribute, max-age is not supported by IE
					attributes.path    && '; path=' + attributes.path,
					attributes.domain  && '; domain=' + attributes.domain,
					attributes.secure ? '; secure' : ''
				].join(''));
			}

			// Read

			if (!key) {
				result = {};
			}

			// To prevent the for loop in the first place assign an empty array
			// in case there are no cookies at all. Also prevents odd result when
			// calling "get()"
			var cookies = document.cookie ? document.cookie.split('; ') : [];
			var rdecode = /(%[0-9A-Z]{2})+/g;
			var i = 0;

			for (; i < cookies.length; i++) {
				var parts = cookies[i].split('=');
				var name = parts[0].replace(rdecode, decodeURIComponent);
				var cookie = parts.slice(1).join('=');

				if (cookie.charAt(0) === '"') {
					cookie = cookie.slice(1, -1);
				}

				try {
					cookie = converter && converter(cookie, name) || cookie.replace(rdecode, decodeURIComponent);

					if (this.json) {
						try {
							cookie = JSON.parse(cookie);
						} catch (e) {}
					}

					if (key === name) {
						result = cookie;
						break;
					}

					if (!key) {
						result[name] = cookie;
					}
				} catch (e) {}
			}

			return result;
		}

		api.get = api.set = api;
		api.getJSON = function () {
			return api.apply({
				json: true
			}, [].slice.call(arguments));
		};
		api.defaults = {};

		api.remove = function (key, attributes) {
			api(key, '', extend(attributes, {
				expires: -1
			}));
		};

		api.withConverter = init;

		return api;
	}

	return init();
}));
/*
     _ _      _       _
 ___| (_) ___| | __  (_)___
/ __| | |/ __| |/ /  | / __|
\__ \ | | (__|   < _ | \__ \
|___/_|_|\___|_|\_(_)/ |___/
                   |__/

 Version: 1.5.5
  Author: Ken Wheeler
 Website: http://kenwheeler.github.io
    Docs: http://kenwheeler.github.io/slick
    Repo: http://github.com/kenwheeler/slick
  Issues: http://github.com/kenwheeler/slick/issues

 */
/* global window, document, define, jQuery, setInterval, clearInterval */
(function(factory) {
    'use strict';
    if (typeof define === 'function' && define.amd) {
        define(['jquery'], factory);
    } else if (typeof exports !== 'undefined') {
        module.exports = factory(require('jquery'));
    } else {
        factory(jQuery);
    }

}(function($) {
    'use strict';
    var Slick = window.Slick || {};

    Slick = (function() {

        var instanceUid = 0;

        function Slick(element, settings) {

            var _ = this,
                dataSettings, responsiveSettings, breakpoint;

            _.defaults = {
                accessibility: true,
                adaptiveHeight: false,
                appendArrows: $(element),
                appendDots: $(element),
                arrows: true,
                asNavFor: null,
                prevArrow: '<button type="button" data-role="none" class="slick-prev" aria-label="previous">Previous</button>',
                nextArrow: '<button type="button" data-role="none" class="slick-next" aria-label="next">Next</button>',
                autoplay: false,
                autoplaySpeed: 3000,
                centerMode: false,
                centerPadding: '50px',
                cssEase: 'ease',
                customPaging: function(slider, i) {
                    return '<button type="button" data-role="none">' + (i + 1) + '</button>';
                },
                dots: false,
                dotsClass: 'slick-dots',
                draggable: true,
                easing: 'linear',
                edgeFriction: 0.35,
                fade: false,
                focusOnSelect: false,
                infinite: true,
                initialSlide: 0,
                lazyLoad: 'ondemand',
                mobileFirst: false,
                pauseOnHover: true,
                pauseOnDotsHover: false,
                respondTo: 'window',
                responsive: null,
                rows: 1,
                rtl: false,
                slide: '',
                slidesPerRow: 1,
                slidesToShow: 1,
                slidesToScroll: 1,
                speed: 500,
                swipe: true,
                swipeToSlide: false,
                touchMove: true,
                touchThreshold: 5,
                useCSS: true,
                variableWidth: false,
                vertical: false,
                verticalSwiping: false,
                waitForAnimate: true,
                zIndex: 1000
            };

            _.initials = {
                animating: false,
                dragging: false,
                autoPlayTimer: null,
                currentDirection: 0,
                currentLeft: null,
                currentSlide: 0,
                direction: 1,
                $dots: null,
                listWidth: null,
                listHeight: null,
                loadIndex: 0,
                $nextArrow: null,
                $prevArrow: null,
                slideCount: null,
                slideWidth: null,
                $slideTrack: null,
                $slides: null,
                sliding: false,
                slideOffset: 0,
                swipeLeft: null,
                $list: null,
                touchObject: {},
                transformsEnabled: false,
                unslicked: false
            };

            $.extend(_, _.initials);

            _.activeBreakpoint = null;
            _.animType = null;
            _.animProp = null;
            _.breakpoints = [];
            _.breakpointSettings = [];
            _.cssTransitions = false;
            _.hidden = 'hidden';
            _.paused = false;
            _.positionProp = null;
            _.respondTo = null;
            _.rowCount = 1;
            _.shouldClick = true;
            _.$slider = $(element);
            _.$slidesCache = null;
            _.transformType = null;
            _.transitionType = null;
            _.visibilityChange = 'visibilitychange';
            _.windowWidth = 0;
            _.windowTimer = null;

            dataSettings = $(element).data('slick') || {};

            _.options = $.extend({}, _.defaults, dataSettings, settings);

            _.currentSlide = _.options.initialSlide;

            _.originalSettings = _.options;
            responsiveSettings = _.options.responsive || null;

            if (responsiveSettings && responsiveSettings.length > -1) {
                _.respondTo = _.options.respondTo || 'window';
                for (breakpoint in responsiveSettings) {
                    if (responsiveSettings.hasOwnProperty(breakpoint)) {
                        _.breakpoints.push(responsiveSettings[
                            breakpoint].breakpoint);
                        _.breakpointSettings[responsiveSettings[
                                breakpoint].breakpoint] =
                            responsiveSettings[breakpoint].settings;
                    }
                }
                _.breakpoints.sort(function(a, b) {
                    if (_.options.mobileFirst === true) {
                        return a - b;
                    } else {
                        return b - a;
                    }
                });
            }

            if (typeof document.mozHidden !== 'undefined') {
                _.hidden = 'mozHidden';
                _.visibilityChange = 'mozvisibilitychange';
            } else if (typeof document.webkitHidden !== 'undefined') {
                _.hidden = 'webkitHidden';
                _.visibilityChange = 'webkitvisibilitychange';
            }

            _.autoPlay = $.proxy(_.autoPlay, _);
            _.autoPlayClear = $.proxy(_.autoPlayClear, _);
            _.changeSlide = $.proxy(_.changeSlide, _);
            _.clickHandler = $.proxy(_.clickHandler, _);
            _.selectHandler = $.proxy(_.selectHandler, _);
            _.setPosition = $.proxy(_.setPosition, _);
            _.swipeHandler = $.proxy(_.swipeHandler, _);
            _.dragHandler = $.proxy(_.dragHandler, _);
            _.keyHandler = $.proxy(_.keyHandler, _);
            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);

            _.instanceUid = instanceUid++;

            // A simple way to check for HTML strings
            // Strict HTML recognition (must start with <)
            // Extracted from jQuery v1.11 source
            _.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/;

            _.init(true);

            _.checkResponsive(true);

        }

        return Slick;

    }());

    Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {

        var _ = this;

        if (typeof(index) === 'boolean') {
            addBefore = index;
            index = null;
        } else if (index < 0 || (index >= _.slideCount)) {
            return false;
        }

        _.unload();

        if (typeof(index) === 'number') {
            if (index === 0 && _.$slides.length === 0) {
                $(markup).appendTo(_.$slideTrack);
            } else if (addBefore) {
                $(markup).insertBefore(_.$slides.eq(index));
            } else {
                $(markup).insertAfter(_.$slides.eq(index));
            }
        } else {
            if (addBefore === true) {
                $(markup).prependTo(_.$slideTrack);
            } else {
                $(markup).appendTo(_.$slideTrack);
            }
        }

        _.$slides = _.$slideTrack.children(this.options.slide);

        _.$slideTrack.children(this.options.slide).detach();

        _.$slideTrack.append(_.$slides);

        _.$slides.each(function(index, element) {
            $(element).attr('data-slick-index', index);
        });

        _.$slidesCache = _.$slides;

        _.reinit();

    };

    Slick.prototype.animateHeight = function() {
        var _ = this;
        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);
            _.$list.animate({
                height: targetHeight
            }, _.options.speed);
        }
    };

    Slick.prototype.animateSlide = function(targetLeft, callback) {

        var animProps = {},
            _ = this;

        _.animateHeight();

        if (_.options.rtl === true && _.options.vertical === false) {
            targetLeft = -targetLeft;
        }
        if (_.transformsEnabled === false) {
            if (_.options.vertical === false) {
                _.$slideTrack.animate({
                    left: targetLeft
                }, _.options.speed, _.options.easing, callback);
            } else {
                _.$slideTrack.animate({
                    top: targetLeft
                }, _.options.speed, _.options.easing, callback);
            }

        } else {

            if (_.cssTransitions === false) {
                if (_.options.rtl === true) {
                    _.currentLeft = -(_.currentLeft);
                }
                $({
                    animStart: _.currentLeft
                }).animate({
                    animStart: targetLeft
                }, {
                    duration: _.options.speed,
                    easing: _.options.easing,
                    step: function(now) {
                        now = Math.ceil(now);
                        if (_.options.vertical === false) {
                            animProps[_.animType] = 'translate(' +
                                now + 'px, 0px)';
                            _.$slideTrack.css(animProps);
                        } else {
                            animProps[_.animType] = 'translate(0px,' +
                                now + 'px)';
                            _.$slideTrack.css(animProps);
                        }
                    },
                    complete: function() {
                        if (callback) {
                            callback.call();
                        }
                    }
                });

            } else {

                _.applyTransition();
                targetLeft = Math.ceil(targetLeft);

                if (_.options.vertical === false) {
                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';
                } else {
                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';
                }
                _.$slideTrack.css(animProps);

                if (callback) {
                    setTimeout(function() {

                        _.disableTransition();

                        callback.call();
                    }, _.options.speed);
                }

            }

        }

    };

    Slick.prototype.asNavFor = function(index) {

        var _ = this,
            asNavFor = _.options.asNavFor;

        if ( asNavFor && asNavFor !== null ) {
            asNavFor = $(asNavFor).not(_.$slider);
        }

        if ( asNavFor !== null && typeof asNavFor === 'object' ) {
            asNavFor.each(function() {
                var target = $(this).slick('getSlick');
                if(!target.unslicked) {
                    target.slideHandler(index, true);
                }
            });
        }

    };

    Slick.prototype.applyTransition = function(slide) {

        var _ = this,
            transition = {};

        if (_.options.fade === false) {
            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;
        } else {
            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;
        }

        if (_.options.fade === false) {
            _.$slideTrack.css(transition);
        } else {
            _.$slides.eq(slide).css(transition);
        }

    };

    Slick.prototype.autoPlay = function() {

        var _ = this;

        if (_.autoPlayTimer) {
            clearInterval(_.autoPlayTimer);
        }

        if (_.slideCount > _.options.slidesToShow && _.paused !== true) {
            _.autoPlayTimer = setInterval(_.autoPlayIterator,
                _.options.autoplaySpeed);
        }

    };

    Slick.prototype.autoPlayClear = function() {

        var _ = this;
        if (_.autoPlayTimer) {
            clearInterval(_.autoPlayTimer);
        }

    };

    Slick.prototype.autoPlayIterator = function() {

        var _ = this;

        if (_.options.infinite === false) {

            if (_.direction === 1) {

                if ((_.currentSlide + 1) === _.slideCount -
                    1) {
                    _.direction = 0;
                }

                _.slideHandler(_.currentSlide + _.options.slidesToScroll);

            } else {

                if ((_.currentSlide - 1 === 0)) {

                    _.direction = 1;

                }

                _.slideHandler(_.currentSlide - _.options.slidesToScroll);

            }

        } else {

            _.slideHandler(_.currentSlide + _.options.slidesToScroll);

        }

    };

    Slick.prototype.buildArrows = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {

            _.$prevArrow = $(_.options.prevArrow);
            _.$nextArrow = $(_.options.nextArrow);

            if (_.htmlExpr.test(_.options.prevArrow)) {
                _.$prevArrow.appendTo(_.options.appendArrows);
            }

            if (_.htmlExpr.test(_.options.nextArrow)) {
                _.$nextArrow.appendTo(_.options.appendArrows);
            }

            if (_.options.infinite !== true) {
                _.$prevArrow.addClass('slick-disabled');
            }

        }

    };

    Slick.prototype.buildDots = function() {

        var _ = this,
            i, dotString;

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {

            dotString = '<ul class="' + _.options.dotsClass + '">';

            for (i = 0; i <= _.getDotCount(); i += 1) {
                dotString += '<li>' + _.options.customPaging.call(this, _, i) + '</li>';
            }

            dotString += '</ul>';

            _.$dots = $(dotString).appendTo(
                _.options.appendDots);

            _.$dots.find('li').first().addClass('slick-active').attr('aria-hidden', 'false');

        }

    };

    Slick.prototype.buildOut = function() {

        var _ = this;

        _.$slides = _.$slider.children(
            ':not(.slick-cloned)').addClass(
            'slick-slide');
        _.slideCount = _.$slides.length;

        _.$slides.each(function(index, element) {
            $(element)
                .attr('data-slick-index', index)
                .data('originalStyling', $(element).attr('style') || '');
        });

        _.$slidesCache = _.$slides;

        _.$slider.addClass('slick-slider');

        _.$slideTrack = (_.slideCount === 0) ?
            $('<div class="slick-track"/>').appendTo(_.$slider) :
            _.$slides.wrapAll('<div class="slick-track"/>').parent();

        _.$list = _.$slideTrack.wrap(
            '<div aria-live="polite" class="slick-list"/>').parent();
        _.$slideTrack.css('opacity', 0);

        if (_.options.centerMode === true || _.options.swipeToSlide === true) {
            _.options.slidesToScroll = 1;
        }

        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');

        _.setupInfinite();

        _.buildArrows();

        _.buildDots();

        _.updateDots();

        if (_.options.accessibility === true) {
            _.$list.prop('tabIndex', 0);
        }

        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);

        if (_.options.draggable === true) {
            _.$list.addClass('draggable');
        }

    };

    Slick.prototype.buildRows = function() {

        var _ = this, a, b, c, newSlides, numOfSlides, originalSlides,slidesPerSection;

        newSlides = document.createDocumentFragment();
        originalSlides = _.$slider.children();

        if(_.options.rows > 1) {

            slidesPerSection = _.options.slidesPerRow * _.options.rows;
            numOfSlides = Math.ceil(
                originalSlides.length / slidesPerSection
            );

            for(a = 0; a < numOfSlides; a++){
                var slide = document.createElement('div');
                for(b = 0; b < _.options.rows; b++) {
                    var row = document.createElement('div');
                    for(c = 0; c < _.options.slidesPerRow; c++) {
                        var target = (a * slidesPerSection + ((b * _.options.slidesPerRow) + c));
                        if (originalSlides.get(target)) {
                            row.appendChild(originalSlides.get(target));
                        }
                    }
                    slide.appendChild(row);
                }
                newSlides.appendChild(slide);
            }

            _.$slider.html(newSlides);
            _.$slider.children().children().children()
                .css({
                    'width':(100 / _.options.slidesPerRow) + '%',
                    'display': 'inline-block'
                });
        
        }

    };

    Slick.prototype.checkResponsive = function(initial) {

        var _ = this,
            breakpoint, targetBreakpoint, respondToWidth, triggerBreakpoint = false;
        var sliderWidth = _.$slider.width();
        var windowWidth = window.innerWidth || $(window).width();

        if (_.respondTo === 'window') {
            respondToWidth = windowWidth;
        } else if (_.respondTo === 'slider') {
            respondToWidth = sliderWidth;
        } else if (_.respondTo === 'min') {
            respondToWidth = Math.min(windowWidth, sliderWidth);
        }

        if (_.originalSettings.responsive && _.originalSettings
            .responsive.length > -1 && _.originalSettings.responsive !== null) {

            targetBreakpoint = null;

            for (breakpoint in _.breakpoints) {
                if (_.breakpoints.hasOwnProperty(breakpoint)) {
                    if (_.originalSettings.mobileFirst === false) {
                        if (respondToWidth < _.breakpoints[breakpoint]) {
                            targetBreakpoint = _.breakpoints[breakpoint];
                        }
                    } else {
                        if (respondToWidth > _.breakpoints[breakpoint]) {
                            targetBreakpoint = _.breakpoints[breakpoint];
                        }
                    }
                }
            }

            if (targetBreakpoint !== null) {
                if (_.activeBreakpoint !== null) {
                    if (targetBreakpoint !== _.activeBreakpoint) {
                        _.activeBreakpoint =
                            targetBreakpoint;
                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
                            _.unslick(targetBreakpoint);
                        } else {
                            _.options = $.extend({}, _.originalSettings,
                                _.breakpointSettings[
                                    targetBreakpoint]);
                            if (initial === true) {
                                _.currentSlide = _.options.initialSlide;
                            }
                            _.refresh(initial);
                        }
                        triggerBreakpoint = targetBreakpoint;
                    }
                } else {
                    _.activeBreakpoint = targetBreakpoint;
                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
                        _.unslick(targetBreakpoint);
                    } else {
                        _.options = $.extend({}, _.originalSettings,
                            _.breakpointSettings[
                                targetBreakpoint]);
                        if (initial === true) {
                            _.currentSlide = _.options.initialSlide;
                        }
                        _.refresh(initial);
                    }
                    triggerBreakpoint = targetBreakpoint;
                }
            } else {
                if (_.activeBreakpoint !== null) {
                    _.activeBreakpoint = null;
                    _.options = _.originalSettings;
                    if (initial === true) {
                        _.currentSlide = _.options.initialSlide;
                    }
                    _.refresh(initial);
                    triggerBreakpoint = targetBreakpoint;
                }
            }

            // only trigger breakpoints during an actual break. not on initialize.
            if( !initial && triggerBreakpoint !== false ) {
                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);
            }
        }

    };

    Slick.prototype.changeSlide = function(event, dontAnimate) {

        var _ = this,
            $target = $(event.target),
            indexOffset, slideOffset, unevenOffset;

        // If target is a link, prevent default action.
        if($target.is('a')) {
            event.preventDefault();
        }

        // If target is not the <li> element (ie: a child), find the <li>.
        if(!$target.is('li')) {
            $target = $target.closest('li');
        }

        unevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);
        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;

        switch (event.data.message) {

            case 'previous':
                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;
                if (_.slideCount > _.options.slidesToShow) {
                    _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);
                }
                break;

            case 'next':
                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;
                if (_.slideCount > _.options.slidesToShow) {
                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);
                }
                break;

            case 'index':
                var index = event.data.index === 0 ? 0 :
                    event.data.index || $target.index() * _.options.slidesToScroll;

                _.slideHandler(_.checkNavigable(index), false, dontAnimate);
                $target.children().trigger('focus');
                break;

            default:
                return;
        }

    };

    Slick.prototype.checkNavigable = function(index) {

        var _ = this,
            navigables, prevNavigable;

        navigables = _.getNavigableIndexes();
        prevNavigable = 0;
        if (index > navigables[navigables.length - 1]) {
            index = navigables[navigables.length - 1];
        } else {
            for (var n in navigables) {
                if (index < navigables[n]) {
                    index = prevNavigable;
                    break;
                }
                prevNavigable = navigables[n];
            }
        }

        return index;
    };

    Slick.prototype.cleanUpEvents = function() {

        var _ = this;

        if (_.options.dots && _.$dots !== null) {

            $('li', _.$dots).off('click.slick', _.changeSlide);

            if (_.options.pauseOnDotsHover === true && _.options.autoplay === true) {

                $('li', _.$dots)
                    .off('mouseenter.slick', $.proxy(_.setPaused, _, true))
                    .off('mouseleave.slick', $.proxy(_.setPaused, _, false));

            }

        }

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);
            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);
        }

        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);
        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);
        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);
        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);

        _.$list.off('click.slick', _.clickHandler);

        $(document).off(_.visibilityChange, _.visibility);

        _.$list.off('mouseenter.slick', $.proxy(_.setPaused, _, true));
        _.$list.off('mouseleave.slick', $.proxy(_.setPaused, _, false));

        if (_.options.accessibility === true) {
            _.$list.off('keydown.slick', _.keyHandler);
        }

        if (_.options.focusOnSelect === true) {
            $(_.$slideTrack).children().off('click.slick', _.selectHandler);
        }

        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);

        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);

        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);

        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);
        $(document).off('ready.slick.slick-' + _.instanceUid, _.setPosition);
    };

    Slick.prototype.cleanUpRows = function() {

        var _ = this, originalSlides;

        if(_.options.rows > 1) {
            originalSlides = _.$slides.children().children();
            originalSlides.removeAttr('style');
            _.$slider.html(originalSlides);
        }

    };

    Slick.prototype.clickHandler = function(event) {

        var _ = this;

        if (_.shouldClick === false) {
            event.stopImmediatePropagation();
            event.stopPropagation();
            event.preventDefault();
        }

    };

    Slick.prototype.destroy = function(refresh) {

        var _ = this;

        _.autoPlayClear();

        _.touchObject = {};

        _.cleanUpEvents();

        $('.slick-cloned', _.$slider).detach();

        if (_.$dots) {
            _.$dots.remove();
        }
        if (_.$prevArrow && (typeof _.options.prevArrow !== 'object')) {
            _.$prevArrow.remove();
        }
        if (_.$nextArrow && (typeof _.options.nextArrow !== 'object')) {
            _.$nextArrow.remove();
        }

        if (_.$slides) {

            _.$slides
                .removeClass('slick-slide slick-active slick-center slick-visible slick-current')
                .removeAttr('aria-hidden')
                .removeAttr('data-slick-index')
                .each(function(){
                    $(this).attr('style', $(this).data('originalStyling'));
                });

            _.$slideTrack.children(this.options.slide).detach();

            _.$slideTrack.detach();

            _.$list.detach();

            _.$slider.append(_.$slides);
        }

        _.cleanUpRows();

        _.$slider.removeClass('slick-slider');
        _.$slider.removeClass('slick-initialized');

        _.unslicked = true;

        if(!refresh) {
            _.$slider.trigger('destroy', [_]);
        }

    };

    Slick.prototype.disableTransition = function(slide) {

        var _ = this,
            transition = {};

        transition[_.transitionType] = '';

        if (_.options.fade === false) {
            _.$slideTrack.css(transition);
        } else {
            _.$slides.eq(slide).css(transition);
        }

    };

    Slick.prototype.fadeSlide = function(slideIndex, callback) {

        var _ = this;

        if (_.cssTransitions === false) {

            _.$slides.eq(slideIndex).css({
                zIndex: _.options.zIndex
            });

            _.$slides.eq(slideIndex).animate({
                opacity: 1
            }, _.options.speed, _.options.easing, callback);

        } else {

            _.applyTransition(slideIndex);

            _.$slides.eq(slideIndex).css({
                opacity: 1,
                zIndex: _.options.zIndex
            });

            if (callback) {
                setTimeout(function() {

                    _.disableTransition(slideIndex);

                    callback.call();
                }, _.options.speed);
            }

        }

    };

    Slick.prototype.fadeSlideOut = function(slideIndex) {

        var _ = this;

        if (_.cssTransitions === false) {

            _.$slides.eq(slideIndex).animate({
                opacity: 0,
                zIndex: _.options.zIndex - 2
            }, _.options.speed, _.options.easing);

        } else {

            _.applyTransition(slideIndex);

            _.$slides.eq(slideIndex).css({
                opacity: 0,
                zIndex: _.options.zIndex - 2
            });

        }

    };

    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {

        var _ = this;

        if (filter !== null) {

            _.unload();

            _.$slideTrack.children(this.options.slide).detach();

            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);

            _.reinit();

        }

    };

    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {

        var _ = this;
        return _.currentSlide;

    };

    Slick.prototype.getDotCount = function() {

        var _ = this;

        var breakPoint = 0;
        var counter = 0;
        var pagerQty = 0;

        if (_.options.infinite === true) {
            while (breakPoint < _.slideCount) {
                ++pagerQty;
                breakPoint = counter + _.options.slidesToShow;
                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
            }
        } else if (_.options.centerMode === true) {
            pagerQty = _.slideCount;
        } else {
            while (breakPoint < _.slideCount) {
                ++pagerQty;
                breakPoint = counter + _.options.slidesToShow;
                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
            }
        }

        return pagerQty - 1;

    };

    Slick.prototype.getLeft = function(slideIndex) {

        var _ = this,
            targetLeft,
            verticalHeight,
            verticalOffset = 0,
            targetSlide;

        _.slideOffset = 0;
        verticalHeight = _.$slides.first().outerHeight();

        if (_.options.infinite === true) {
            if (_.slideCount > _.options.slidesToShow) {
                _.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;
                verticalOffset = (verticalHeight * _.options.slidesToShow) * -1;
            }
            if (_.slideCount % _.options.slidesToScroll !== 0) {
                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {
                    if (slideIndex > _.slideCount) {
                        _.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;
                        verticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;
                    } else {
                        _.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;
                        verticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;
                    }
                }
            }
        } else {
            if (slideIndex + _.options.slidesToShow > _.slideCount) {
                _.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;
                verticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;
            }
        }

        if (_.slideCount <= _.options.slidesToShow) {
            _.slideOffset = 0;
            verticalOffset = 0;
        }

        if (_.options.centerMode === true && _.options.infinite === true) {
            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;
        } else if (_.options.centerMode === true) {
            _.slideOffset = 0;
            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);
        }

        if (_.options.vertical === false) {
            targetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;
        } else {
            targetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;
        }

        if (_.options.variableWidth === true) {

            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {
                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
            } else {
                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);
            }

            targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;

            if (_.options.centerMode === true) {
                if (_.options.infinite === false) {
                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
                } else {
                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);
                }
                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;
                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;
            }
        }

        return targetLeft;

    };

    Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {

        var _ = this;

        return _.options[option];

    };

    Slick.prototype.getNavigableIndexes = function() {

        var _ = this,
            breakPoint = 0,
            counter = 0,
            indexes = [],
            max;

        if (_.options.infinite === false) {
            max = _.slideCount;
        } else {
            breakPoint = _.options.slidesToScroll * -1;
            counter = _.options.slidesToScroll * -1;
            max = _.slideCount * 2;
        }

        while (breakPoint < max) {
            indexes.push(breakPoint);
            breakPoint = counter + _.options.slidesToScroll;
            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
        }

        return indexes;

    };

    Slick.prototype.getSlick = function() {

        return this;

    };

    Slick.prototype.getSlideCount = function() {

        var _ = this,
            slidesTraversed, swipedSlide, centerOffset;

        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;

        if (_.options.swipeToSlide === true) {
            _.$slideTrack.find('.slick-slide').each(function(index, slide) {
                if (slide.offsetLeft - centerOffset + ($(slide).outerWidth() / 2) > (_.swipeLeft * -1)) {
                    swipedSlide = slide;
                    return false;
                }
            });

            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;

            return slidesTraversed;

        } else {
            return _.options.slidesToScroll;
        }

    };

    Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {

        var _ = this;

        _.changeSlide({
            data: {
                message: 'index',
                index: parseInt(slide)
            }
        }, dontAnimate);

    };

    Slick.prototype.init = function(creation) {

        var _ = this;

        if (!$(_.$slider).hasClass('slick-initialized')) {

            $(_.$slider).addClass('slick-initialized');

            _.buildRows();
            _.buildOut();
            _.setProps();
            _.startLoad();
            _.loadSlider();
            _.initializeEvents();
            _.updateArrows();
            _.updateDots();

        }

        if (creation) {
            _.$slider.trigger('init', [_]);
        }

    };

    Slick.prototype.initArrowEvents = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
            _.$prevArrow.on('click.slick', {
                message: 'previous'
            }, _.changeSlide);
            _.$nextArrow.on('click.slick', {
                message: 'next'
            }, _.changeSlide);
        }

    };

    Slick.prototype.initDotEvents = function() {

        var _ = this;

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
            $('li', _.$dots).on('click.slick', {
                message: 'index'
            }, _.changeSlide);
        }

        if (_.options.dots === true && _.options.pauseOnDotsHover === true && _.options.autoplay === true) {
            $('li', _.$dots)
                .on('mouseenter.slick', $.proxy(_.setPaused, _, true))
                .on('mouseleave.slick', $.proxy(_.setPaused, _, false));
        }

    };

    Slick.prototype.initializeEvents = function() {

        var _ = this;

        _.initArrowEvents();

        _.initDotEvents();

        _.$list.on('touchstart.slick mousedown.slick', {
            action: 'start'
        }, _.swipeHandler);
        _.$list.on('touchmove.slick mousemove.slick', {
            action: 'move'
        }, _.swipeHandler);
        _.$list.on('touchend.slick mouseup.slick', {
            action: 'end'
        }, _.swipeHandler);
        _.$list.on('touchcancel.slick mouseleave.slick', {
            action: 'end'
        }, _.swipeHandler);

        _.$list.on('click.slick', _.clickHandler);

        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));

        _.$list.on('mouseenter.slick', $.proxy(_.setPaused, _, true));
        _.$list.on('mouseleave.slick', $.proxy(_.setPaused, _, false));

        if (_.options.accessibility === true) {
            _.$list.on('keydown.slick', _.keyHandler);
        }

        if (_.options.focusOnSelect === true) {
            $(_.$slideTrack).children().on('click.slick', _.selectHandler);
        }

        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));

        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));

        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);

        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);
        $(document).on('ready.slick.slick-' + _.instanceUid, _.setPosition);

    };

    Slick.prototype.initUI = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {

            _.$prevArrow.show();
            _.$nextArrow.show();

        }

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {

            _.$dots.show();

        }

        if (_.options.autoplay === true) {

            _.autoPlay();

        }

    };

    Slick.prototype.keyHandler = function(event) {

        var _ = this;

        if (event.keyCode === 37 && _.options.accessibility === true) {
            _.changeSlide({
                data: {
                    message: 'previous'
                }
            });
        } else if (event.keyCode === 39 && _.options.accessibility === true) {
            _.changeSlide({
                data: {
                    message: 'next'
                }
            });
        }

    };

    Slick.prototype.lazyLoad = function() {

        var _ = this,
            loadRange, cloneRange, rangeStart, rangeEnd;

        function loadImages(imagesScope) {
            $('img[data-lazy]', imagesScope).each(function() {

                var image = $(this),
                    imageSource = $(this).attr('data-lazy'),
                    imageToLoad = document.createElement('img');

                imageToLoad.onload = function() {
                    image
                        .animate({ opacity: 0 }, 100, function() {
                            image
                                .attr('src', imageSource)
                                .animate({ opacity: 1 }, 200, function() {
                                    image
                                        .removeAttr('data-lazy')
                                        .removeClass('slick-loading');
                                });
                        });
                };

                imageToLoad.src = imageSource;

            });
        }

        if (_.options.centerMode === true) {
            if (_.options.infinite === true) {
                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);
                rangeEnd = rangeStart + _.options.slidesToShow + 2;
            } else {
                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));
                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;
            }
        } else {
            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;
            rangeEnd = rangeStart + _.options.slidesToShow;
            if (_.options.fade === true) {
                if (rangeStart > 0) rangeStart--;
                if (rangeEnd <= _.slideCount) rangeEnd++;
            }
        }

        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);
        loadImages(loadRange);

        if (_.slideCount <= _.options.slidesToShow) {
            cloneRange = _.$slider.find('.slick-slide');
            loadImages(cloneRange);
        } else
        if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {
            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);
            loadImages(cloneRange);
        } else if (_.currentSlide === 0) {
            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);
            loadImages(cloneRange);
        }

    };

    Slick.prototype.loadSlider = function() {

        var _ = this;

        _.setPosition();

        _.$slideTrack.css({
            opacity: 1
        });

        _.$slider.removeClass('slick-loading');

        _.initUI();

        if (_.options.lazyLoad === 'progressive') {
            _.progressiveLazyLoad();
        }

    };

    Slick.prototype.next = Slick.prototype.slickNext = function() {

        var _ = this;

        _.changeSlide({
            data: {
                message: 'next'
            }
        });

    };

    Slick.prototype.orientationChange = function() {

        var _ = this;

        _.checkResponsive();
        _.setPosition();

    };

    Slick.prototype.pause = Slick.prototype.slickPause = function() {

        var _ = this;

        _.autoPlayClear();
        _.paused = true;

    };

    Slick.prototype.play = Slick.prototype.slickPlay = function() {

        var _ = this;

        _.paused = false;
        _.autoPlay();

    };

    Slick.prototype.postSlide = function(index) {

        var _ = this;

        _.$slider.trigger('afterChange', [_, index]);

        _.animating = false;

        _.setPosition();

        _.swipeLeft = null;

        if (_.options.autoplay === true && _.paused === false) {
            _.autoPlay();
        }

    };

    Slick.prototype.prev = Slick.prototype.slickPrev = function() {

        var _ = this;

        _.changeSlide({
            data: {
                message: 'previous'
            }
        });

    };

    Slick.prototype.preventDefault = function(e) {
        e.preventDefault();
    };

    Slick.prototype.progressiveLazyLoad = function() {

        var _ = this,
            imgCount, targetImage;

        imgCount = $('img[data-lazy]', _.$slider).length;

        if (imgCount > 0) {
            targetImage = $('img[data-lazy]', _.$slider).first();
            targetImage.attr('src', targetImage.attr('data-lazy')).removeClass('slick-loading').load(function() {
                    targetImage.removeAttr('data-lazy');
                    _.progressiveLazyLoad();

                    if (_.options.adaptiveHeight === true) {
                        _.setPosition();
                    }
                })
                .error(function() {
                    targetImage.removeAttr('data-lazy');
                    _.progressiveLazyLoad();
                });
        }

    };

    Slick.prototype.refresh = function( initializing ) {

        var _ = this,
            currentSlide = _.currentSlide;

        _.destroy(true);

        $.extend(_, _.initials, { currentSlide: currentSlide });

        _.init();

        if( !initializing ) {

            _.changeSlide({
                data: {
                    message: 'index',
                    index: currentSlide
                }
            }, false);

        }

    };

    Slick.prototype.reinit = function() {

        var _ = this;

        _.$slides = 
            _.$slideTrack
                .children(_.options.slide)
                .addClass('slick-slide');

        _.slideCount = _.$slides.length;

        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {
            _.currentSlide = _.currentSlide - _.options.slidesToScroll;
        }

        if (_.slideCount <= _.options.slidesToShow) {
            _.currentSlide = 0;
        }

        _.setProps();

        _.setupInfinite();

        _.buildArrows();

        _.updateArrows();

        _.initArrowEvents();

        _.buildDots();

        _.updateDots();

        _.initDotEvents();

        if (_.options.focusOnSelect === true) {
            $(_.$slideTrack).children().on('click.slick', _.selectHandler);
        }

        _.setSlideClasses(0);

        _.setPosition();

        _.$slider.trigger('reInit', [_]);

    };

    Slick.prototype.resize = function() {

        var _ = this;

        if ($(window).width() !== _.windowWidth) {
            clearTimeout(_.windowDelay);
            _.windowDelay = window.setTimeout(function() {
                _.windowWidth = $(window).width();
                _.checkResponsive();
                if( !_.unslicked ) { _.setPosition(); }
            }, 50);
        }
    };

    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {

        var _ = this;

        if (typeof(index) === 'boolean') {
            removeBefore = index;
            index = removeBefore === true ? 0 : _.slideCount - 1;
        } else {
            index = removeBefore === true ? --index : index;
        }

        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {
            return false;
        }

        _.unload();

        if (removeAll === true) {
            _.$slideTrack.children().remove();
        } else {
            _.$slideTrack.children(this.options.slide).eq(index).remove();
        }

        _.$slides = _.$slideTrack.children(this.options.slide);

        _.$slideTrack.children(this.options.slide).detach();

        _.$slideTrack.append(_.$slides);

        _.$slidesCache = _.$slides;

        _.reinit();

    };

    Slick.prototype.setCSS = function(position) {

        var _ = this,
            positionProps = {},
            x, y;

        if (_.options.rtl === true) {
            position = -position;
        }
        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';
        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';

        positionProps[_.positionProp] = position;

        if (_.transformsEnabled === false) {
            _.$slideTrack.css(positionProps);
        } else {
            positionProps = {};
            if (_.cssTransitions === false) {
                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';
                _.$slideTrack.css(positionProps);
            } else {
                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';
                _.$slideTrack.css(positionProps);
            }
        }

    };

    Slick.prototype.setDimensions = function() {

        var _ = this;

        if (_.options.vertical === false) {
            if (_.options.centerMode === true) {
                _.$list.css({
                    padding: ('0px ' + _.options.centerPadding)
                });
            }
        } else {
            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);
            if (_.options.centerMode === true) {
                _.$list.css({
                    padding: (_.options.centerPadding + ' 0px')
                });
            }
        }

        _.listWidth = _.$list.width();
        _.listHeight = _.$list.height();


        if (_.options.vertical === false && _.options.variableWidth === false) {
            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);
            _.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));

        } else if (_.options.variableWidth === true) {
            _.$slideTrack.width(5000 * _.slideCount);
        } else {
            _.slideWidth = Math.ceil(_.listWidth);
            _.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));
        }

        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();
        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);

    };

    Slick.prototype.setFade = function() {

        var _ = this,
            targetLeft;

        _.$slides.each(function(index, element) {
            targetLeft = (_.slideWidth * index) * -1;
            if (_.options.rtl === true) {
                $(element).css({
                    position: 'relative',
                    right: targetLeft,
                    top: 0,
                    zIndex: _.options.zIndex - 2,
                    opacity: 0
                });
            } else {
                $(element).css({
                    position: 'relative',
                    left: targetLeft,
                    top: 0,
                    zIndex: _.options.zIndex - 2,
                    opacity: 0
                });
            }
        });

        _.$slides.eq(_.currentSlide).css({
            zIndex: _.options.zIndex - 1,
            opacity: 1
        });

    };

    Slick.prototype.setHeight = function() {

        var _ = this;

        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);
            _.$list.css('height', targetHeight);
        }

    };

    Slick.prototype.setOption = Slick.prototype.slickSetOption = function(option, value, refresh) {

        var _ = this;
        _.options[option] = value;

        if (refresh === true) {
            _.unload();
            _.reinit();
        }

    };

    Slick.prototype.setPosition = function() {

        var _ = this;

        _.setDimensions();

        _.setHeight();

        if (_.options.fade === false) {
            _.setCSS(_.getLeft(_.currentSlide));
        } else {
            _.setFade();
        }

        _.$slider.trigger('setPosition', [_]);

    };

    Slick.prototype.setProps = function() {

        var _ = this,
            bodyStyle = document.body.style;

        _.positionProp = _.options.vertical === true ? 'top' : 'left';

        if (_.positionProp === 'top') {
            _.$slider.addClass('slick-vertical');
        } else {
            _.$slider.removeClass('slick-vertical');
        }

        if (bodyStyle.WebkitTransition !== undefined ||
            bodyStyle.MozTransition !== undefined ||
            bodyStyle.msTransition !== undefined) {
            if (_.options.useCSS === true) {
                _.cssTransitions = true;
            }
        }

        if ( _.options.fade ) {
            if ( typeof _.options.zIndex === 'number' ) {
                if( _.options.zIndex < 3 ) {
                    _.options.zIndex = 3;
                }
            } else {
                _.options.zIndex = _.defaults.zIndex;
            }
        }

        if (bodyStyle.OTransform !== undefined) {
            _.animType = 'OTransform';
            _.transformType = '-o-transform';
            _.transitionType = 'OTransition';
            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;
        }
        if (bodyStyle.MozTransform !== undefined) {
            _.animType = 'MozTransform';
            _.transformType = '-moz-transform';
            _.transitionType = 'MozTransition';
            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;
        }
        if (bodyStyle.webkitTransform !== undefined) {
            _.animType = 'webkitTransform';
            _.transformType = '-webkit-transform';
            _.transitionType = 'webkitTransition';
            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;
        }
        if (bodyStyle.msTransform !== undefined) {
            _.animType = 'msTransform';
            _.transformType = '-ms-transform';
            _.transitionType = 'msTransition';
            if (bodyStyle.msTransform === undefined) _.animType = false;
        }
        if (bodyStyle.transform !== undefined && _.animType !== false) {
            _.animType = 'transform';
            _.transformType = 'transform';
            _.transitionType = 'transition';
        }
        _.transformsEnabled = (_.animType !== null && _.animType !== false);

    };


    Slick.prototype.setSlideClasses = function(index) {

        var _ = this,
            centerOffset, allSlides, indexOffset, remainder;

        allSlides = _.$slider
            .find('.slick-slide')
            .removeClass('slick-active slick-center slick-current')
            .attr('aria-hidden', 'true');

        _.$slides
            .eq(index)
            .addClass('slick-current');

        if (_.options.centerMode === true) {

            centerOffset = Math.floor(_.options.slidesToShow / 2);

            if (_.options.infinite === true) {

                if (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {

                    _.$slides
                        .slice(index - centerOffset, index + centerOffset + 1)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                } else {

                    indexOffset = _.options.slidesToShow + index;
                    allSlides
                        .slice(indexOffset - centerOffset + 1, indexOffset + centerOffset + 2)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                }

                if (index === 0) {

                    allSlides
                        .eq(allSlides.length - 1 - _.options.slidesToShow)
                        .addClass('slick-center');

                } else if (index === _.slideCount - 1) {

                    allSlides
                        .eq(_.options.slidesToShow)
                        .addClass('slick-center');

                }

            }

            _.$slides
                .eq(index)
                .addClass('slick-center');

        } else {

            if (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {

                _.$slides
                    .slice(index, index + _.options.slidesToShow)
                    .addClass('slick-active')
                    .attr('aria-hidden', 'false');

            } else if (allSlides.length <= _.options.slidesToShow) {

                allSlides
                    .addClass('slick-active')
                    .attr('aria-hidden', 'false');

            } else {

                remainder = _.slideCount % _.options.slidesToShow;
                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;
                
                if (_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {
                    
                    allSlides
                        .slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                } else {

                    allSlides
                        .slice(indexOffset, indexOffset + _.options.slidesToShow)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                }

            }

        }

        if (_.options.lazyLoad === 'ondemand') {
            _.lazyLoad();
        }

    };

    Slick.prototype.setupInfinite = function() {

        var _ = this,
            i, slideIndex, infiniteCount;

        if (_.options.fade === true) {
            _.options.centerMode = false;
        }

        if (_.options.infinite === true && _.options.fade === false) {

            slideIndex = null;

            if (_.slideCount > _.options.slidesToShow) {

                if (_.options.centerMode === true) {
                    infiniteCount = _.options.slidesToShow + 1;
                } else {
                    infiniteCount = _.options.slidesToShow;
                }

                for (i = _.slideCount; i > (_.slideCount -
                        infiniteCount); i -= 1) {
                    slideIndex = i - 1;
                    $(_.$slides[slideIndex]).clone(true).attr('id', '')
                        .attr('data-slick-index', slideIndex - _.slideCount)
                        .prependTo(_.$slideTrack).addClass('slick-cloned');
                }
                for (i = 0; i < infiniteCount; i += 1) {
                    slideIndex = i;
                    $(_.$slides[slideIndex]).clone(true).attr('id', '')
                        .attr('data-slick-index', slideIndex + _.slideCount)
                        .appendTo(_.$slideTrack).addClass('slick-cloned');
                }
                _.$slideTrack.find('.slick-cloned').find('[id]').each(function() {
                    $(this).attr('id', '');
                });

            }

        }

    };

    Slick.prototype.setPaused = function(paused) {

        var _ = this;

        if (_.options.autoplay === true && _.options.pauseOnHover === true) {
            _.paused = paused;
            if (!paused) {
                _.autoPlay();
            } else {
                _.autoPlayClear();
            }
        }
    };

    Slick.prototype.selectHandler = function(event) {

        var _ = this;

        var targetElement = 
            $(event.target).is('.slick-slide') ? 
                $(event.target) : 
                $(event.target).parents('.slick-slide');

        var index = parseInt(targetElement.attr('data-slick-index'));

        if (!index) index = 0;

        if (_.slideCount <= _.options.slidesToShow) {

            _.setSlideClasses(index);
            _.asNavFor(index);
            return;
            
        }

        _.slideHandler(index);

    };

    Slick.prototype.slideHandler = function(index, sync, dontAnimate) {

        var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null,
            _ = this;

        sync = sync || false;

        if (_.animating === true && _.options.waitForAnimate === true) {
            return;
        }

        if (_.options.fade === true && _.currentSlide === index) {
            return;
        }

        if (_.slideCount <= _.options.slidesToShow) {
            return;
        }

        if (sync === false) {
            _.asNavFor(index);
        }

        targetSlide = index;
        targetLeft = _.getLeft(targetSlide);
        slideLeft = _.getLeft(_.currentSlide);

        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;

        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {
            if (_.options.fade === false) {
                targetSlide = _.currentSlide;
                if (dontAnimate !== true) {
                    _.animateSlide(slideLeft, function() {
                        _.postSlide(targetSlide);
                    });
                } else {
                    _.postSlide(targetSlide);
                }
            }
            return;
        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {
            if (_.options.fade === false) {
                targetSlide = _.currentSlide;
                if (dontAnimate !== true) {
                    _.animateSlide(slideLeft, function() {
                        _.postSlide(targetSlide);
                    });
                } else {
                    _.postSlide(targetSlide);
                }
            }
            return;
        }

        if (_.options.autoplay === true) {
            clearInterval(_.autoPlayTimer);
        }

        if (targetSlide < 0) {
            if (_.slideCount % _.options.slidesToScroll !== 0) {
                animSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);
            } else {
                animSlide = _.slideCount + targetSlide;
            }
        } else if (targetSlide >= _.slideCount) {
            if (_.slideCount % _.options.slidesToScroll !== 0) {
                animSlide = 0;
            } else {
                animSlide = targetSlide - _.slideCount;
            }
        } else {
            animSlide = targetSlide;
        }

        _.animating = true;

        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);

        oldSlide = _.currentSlide;
        _.currentSlide = animSlide;

        _.setSlideClasses(_.currentSlide);

        _.updateDots();
        _.updateArrows();

        if (_.options.fade === true) {
            if (dontAnimate !== true) {
                
                _.fadeSlideOut(oldSlide);

                _.fadeSlide(animSlide, function() {
                    _.postSlide(animSlide);
                });

            } else {
                _.postSlide(animSlide);
            }
            _.animateHeight();
            return;
        }

        if (dontAnimate !== true) {
            _.animateSlide(targetLeft, function() {
                _.postSlide(animSlide);
            });
        } else {
            _.postSlide(animSlide);
        }

    };

    Slick.prototype.startLoad = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {

            _.$prevArrow.hide();
            _.$nextArrow.hide();

        }

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {

            _.$dots.hide();

        }

        _.$slider.addClass('slick-loading');

    };

    Slick.prototype.swipeDirection = function() {

        var xDist, yDist, r, swipeAngle, _ = this;

        xDist = _.touchObject.startX - _.touchObject.curX;
        yDist = _.touchObject.startY - _.touchObject.curY;
        r = Math.atan2(yDist, xDist);

        swipeAngle = Math.round(r * 180 / Math.PI);
        if (swipeAngle < 0) {
            swipeAngle = 360 - Math.abs(swipeAngle);
        }

        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {
            return (_.options.rtl === false ? 'left' : 'right');
        }
        if ((swipeAngle <= 360) && (swipeAngle >= 315)) {
            return (_.options.rtl === false ? 'left' : 'right');
        }
        if ((swipeAngle >= 135) && (swipeAngle <= 225)) {
            return (_.options.rtl === false ? 'right' : 'left');
        }
        if (_.options.verticalSwiping === true) {
            if ((swipeAngle >= 35) && (swipeAngle <= 135)) {
                return 'left';
            } else {
                return 'right';
            }
        }

        return 'vertical';

    };

    Slick.prototype.swipeEnd = function(event) {

        var _ = this,
            slideCount;

        _.dragging = false;

        _.shouldClick = (_.touchObject.swipeLength > 10) ? false : true;

        if (_.touchObject.curX === undefined) {
            return false;
        }

        if (_.touchObject.edgeHit === true) {
            _.$slider.trigger('edge', [_, _.swipeDirection()]);
        }

        if (_.touchObject.swipeLength >= _.touchObject.minSwipe) {

            switch (_.swipeDirection()) {
                case 'left':
                    slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide + _.getSlideCount()) : _.currentSlide + _.getSlideCount();
                    _.slideHandler(slideCount);
                    _.currentDirection = 0;
                    _.touchObject = {};
                    _.$slider.trigger('swipe', [_, 'left']);
                    break;

                case 'right':
                    slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide - _.getSlideCount()) : _.currentSlide - _.getSlideCount();
                    _.slideHandler(slideCount);
                    _.currentDirection = 1;
                    _.touchObject = {};
                    _.$slider.trigger('swipe', [_, 'right']);
                    break;
            }
        } else {
            if (_.touchObject.startX !== _.touchObject.curX) {
                _.slideHandler(_.currentSlide);
                _.touchObject = {};
            }
        }

    };

    Slick.prototype.swipeHandler = function(event) {

        var _ = this;

        if ((_.options.swipe === false) || ('ontouchend' in document && _.options.swipe === false)) {
            return;
        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {
            return;
        }

        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ?
            event.originalEvent.touches.length : 1;

        _.touchObject.minSwipe = _.listWidth / _.options
            .touchThreshold;

        if (_.options.verticalSwiping === true) {
            _.touchObject.minSwipe = _.listHeight / _.options
                .touchThreshold;
        }

        switch (event.data.action) {

            case 'start':
                _.swipeStart(event);
                break;

            case 'move':
                _.swipeMove(event);
                break;

            case 'end':
                _.swipeEnd(event);
                break;

        }

    };

    Slick.prototype.swipeMove = function(event) {

        var _ = this,
            edgeWasHit = false,
            curLeft, swipeDirection, swipeLength, positionOffset, touches;

        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;

        if (!_.dragging || touches && touches.length !== 1) {
            return false;
        }

        curLeft = _.getLeft(_.currentSlide);

        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;
        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;

        _.touchObject.swipeLength = Math.round(Math.sqrt(
            Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));

        if (_.options.verticalSwiping === true) {
            _.touchObject.swipeLength = Math.round(Math.sqrt(
                Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));
        }

        swipeDirection = _.swipeDirection();

        if (swipeDirection === 'vertical') {
            return;
        }

        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {
            event.preventDefault();
        }

        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);
        if (_.options.verticalSwiping === true) {
            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;
        }


        swipeLength = _.touchObject.swipeLength;

        _.touchObject.edgeHit = false;

        if (_.options.infinite === false) {
            if ((_.currentSlide === 0 && swipeDirection === 'right') || (_.currentSlide >= _.getDotCount() && swipeDirection === 'left')) {
                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;
                _.touchObject.edgeHit = true;
            }
        }

        if (_.options.vertical === false) {
            _.swipeLeft = curLeft + swipeLength * positionOffset;
        } else {
            _.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;
        }
        if (_.options.verticalSwiping === true) {
            _.swipeLeft = curLeft + swipeLength * positionOffset;
        }

        if (_.options.fade === true || _.options.touchMove === false) {
            return false;
        }

        if (_.animating === true) {
            _.swipeLeft = null;
            return false;
        }

        _.setCSS(_.swipeLeft);

    };

    Slick.prototype.swipeStart = function(event) {

        var _ = this,
            touches;

        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {
            _.touchObject = {};
            return false;
        }

        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {
            touches = event.originalEvent.touches[0];
        }

        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;
        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;

        _.dragging = true;

    };

    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {

        var _ = this;

        if (_.$slidesCache !== null) {

            _.unload();

            _.$slideTrack.children(this.options.slide).detach();

            _.$slidesCache.appendTo(_.$slideTrack);

            _.reinit();

        }

    };

    Slick.prototype.unload = function() {

        var _ = this;

        $('.slick-cloned', _.$slider).remove();

        if (_.$dots) {
            _.$dots.remove();
        }

        if (_.$prevArrow && (typeof _.options.prevArrow !== 'object')) {
            _.$prevArrow.remove();
        }

        if (_.$nextArrow && (typeof _.options.nextArrow !== 'object')) {
            _.$nextArrow.remove();
        }

        _.$slides
            .removeClass('slick-slide slick-active slick-visible slick-current')
            .attr('aria-hidden', 'true')
            .css('width', '');

    };

    Slick.prototype.unslick = function(fromBreakpoint) {

        var _ = this;
        _.$slider.trigger('unslick', [_, fromBreakpoint]);
        _.destroy();

    };

    Slick.prototype.updateArrows = function() {

        var _ = this,
            centerOffset;

        centerOffset = Math.floor(_.options.slidesToShow / 2);

        if (_.options.arrows === true && _.options.infinite !==
            true && _.slideCount > _.options.slidesToShow) {
            _.$prevArrow.removeClass('slick-disabled');
            _.$nextArrow.removeClass('slick-disabled');
            if (_.currentSlide === 0) {
                _.$prevArrow.addClass('slick-disabled');
                _.$nextArrow.removeClass('slick-disabled');
            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {
                _.$nextArrow.addClass('slick-disabled');
                _.$prevArrow.removeClass('slick-disabled');
            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {
                _.$nextArrow.addClass('slick-disabled');
                _.$prevArrow.removeClass('slick-disabled');
            }
        }

    };

    Slick.prototype.updateDots = function() {

        var _ = this;

        if (_.$dots !== null) {

            _.$dots
                .find('li')
                .removeClass('slick-active')
                .attr('aria-hidden', 'true');

            _.$dots
                .find('li')
                .eq(Math.floor(_.currentSlide / _.options.slidesToScroll))
                .addClass('slick-active')
                .attr('aria-hidden', 'false');

        }

    };

    Slick.prototype.visibility = function() {

        var _ = this;

        if (document[_.hidden]) {
            _.paused = true;
            _.autoPlayClear();
        } else {
            if (_.options.autoplay === true) {
                _.paused = false;
                _.autoPlay();
            }
        }

    };

    $.fn.slick = function() {
        var _ = this,
            opt = arguments[0],
            args = Array.prototype.slice.call(arguments, 1),
            l = _.length,
            i = 0,
            ret;
        for (i; i < l; i++) {
            if (typeof opt == 'object' || typeof opt == 'undefined')
                _[i].slick = new Slick(_[i], opt);
            else
                ret = _[i].slick[opt].apply(_[i].slick, args);
            if (typeof ret != 'undefined') return ret;
        }
        return _;
    };

}));

// CNNE helper functions

// Check for localStorage
function cnneSupportsLocalStorage() {
	try {
		return 'localStorage' in window && window.localStorage !== null;
	} catch(e){
		return false;
	}
}

function cnnespanolVideoPlaylist(containerId, playerId, contentId) {
	// Continous Play - Playlists for Videos
	// if single-video
	if ( window.document.body.className.match( 'single-video' ) ) {
			// check if autoplay is enabled by looking for active class name
		var autoplayDesktopEnabled = window.document.getElementsByClassName( 'playlist__autoplay--active' ).length,
			autoplayMobileEnabled = window.document.getElementsByClassName( 'playlist-autoplay--active' ).length;

		// if autoplay is enabled for desktopof mobile
		if ( 1 === autoplayDesktopEnabled || 1 === autoplayMobileEnabled ) {
			var playlistObj = {},
				moveToNextVideo = false,
				playlistItems = [],
				nowPlayingChild = [];

			if ( 1 === autoplayDesktopEnabled ) {
				playlistItems = window.document.getElementsByClassName( 'playlist__items' );
				nowPlayingChild = playlistItems[0].getElementsByClassName( 'news--video-playing' );
			}

			if ( 1 === autoplayMobileEnabled ) {
				playlistItems = window.document.getElementsByClassName( 'playlist-list' );
				nowPlayingChild = playlistItems[0].getElementsByClassName( 'story-video-playing' );
			}
			
			var nowPlayingChildVideoId = nowPlayingChild[0].getAttribute( 'data-video-id' );
				
			// cycle through children to create list of videos that are next
			for ( var i = 0; i < playlistItems[0].children.length; i++ ) {
				var child = playlistItems[0].children[i],
					videoId = child.getAttribute( 'data-video-id' ),
					postId = child.getAttribute( 'data-post-id' );
					
				playlistObj[i] = {};

				playlistObj[i].postId = postId;
				playlistObj[i].videoId = videoId;
			}

			// if playlistObj is filled in, then 
			if ( Object.keys(playlistObj).length > 0 && playlistObj.constructor === Object ) {
				var nowPlayingKey = parseInt( _.findKey( playlistObj, { 'videoId': nowPlayingChildVideoId } ), 8 ),
					nextVideoKey = nowPlayingKey + 1;

				if ( nowPlayingKey !== nextVideoKey ) {
					// tell FAVE to play next video
					FAVE.player.getInstance( containerId ).play( playlistObj[nextVideoKey].videoId, {
						// Per the Analytics Team, subsequent videos in the playlist should be set to autostart true
						autostart: true
					} );
					
					// flag for moving to next video
					moveToNextVideo = true;
				}
				// If we are moving to next video, collect data/nodes from nextVideo and leadVideo
				if ( moveToNextVideo ) {
					var nextVideoEle = playlistItems[0].children[nextVideoKey],
						nextVideoEleDuration = [],
						nextVideoEleAuthor = nextVideoEle.getElementsByClassName( 'author-link' ),
						nextVideoEleTimeStamp = nextVideoEle.getElementsByClassName( 'time-stamp' ),
						videoPlayingSpan = [],
						leadVideoEle = [],
						leadVideoTitle = [],
						leadVideoExcerpt = [],
						leadVideoByline = [],
						leadVideoTime = [],
						vidTitle = '',
						vidContent = '',
						vidUrl = '',
						vidSlug = '',
						video = [],
						// Extend api models to include CPT video
						CNNEVideo = wp.api.models.Post.extend({
							urlRoot: wpApiSettings.root + 'wp/v2/video',
							defaults: {
								type: 'video'
							}
						}),
						// Extend api collections to include CPT videos
						CNNEVideos = wp.api.collections.Posts.extend({
							url: wpApiSettings.root + 'wp/v2/videos/',
							model: CNNEVideo
						});

					// set desktop values
					if ( 1 === autoplayDesktopEnabled ) {
						nextVideoEleDuration = nextVideoEle.getElementsByClassName( 'news__videotime' );
						videoPlayingSpan = nowPlayingChild[0].getElementsByClassName( 'news__videoplaying' );
						leadVideoEle = window.document.getElementsByClassName('news--videofull');
						leadVideoTitle = leadVideoEle[0].getElementsByClassName( 'news__title' );
						leadVideoExcerpt = leadVideoEle[0].getElementsByClassName( 'news__excerpt' );
						leadVideoByline = leadVideoEle[0].getElementsByClassName( 'news__byline' );
						leadVideoTime = leadVideoEle[0].getElementsByClassName( 'news__date' );
						
						var shareFacebookEle = leadVideoEle[0].getElementsByClassName( 'share-facebook sd-button' ),
							shareTwitterEle = leadVideoEle[0].getElementsByClassName( 'share-twitter sd-button' ),
							shareLinkedinEle = leadVideoEle[0].getElementsByClassName( 'share-linkedin sd-button' );
					}
						
					// set mobile values
					if ( 1 === autoplayMobileEnabled ) {
						nextVideoEleDuration = nextVideoEle.getElementsByClassName( 'story-videotime' );
						videoPlayingSpan = nowPlayingChild[0].getElementsByClassName( 'story-videoplaying' );
						leadVideoEle = window.document.getElementsByClassName('story-header');
						leadVideoTitle = leadVideoEle[0].getElementsByClassName( 'story-title' );
						leadVideoExcerpt = leadVideoEle[0].getElementsByClassName( 'story-excerpt' );
						leadVideoByline = leadVideoEle[0].getElementsByClassName( 'story-byline' );
						leadVideoTime = leadVideoEle[0].getElementsByClassName( 'story-date' );
					}

					// get ready to make call to ap api
					video = new CNNEVideos();
					// edit url to have next Video postId at end (always returns 1 result)
					video.url = wpApiSettings.root + 'wp/v2/videos/' + playlistObj[nextVideoKey].postId;

					// fetch video data from WP API v2
					video.fetch().done( function() {

						video.each( function( myvideo ) {
							// grab info from fetched results
							vidTitle = myvideo.attributes.title.rendered;
							vidContent = myvideo.attributes.content.rendered;
							vidUrl = myvideo.attributes.link;
							vidSlug = myvideo.attributes.slug;
						});

						// UPDATE the PLAYLIST
						// remove class of just finished video/child
						if ( 1 === autoplayMobileEnabled ) {
							nowPlayingChild[0].classList.remove( 'story-video-playing' );
						} else {
							nowPlayingChild[0].classList.remove( 'news--video-playing' );
						}
						
		
						// add class for next video/child
						if ( 1 === autoplayMobileEnabled ) {
							nextVideoEle.classList.add( 'story-video-playing' );
						} else {
							nextVideoEle.classList.add( 'news--video-playing' );
						}
						

						// if 3rd item or more in the list
						if ( 1 < nextVideoKey ) {
							// activate playlist items ... add active class
							if ( 1 === autoplayMobileEnabled ) {
								playlistItems[0].classList.add( 'playlist-list--show' );
							} else {
								playlistItems[0].classList.add( 'playlist__items--active' );
							}
							// and remove <button> in "playlist__items"
							var buttonEle = [];

							if ( 1 === autoplayMobileEnabled ) {
								buttonEle = playlistItems[0].getElementsByClassName('button');
							} else {
								buttonEle = playlistItems[0].parentElement.getElementsByClassName('button');
							}
							if ( buttonEle.length > 0 ) {
								buttonEle[0].style.display = 'none';
							}
							
							if ( 1 === autoplayDesktopEnabled ) {
								// and scroll the nextVideo item to top of playlist scroll area
								// scroll to height of element * which video we are on in playlist
								playlistItems[0].scrollTop = nextVideoEle.getHeight() * nextVideoKey;
							}
						}

						// remove & append (move) now playing span to next in playlist
						nextVideoEleDuration[0].parentNode.appendChild( videoPlayingSpan[0] );

						// UPDATE Lead Video Surrounding Info
						// replace old title with new title
						leadVideoTitle[0].innerHTML = vidTitle;

						// strip <p> from around content
						vidContent = vidContent.replace(/<\/?[^>]+(>|$)/g, '');
						// replace description/content with next video's content
						leadVideoExcerpt[0].innerHTML = vidContent;

						// if author is set on next video use it to replace, otherwise make empty
						if ( 'undefined' !== nextVideoEleAuthor && nextVideoEleAuthor.length > 0 ) {
							// replace author info with next video author info
							leadVideoByline[0].innerHTML = nextVideoEleAuthor[0].innerHTML;
						} else {
							// replace with emptyness
							leadVideoByline[0].innerHTML = '';
						}

						// replace time stamp info
						leadVideoTime[0].innerHTML = nextVideoEleTimeStamp[0].innerHTML;


						// change the url if HTML5 supported
						if ( typeof ( window.history.pushState ) !== 'undefined' ) {
							window.history.pushState( vidSlug, vidTitle, vidUrl );
						}

						// change href value on share buttons only for desktop template
						if ( 1 === autoplayDesktopEnabled ) {
							// only if the share buttons are available/loaded
							if ( ! _.isEmpty( shareFacebookEle ) ) {
								shareFacebookEle[0].setAttribute( 'href', vidUrl + '?share=facebook&nb=1' );
							}
							if ( ! _.isEmpty( shareTwitterEle ) ) {
								shareTwitterEle[0].setAttribute( 'href', vidUrl + '?share=twitter&nb=1' );
							}
							if ( ! _.isEmpty( shareLinkedinEle ) ) {
								shareLinkedinEle[0].setAttribute( 'href', vidUrl + '?share=linkedin&nb=1' );
							}
						}

					});
				} // if moveToNextVideo
			} // if playlistObj is real
		} // if autoplay enabled
	} // if single-video
}
(function( $ ){

	'use strict';

	var $window = $( window );
	// Expected Ad IDs
	var _cnneAdsLoaded = _.clone( window.cnneAdsLoaded );

	// hide ad slot
	function emptyAdPosition( adId ) {
		var $adDiv = $( '#' + adId );
		$adDiv.parent( '.wrap-ad' ).addClass( 'ad-empty hide-publicidad' );
	}

	/**
	 * hide the "Publicidad" text when an ad is closed, which we can only determine by watching
	 * its height change. Thanks DFP!
	 */
	function adCloseListener( divId ) {
		// make sure ad container exists and is not empty
		var adContainer = document.getElementById( divId );
		if ( ! adContainer || ! adContainer.firstElementChild ) {
			return;
		}

		// this is the element that has "Publicidad" as the content of its :after pseudo-element
		var pubDiv =  adContainer.firstElementChild;

		// listener for subtree elements of Publicidad div
		var observer = new MutationObserver( function(mutations) {
			var alreadyFoundHeight = false;
			var re = /height\:\s*([\d]+)px/;

			// loop changed elements
			mutations.forEach( function( mutation ) {
				// we want the parent of #DfaVisibilityIdentifier_* and we only want to do this once
				if ( ! alreadyFoundHeight && 0 !== mutation.target.id.indexOf( 'DfaVisibilityIdentifier' ) ) {

					// make sure we have a height set in the style attribute
					if ( 'style' !== mutation.attributeName || ! mutation.oldValue ) {
						return;
					}
					var matches = mutation.oldValue.match( re );
					if ( ! matches || matches.length < 2 ) {
						return;
					}

					// get the old height from the old style attribute before this mutation
					var oldHeight = parseInt( matches[1] );
					if ( ! isNaN( oldHeight ) ) {
						// toggle .hide-publicidad on whether the element got shorter or taller
						if ( mutation.target.offsetHeight < oldHeight ) {
							adContainer.parentNode.classList.add( 'hide-publicidad' );
						} else {
							adContainer.parentNode.classList.remove( 'hide-publicidad' );
						}
						alreadyFoundHeight = true;
					}
				}
			});
		});

		// listen for changes on the Publicidad div
		observer.observe( pubDiv, {
			attributes: true,
			subtree: true,
			attributeOldValue: true
		});
	}

	// check for Turner ads JS
	if ( _.isUndefined( AdFuel ) ) {
		console.log( 'AdFuel is missing' );
		return;
	}

	// listen for response and hide if no ad was found
	AdFuel.addEvent(document, 'GPTRenderComplete', function(e){
		// use format 'ad_bnr_atf_01' instead of 'bnr_atf_01'
		var adId = e.detail.pos[0];
		if ( adId.indexOf( 'ad_' ) !== 0 ) {
			adId = 'ad_' + adId;
		}

		if ( e.detail.empty ) {
			emptyAdPosition( adId );
		} else if ( 'ad_bnr_atf_01' === adId && 'undefined' !== typeof MutationObserver ) {
			//adCloseListener( 'ad_bnr_atf_01' );

			// create list of page templates to not execute on for now as they have different nav setup
			var noClassList = '.post-format-long-form, .page-template-page-special-papa-template, .page-template-page-multimedia-special, ',
				headerWrapPresent = '';
			
			noClassList += '.page-template-page-agenda-special, .page-template-page-special-blank-template, .page-template-page-special-copa-media-wall, .page-template-page-special-sub-cat';
			// check for default header--wrap div (this tells us if we can use sticky or not)
			headerWrapPresent = document.getElementsByClassName( 'header--wrap' );

			// don't execute if not using default header/menu
			if ( 0 === headerWrapPresent.length ) {
				return;
			}

			var scrollPos = $( window ).scrollTop(),
				adminBarEle = $( '#wpadminbar' ),
				adminBarHeight = ( adminBarEle.height() === null ) ? 0 : adminBarEle.height(),
				breakingNewsEle = $( '#breaking-news-header' ),
				breakingNewsHeight = ( null === breakingNewsEle.height() ) ? 0 : breakingNewsEle.height(),
				topAdWrap = $( '#js_ad--wrap' ),
				topAd = $( '#ad_bnr_atf_01' ),
				topAdHeight = topAd.outerHeight(),
				headerHeight = $( '.header-inner-nav' ).outerHeight() + breakingNewsHeight,
				headerMenu = $( '#header-cnne' ),
				scrollTrigger = 300,
				maxAdHeight = 270,
				enableSticky = true;

			// set height attr so we can use in sticky ad feature
			if ( 59 < topAdHeight ) {
				topAdWrap.attr( 'data-ad-height', topAdHeight );
			}
			// if above max ad height for sticky function, exit
			if ( maxAdHeight < topAdHeight ) {
				// disable sticky function
				$( 'body' ).addClass( 'disable-sticky--top-ad' );
				enableSticky = false;
			} else if ( 1 === topAd.find('iframe').width() ) {
				// disable sticky function
				$( 'body' ).addClass( 'disable-sticky--top-ad' );
				enableSticky = false;
			}

			if ( $( 'body' ).hasClass( 'is-mobile' ) ) {
				// disable sticky function
				$( 'body' ).addClass( 'disable-sticky--top-ad' );
				enableSticky = false;
			}

			if ( enableSticky ) {
				if ( scrollPos < scrollTrigger && enableSticky ) {
					// set class for easy detection
					$( 'body' ).addClass( 'ad-top-expanded' ).removeClass( 'ad-top-collapse' );

					// Ad Wrapper
					topAdWrap.css({
						'max-height': topAdHeight +'px'
					});

					$( 'body' ).css({
						'padding-top': topAdHeight + headerHeight +'px'
					});

				// if scrollPos is more than scrollTrigger
				} else if ( scrollPos >= scrollTrigger && enableSticky ) {
					// set class for easy detection
					$( 'body' ).addClass( 'ad-top-collapse' ).removeClass( 'ad-top-expanded' );

					// Ad Wrapper
					topAdWrap.css({
						'max-height': ''
					});

					// set content padding
					$( 'body' ).css({
						'padding-top': headerHeight +'px'
					});
				}
			} else { // sticky disabled
				// if scrollPos is less than adheight
				if ( scrollPos < topAdHeight ) {
					// Menu unset to top
					headerMenu.css({
						'top' : '',
						'position' : ''
					});

					// remove any padding
					$( 'body' ).css({
						'padding-top': ''
					});

					// topAdWrap remove max-height
					topAdWrap.css({
						'max-height': ''
					});

				} else if ( scrollPos >= topAdHeight ) {
					// Menu set to top
					headerMenu.css({
						'top': adminBarHeight +'px',
						'position' : 'fixed'
					});

					// remove any padding
					$( 'body' ).css({
						'padding-top': ''
					});

					// topAdWrap remove max-height
					topAdWrap.css({
						'max-height': ''
					});
				}
			}

			if ( $( 'body' ).hasClass( 'home' ) ) {
				// make sure ad container exists and is not empty
				var adContainer = document.getElementById( 'ad_bnr_atf_01' ),
					adSizing = adContainer.getBoundingClientRect();

				// check for actual height as a rendered ad should be at least 90px tall
				if ( ! adContainer || adSizing.height >= 90 ) {
					return;
				} else {
					adContainer.parentNode.classList.add( 'blank-ad' );
					// apply class to primary wrap if empty so we can change padding
					$( '#wrap-primary' ).addClass( 'blank-leaderboard-ad' );
				}
			}
		}

		// remove ad from list
		if ( ! _.isUndefined( _cnneAdsLoaded[ adId ] ) ) {
			delete _cnneAdsLoaded[ adId ];
		}
	});

	/**
	 * refresh all ads after resizing across breakpoint
	 */
	function getCurrentBreakpoint() {
		if ( _.isUndefined( cnneAdBreakpoints ) ) {
			return null;
		}
		// breakpoints should be in descending order
		var current = _.find( cnneAdBreakpoints, function( breakpoint ){
			return $window.width() >= breakpoint;
		});
		if ( _.isUndefined( current ) ) {
			current = _.last( cnneAdBreakpoints );
		}
		return current;
	}
	var cnneCurrentBreakpoint = getCurrentBreakpoint();
	$window.resize( _.debounce(function() {
		var newBreakpoint = getCurrentBreakpoint();
		if ( cnneCurrentBreakpoint !== newBreakpoint ) {
			cnneCurrentBreakpoint = newBreakpoint;
			AdFuel.refreshAllAds();
		}
	}, 250 ) );

})(jQuery);
(function( $ ) {
	$( window ).load( function() {
		if (typeof trackMetrics == 'function') {
			// listen for events, call trackMetrics to pass data

			// gallery
			$( '.article-view .slick-prev, .article-view .slick-next' ).on( 'click', function() {
				var $gallery = $( this ).parents( '.wrap-carousel-slides' ),
					$slide = $gallery.find( '.slick-active' );

				try {
					trackMetrics({
						type: "cnngallery-click",
						data: {
							page_view: false,
							gallery_name: $gallery.attr( 'data-title' ),
							image_name: $slide.attr( 'data-title' ),
							content_type: "photo gallery",
						}
					});
				} catch(e){}
			});

			// sharing buttons
			$( '.sd-content a' ).on( 'click', function() {
				var title = $( 'main#content h1:first' ).text(),
					network = $( this ).parent().attr( 'class' ).replace( /^share-/, '' );

				try {
					trackMetrics({
						type: "social-click",
						data: {
							clickObj: {
								socialType: "social: " + network,
								headline: title,
							}
						}
					});
				} catch(e){}
			});

			// home page carousel
			$( '.articles-lead .slick-prev, .articles-lead .slick-next, .articles-lead .slick-dots button' ).on( 'click', function() {
				var $gallery = $( this ).parents( '.wrap-carousel-slides' ),
					$slide = $gallery.find( '.slick-active' );

				try {
					trackMetrics({
						type: "cnngallery-click",
						data: {
							page_view: false,
							gallery_name: "",
							gallery_type: "carousel",
							image_name: "",
							content_type: "carousel_multimedia",
							carousel_type: "double deck",
							hpt: "header_news_world",
							hpt2: "header_news_world"
						}
					});
				} catch(e){}
			});

			// search results
			if ( $( 'body' ).hasClass( 'search-results' ) ) {
				var $content = $( 'main#content' );
				try {
					trackMetrics({
						type: "cnnsearch-results",
						data: {
							search_results_count: $content.data( 'result-count' ),
							search_results_page: $content.data( 'page-number' ),
							search_term: $content.data( 'search-term' )
						}
					});
				} catch(e){}
			}

		}

		// tracking pixel - krux - for FEM special
		if ( $( 'body' ).hasClass( 'category-fuerza-en-movimiento' ) ) {
			$( new Image() ).attr('src', '//beacon.krxd.net/event.gif?event_id=LHUYGubn&event_type=pageview');
		}
	});
})( jQuery );
(function( $ ) {

	'use strict';

	// Engage slick carousel at larger breakpoints
	var cnneSlickCarousel = {

		minWidth: 640, // Minimum window width to initialize carousel
		modalActiveClass: 'modal-active', // When the modal is active
		modalContainer: '#container-modal', // The modal container
		modalTrigger: $( '#modal-gallery-trigger' ),
		navSelector: $( '.wrap-carousel-thumbs' ), // Selector for thumbnails
		selector: $( '.wrap-carousel, .wrap-carousel-stacked' ), // Carousel selector(s)
		$videoCarousel: $( '.wrap-video-carousel' ),
		hasThumbsSelector: $( '#container-modal .wrap-carousel-slides' ), // Carousel w/ thumbnails
		win: $( window ),
		winWidth: $( window ).width(), // The window width

		catchClick: function() { // Catch clicks on next slide, and trigger slide change
			$( '.slick-initialized' ).on( 'click', '.slick-active + .slick-slide', function( e ){
				e.preventDefault();
				$( this )
					.parents( '.slick-initialized' )
					.slick( 'slickNext' );
			});
		},

		fadeThumb: function() {
			var activeIndex = $( '.wrap-carousel-slides .slick-active' ).data( 'index' );
			$( '.wrap-carousel-thumbs img' ).removeClass( 'fade' );
			$( '.wrap-carousel-thumbs .wrap-force[data-index="' + activeIndex + '"] img' ).addClass( 'fade' ); // Yikes.
		},

		toggleShadow: function() { // Toggle shadow
			$( '.slick-list' ).toggleClass( 'shadow-active' );
		},
		
		preInit: function() {
			var _this = this;

			_this.selector.on({
				init: function() {
					_this.toggleShadow();
					$( '.slick-track' ).toggleClass( 'bounce' );
				},
				beforeChange: function() {
					_this.toggleShadow();
				},
				afterChange: function() {
					_this.toggleShadow();
				}
			});
		},

		init: function() { // Initalize carousel
			var _this = this;
			// Check window width, and make sure init has not occured
			if ( _this.winWidth >= _this.minWidth && ! _this.selector.hasClass( 'slick-initialized' ) ) {
				_this.selector.slick({
					dots: false,
					variableWidth: true,
					easing: 'swing'
				});
			} else if ( _this.winWidth < _this.minWidth && _this.selector.hasClass( 'slick-initialized' ) ) { // Check window width, and make sure init has occured
				_this.selector.slick( 'unslick' );
			} else { // Make carousel slides visible at mobile
				_this.selector.css('visibility', 'visible');
			}
		},

		initVideo: function() {
			var _this = this,
			    $sidebarCarousel = $( '.sidebar .wrap-video-carousel' );
			$( '.content-video-more .wrap-video-carousel' ).slick({
				dots: false,
				variableWidth: true,
				easing: 'swing'
			});
			$( '.content-more .wrap-video-carousel' ).slick({
				dots: false,
				variableWidth: true,
				easing: 'swing'
			});
			if ( 960 >= _this.winWidth && $( 'body.page-template-page-video' ).length || 960 >= _this.winWidth && $( 'body.single-video' ).length ) {
				$sidebarCarousel.slick({
					dots: false,
					variableWidth: true,
					easing: 'swing'
				});
			} else if ( $sidebarCarousel.hasClass( 'slick-initialized' ) ) {
				$sidebarCarousel.slick( 'unslick' );
			}
		},

		build: function() { // Construct or deconstruct, depending
			var _this = this;
			// Initialize
			_this.init();
			_this.initVideo();
			_this.win.resize( _.debounce(function() {
				_this.winWidth = _this.win.width();
				_this.init();
				_this.initVideo();
			}, 250 ) );
		},

		modal: function() { // Render modal for carousel
			var _this = this,
				activeModals = $( 'body, ' + _this.modalContainer );

			_this.hasThumbsSelector.on({
				init: function() {
					_this.fadeThumb();
					_this.modalTrigger.css( 'top', ( $( '#container-modal .wrap-carousel-slides .slick-active img' ).height() - _this.modalTrigger.outerHeight() ) );
				},
				afterChange: function() {
					_this.fadeThumb();
				}
			});

			_this.hasThumbsSelector.slick({
				dots: false,
				asNavFor: '.wrap-carousel-thumbs',
				variableWidth: false
			});

			_this.navSelector.slick({
				arrows: false,
				asNavFor: '#container-modal .wrap-carousel-slides',
				focusOnSelect: true,
				slidesToScroll: 1,
				slidesToShow: 5,
				variableWidth: true,
			});

			_this.modalTrigger.click(function() {
				if ( ! $( '#container-modal.modal-active' ).length ) {
					activeModals.removeClass( 'fade-out' );
					activeModals.addClass( _this.modalActiveClass );
					// Trigger slick setPosition event to force carousel to recalc slide dimensions
					_this.hasThumbsSelector.slick( 'setPosition' );
					// Force window resize to make sure thumbnails are set properly
					_this.win.trigger( 'resize' );
					if ( 960 <= _this.win.width() ) {
						// Bring share links inline w/ captions
						$( '#container-modal.modal-active .share' ).css( 'margin-top', -( $( '.modal-active .slick-active figcaption' ).outerHeight() - 10 ) );
					}
				}
			});
			
			// Remove modal if user clicks outside it
			$( document ).click(function( event ) {
				if ( $( 'body.modal-active' ).length && ! $( event.target ).closest( '#container-modal .wrap-inner' ).length ) {
					// Class to fade out
					activeModals.addClass( 'fade-out' );
					// Then, remove the modal active class
					setTimeout(function() {
						activeModals.removeClass( _this.modalActiveClass );
					}, 300 );
					// Then, remove the fade-out class, because we want to show these normally
					setTimeout(function() {
						activeModals.removeClass( 'fade-out' );
						// Trigger slick setPosition event to force carousel to recalc slide dimensions
						_this.hasThumbsSelector.slick( 'setPosition' );
						// Force window resize to make sure thumbnails are set properly
						_this.win.trigger( 'resize' );
					}, 600 );
					
				}
			});
		}

	};

	// document.ready inits
	$(function(){
		cnneSlickCarousel.preInit();
		cnneSlickCarousel.build();
		setTimeout( cnneSlickCarousel.modal(), 1000 );
		if ( ! $( 'body' ).hasClass( 'category-is-special' ) ) {
			cnneSlickCarousel.catchClick();
		}

		if ( ( $( 'body' ).hasClass( 'single-video' ) ) || ( $( 'body' ).hasClass( 'page-template-page-video-php' ) ) ) {
			/* Slick sliders */
			var $slicks = $( '[data-slick]' );
			$slicks.each(function(){
				$( this ).slick({
					prevArrow:'<button type="button" class="slick-prev slick-arrow">anterior</button>',
					nextArrow:'<button type="button" class="slick-next slick-arrow">siguiente</button>'
				});
			});
		}
	});

})( jQuery );
(function( $ ) {

	'use strict';

	// Iconosur code
	var convConfig = {
		editorCss: {
			background: "red"
		}
	};

	// Establish vars for knowing which special page we are viewing
	var $isSpecialPage = false,
		$isSpecialPageMultimedia = false,
		$isSpecialPageAgenda = false,
		$isSpecialPageLongForm = false;

	// Check if a Pope Special page type and set vars
	if ( $( 'body' ).hasClass( 'category-francisco-en-mexico' ) || $( 'body' ).hasClass( 'category-is-special' ) ) {
		$isSpecialPage = true;

		if ( $( 'body' ).hasClass( 'page-template-page-multimedia-special' ) ) {
			$isSpecialPageMultimedia = true;
		}
		if ( $( 'body' ).hasClass( 'page-template-page-agenda-special' ) ) {
			$isSpecialPageAgenda = true;
		}
		if ( $( 'body' ).hasClass( 'single' ) ) {
			$isSpecialPageLongForm = true;
		}

	}

	// All Special pages do this
	if ( $isSpecialPage ) {

		var $socialBarFixed = $( ".socialbar.fixed" );
		if( $socialBarFixed.length > 0 ){
			$socialBarFixed.data( "position", $socialBarFixed.offset() );
			var windowWidth = $( window ).width();
			$( window ).on( "scroll", function(){
				var $scrollTop = $( this ).scrollTop();
				
				if( windowWidth < 681 ){
					var $start = $( ".news-content" ).offset().top,
						$theEnd = $start + $( ".news-content" ).height();
					if( $scrollTop + $( window ).height() > $theEnd ){
						$socialBarFixed.removeClass( "active" );
					}else if( $scrollTop > $start ){
						$socialBarFixed.addClass( "active" );
					}else{
						$socialBarFixed.removeClass( "active" );
					}
				}else{
					var 
						$left = $socialBarFixed.data( "position" ).left,
						$top = $socialBarFixed.data( "position" ).top,
						$stop = $( ".news-content" ).offset().top + $( ".news-content" ).height();
					if( $scrollTop + $socialBarFixed.height() > $stop - 20 ){
						$socialBarFixed.removeClass( "active" ).css({
							position: "absolute",
							top: "auto",
							left: -45,
							bottom: 0
						});
					}else if( $scrollTop > $top - 20 ){
						$socialBarFixed.addClass( "active" ).css({
							position: "fixed",
							top: 20,
							bottom: "auto",
							left: $left
						});
					}else{
						$socialBarFixed.removeClass( "active" ).css({
							position: "absolute",
							top: 0,
							bottom: "auto",
							left: -45
						});
					}
				}

			});
			$( window ).on( "resize", function(){
				$socialBarFixed.css({
					position: "absolute",
					top: 0,
					left: -45
				}).data( "position", $socialBarFixed.offset() );
				windowWidth = $( window ).width();
				$( window ).trigger( "scroll" );
			});
			$( window ).on( "load", function(){
				$( window ).trigger( "resize" );
			});
		}

	}

	// Only Home and Multimedia pages
	if ( $isSpecialPage || $isSpecialPageMultimedia ) {
		var $soundclound = $( '#soundcloud-list' ),
			$soundcloundPlaylist = $soundclound.data("var");

		if( $soundclound.length > 0 ){

			
			SC.initialize({
				client_id: 'bd836f5ae6694f84a16d2e017f7b6d12'
			});

			if ( $( 'body' ).hasClass( 'category-francisco-en-mexico' ) ) {
				SC.get('/users/cnnee/playlists/francisco-en-m-xico').then(function( playlist ){
					for( i=0;i<playlist.tracks.length;i++ ){
						if( i > 9 ) return;
						$soundclound.append( parseHTML( playlist.tracks[i] ) );
					}
				});
			} else {
				SC.get( $soundcloundPlaylist ).then(function( playlist ){
					for( i=0;i<playlist.tracks.length;i++ ){
						if( i > 9 ) return;
						$soundclound.append( parseHTML( playlist.tracks[i] ) );
					}
				});
			}

			$soundclound.on( 'click', '.audio', function(){
				var $this = $( this ),
					$id = $this.data( 'id' );

				if( SC.currentPlayID == $id ){
					if( $this.hasClass( 'playing' ) ){
						$this.removeClass( 'playing' );
						SC.currentPlayer.pause();
					}else{
						$this.addClass( 'playing' );
						SC.currentPlayer.play();
					}
				}else{
					SC.stream( '/tracks/'+$id ).then(function(player){
						$soundclound.find( '.audio' ).removeClass( 'playing' );
						$this.addClass( "playing" );
						SC.currentPlayID = $id;
						SC.currentPlayer = player;
						SC.currentPlayer.play();
						SC.currentPlayer.on( 'time', function(){
							$this.find( '.bar' ).css( 'width', getPercent( $this, SC.currentPlayer.currentTime() ) );
						});
					});
				}
			});
		}
	}

	function parseHTML( track ){
		var image = track.artwork_url,
			clases = "audio audio-summary";
		if( image === null ){
			clases += " no-photo";
		}
		var $article = $( "<article />" );
		$article.addClass( clases ).data({
			id: track.id,
			duration: track.duration
		});
		if( image !== null ){
			$article.append(
				$( "<figure />" ).addClass( "audio-media" ).append(
					$( "<img />" ).attr( "src", track.artwork_url ).attr( "width", 78 ).attr( "height", 78 )
				).append( 
					$( "<div />" ).addClass( "audio-icon" ).append(
						$( "<span />" ).addClass( "icon-audio-small-white" )
					)
				)
			);
		}
		$article.append(
			$( "<div />" ).addClass( "audio-data" ).append(
				$( "<h3 />" ).addClass( "audio-title" ).text( track.title )
			).append(
				$( "<div />" ).addClass( "audio-stream clearfix" ).append(
					$( "<div />" ).addClass( "audio-play" )
				).append(
					$( "<div />" ).addClass( "audio-wave" ).append(
						$( "<div />" ).addClass( "wave" ).css( "background-image", "url("+track.waveform_url+")"  )
					).append(
						$( "<div />" ).addClass( "bar" )
					)
				)
			)
		);
		return $article;
	}

	function getPercent( $element, seek ){
		var time = $element.data( "duration" );
		return seek * 100 / time;
	}

	// Only Special Home, Multimedia, and Agenda do these
	if ( $isSpecialPage || $isSpecialPageMultimedia || $isSpecialPageAgenda ) {

		$( "#twitter-select" ).on( "change", function(){
			$( this ).siblings().removeClass( "active" );
			$( "#"+$( this ).val() ).addClass( "active" );
		});

		var $photogallery = $( "#slick-photogallery" );
		if( $photogallery.length > 0 ){
			$photogallery.find( ".slide" ).width( ($photogallery.width() * 0.729)+20 );

			var options = {
				centerMode: true,
				infinite: true,
				slidesToShow: 3,
				variableWidth: true,
				lazyLoad: 'ondemand',
				prevArrow: '<button class="btn-slide slide-prev" role="button"><span></span></button>',
				nextArrow: '<button class="btn-slide slide-next" role="button"><span></span></button>',
			}; 

			$photogallery.data( "options", options );

			$photogallery.slick( options );

			$( window ).on( "resize", function(){
				$photogallery.slick('unslick');
				$photogallery.find( ".slide" ).width( ($photogallery.width() * 0.729)+20 );
				$photogallery.slick( $photogallery.data( "options" ) );
			});
		}
		$( document ).click(function() {
			$( ".mod-title .select" ).removeClass( "active" );
		});
		var $mod = $( ".mod.mod-newslist" );
		if( $mod.length > 0 ){
			var $modTitle = $mod.find( ".mod-title" );
			$modTitle.on( "click", ".select span", function( e ){
				e.preventDefault();
				e.stopPropagation();
				$( this ).parent().toggleClass( "active" );
			});
			$modTitle.on( "click", "li", function( e ){
				e.stopPropagation();
				var $this = $( this ),
					$index = $this.index(),
					$content = $mod.find( ".mod-ajax .row-inner" ),
					$contentCurr = $content.eq( $index ),
					$sourceType = $this.data( 'source-type' ),
				    $sourceVar = $this.data( 'source-var' ),
				    $totalPosts = $this.data( 'post-count' ),
				    $formatType = $this.data( 'format-type' );

				$this.siblings().removeClass( "active" );
				$this.closest( ".select" ).find( "span" ).text( $this.text() );
				$this.addClass( "active" );

				if( $contentCurr.hasClass( "generated" ) ){
					$content.removeClass( "active" );
					$contentCurr.addClass( "active" );
					$this.closest( ".select" ).removeClass( "active" );
				}else{
					$.ajax({
						url: '/ajax/load-posts/' + $sourceType + '/' + $sourceVar + '/0/' + $totalPosts + '/' + $formatType,
						success: function( html ){
							$content.removeClass( "active" );
							$this.closest( ".select" ).removeClass( "active" );

							$contentCurr.html( html ).addClass( "generated active" );
						},
						error: function( data ) {
						}
					});
				}
			});
		}
		var $modWithPulldown = $( ".mod-subelements" );
		if( $modWithPulldown.length > 0 ){
			var $modTitle2 = $modWithPulldown.find( ".mod-title" );
			$modTitle2.on( "click", ".select span", function( e ){
				e.preventDefault();
				e.stopPropagation();
				$( this ).parent().toggleClass( "active" );
			});
		}
	}

	// Only needed for Long Form posts
	if ( $isSpecialPageLongForm ) {
		var $wpCaptionFull = $( ".wp-caption.alignfull" );
		if( $wpCaptionFull.length > 0 ){
			$wpCaptionFull.each(function(){
				$( window ).on( "resize", function(){
					var $marginLeft = ( ( $( this ).width() - $( ".row-container" ).width()  ) / 2 );
					$wpCaptionFull.find( "img" ).css({
						width: $( this ).width(),
						marginLeft: -$marginLeft + "px"
					});
				}).trigger( "resize" );
			});
		}
	}
	// End Iconosur code


	$( 'a#toggle-nav' ).click(function(){
		$( '#nav-header' ).toggleClass( 'active' );
		$( '#logo-header, #toggle-nav, #search-header, #wrap-primary, #footer-primary, #footer-secondary, .user-info, #reveal-top-stories' ).toggleClass( 'mobile-nav-active' );
	});

	// Show/hide subnav links (for mobile)
	$( '#nav-primary > .menu-item > .shape-arrow' ).click(function(e){
		e.preventDefault();
		var arrow = $( this ),
				subMenu = arrow.next();
		// Activate secondary nav
		subMenu.toggleClass( 'show' );
		// Toggle 'flip' class to rotate nav arrow
		arrow.toggleClass( 'flip' );
	});

	// Show/hide sub-nav/flyout menu for responsive template menu
	$( '.js-toggle-nav-main' ).click(function(e){
		e.preventDefault();

		// Activate secondary nav
		$( 'body' ).toggleClass( 'sub-nav-open' );
	});

	// Show/hide Section / sub nav menu for under desktop widths
	$( '.section-menu--name' ).click(function(e){
		if ( $( window ).width() < 1120 ) {
			e.preventDefault();

			// Activate secondary nav
			$( '.nav-main' ).toggleClass( 'section-sub-menu--open' );
		}
	});

	// Show/hide search form in nav
	$( '.js-nav-search-icon' ).click(function(e){
		e.preventDefault();

		if ( $( 'body' ).hasClass( 'nav-search-open' ) ) {
			// Activate search form closing
			$( 'body' ).toggleClass( 'nav-search-closing' );

			// wait to remove class so there is time to animate
			setTimeout(function () {
				$( 'body' ).toggleClass( 'nav-search-open' );
				// remove class now that animation is done
				$( 'body' ).toggleClass( 'nav-search-closing' );
			}, 200);
			
		} else {
			// Activate search form opening
			$( 'body' ).toggleClass( 'nav-search-open' );
		}
	});
	// Submit sub-nav flyout search form when clicked
	$( '#js-sub-search-submit' ).click(function(e){
		e.preventDefault();

		// Submit the sub nav search form in flyout
		$( '.nav-search--sub #search-header' ).submit();
	});

	// For Single Video lead module with Playlist
	/*
	 * Playlist
	 */
	var $modPlaylist = $( '.mod--playlist' );
	$modPlaylist.on( 'click', '.playlist__autoplay', function(){
		$( this ).toggleClass( 'playlist__autoplay--active' );
		$modPlaylist.toggleClass( 'mod--playlist--active' );
	});
	$modPlaylist.on( 'click', '.button', function(){
		var $this = $( this );
		$this.prev().addClass( 'playlist__items--active' );
		$this.slideDown(function(){
			$this.remove();
		});
	});

	// Display "Breaking News", if there is any
	var cnneBreakingNews = {
		wrap: $( '#breaking-news-header' ),
		closeLink: $( '#close-breaking-news' ),
		breakingID: parseInt( $( '#breaking-news-header' ).data( 'breaking-id' ) ),
		check: function() {
			var _this = this;
			if ( _this.wrap.length && false !== cnneSupportsLocalStorage() ) { // If Breaking news (and localStorage)...
				// If the breaking news id has not been set to localStorage, show it
				if ( parseInt( localStorage.getItem( 'hiddenBreakingNews' ) ) !== _this.breakingID ) {
					_this.wrap.removeClass( 'hide' );
				}
			} else if ( false !== cnneSupportsLocalStorage() ) { // Clear localStorage item if there is no breaking news
				localStorage.removeItem( 'hiddenBreakingNews' );
			}
		},
		close: function() {
			var _this = this;
			_this.closeLink.click(function() {
				// On close, save the breaking news id to localStorage, so that it won't be shown
				if ( _this.wrap.length ) {
					_this.wrap.removeClass( 'transition-off' ).addClass( 'hide' );
					localStorage.setItem( 'hiddenBreakingNews', _this.breakingID );
				}
			});
			setTimeout(function(){ // Remove the DOM node altogether, after animation has run
				if ( _this.wrap.hasClass( 'hide' ) ) {
					_this.wrap.remove();
				}
			}, 300);
		}
	};

	// document.ready inits
	$(function(){
		cnneBreakingNews.check();
		cnneBreakingNews.close();
	});

	// trigger sticky init on load
	$( window ).load( function() {
		window.scrollTo( 0, 1 );
		// Init sticky items (sidebar, follow, etc) - Init after window.scrollTo top for proper measurements
		$( window ).trigger( 'cnneInitSticky' );

		if ( $( window ).width() <= 640 && $( 'body' ).hasClass( 'home' ) && $( '.js-sticky-video' ).length !== 0 ) {
			$( '.js-sticky-video' ).addClass( 'out-of-sidebar' ).insertAfter( 'section.articles-lead' );
		}
	} );

	// ORLANDO VICTIM INTERACTIVE
	if ( $( 'body' ).hasClass( 'page-id-294821' ) || $( 'body' ).hasClass( 'page-id-219335' ) || $( 'body' ).hasClass( 'page-id-261469' ) ) {
		// if Page ID from prod, preprod, or local
		// GET DATA FORM SPREADSHEET
		var ID = "1hEIqQeOYjJIayj-3ZXhXHfCFJtCXz5rsZWuZH6mpX0U";
		$.ajax({
			dataType: "json",
			url: "https://spreadsheets.google.com/feeds/list/"+ID+"/od6/public/values?alt=json",
			success: function( data ){
				console.log( data.feed.entry );

				var $victimList = $( "#victim-list" );
				$.each( data.feed.entry, function(){
					var data = this;
					console.log( data.gsx$image.$t );
					var $current =  $( "<div />" );
					$current.addClass( "victim" ).append(
						$( "<div/>" ).addClass( "victim-name" ).text( data.gsx$name.$t ),
						$( "<div />" ).addClass( "victim-content" ).append(
							$( "<div />" ).addClass( "victim-content-info" ).append(
								$( "<img />").addClass( "victim-photo" ).attr( "src", data.gsx$image.$t !== "" ? data.gsx$image.$t : '../../../images/landing-victims/placeholder.jpg' ),
								$( "<div />" ).addClass( "victim-name-header" ).text( data.gsx$name.$t ),
								$( "<div />" ).addClass( "victim-age" ).text( data.gsx$age.$t + " años" )
							),
							$( "<div />" ).addClass( "victim-content-bio" ).append(
								$( "<div />" ).addClass( "victim-description" ).text( data.gsx$bio.$t )
							)
						)
					);

					if( data.gsx$link.$t !== "" ){
						$current.find( ".victim-content-bio" ).append(
							$( "<div />" ).addClass( "victim-link" ).append(
								$( "<a />" ).attr({href: data.gsx$link.$t}).text( "Leer más sobre la víctima" )
							)
						);
					}
					$victimList.append( $current );
				});
			}
		});


		// EVENTS
		$( ".victim-interactive" ).on( "click", ".victim", function( e ){
			e.preventDefault();
			$( ".victim-overlay" ).find( ".victim-content" ).html( $( this ).find( ".victim-content" ).html() );
			$( "body" ).addClass( "overlay-open" );
		});
		$( ".victim-overlay" ).on( "click", ".victim-overlay__close-btn, .victim-layer", function( e ){
			e.preventDefault();

			$( "body" ).removeClass( "overlay-open" );
		});
		// END ORLANDO INTERACTIVE
	} //end if

})( jQuery );

(function( $ ){

	'use strict';

	// Function to control CNN edition picker
	var cnneEditionPicker = {
		$toggleLink: $( '.edition-language a' ),
		$setPreferredLink: $( '.confirm-edition-link' ),
		$confirmLink: $( '.input-submit-edition' ),
		$editionsMobile: $( '#editions-cnn-mobile' ),
		$editionsDesktop: $( '#editions-cnn' ),
		// Check for localStorage item, and set appropriate radio button
		isChecked: function() {
			var editionOption = $( '.edition-picker .option-edition' ),
			    preferredEdition;
			if ( false !== cnneSupportsLocalStorage() ) {
				$( editionOption ).each(function(){
					if ( localStorage.getItem( 'editionPreference' ) === $( this ).val() ) {
						$( this ).attr( 'checked', 'checked' );
					}
				});
			}
		},
		// Show/hide the edition picker
		showHide: function() {
			var _this = this,
			    $window = $( window ),
			    $editionPicker;
			// Translate the following siblings up before any interaction takes place
			_this.$editionsMobile.nextAll().css( 'transform', 'translateY(' + ( - _this.$editionsMobile.outerHeight() ) + 'px)' );
			_this.$toggleLink.on( 'click', function(){
				var $this = $( this );
				$this.toggleClass( 'picker-visible' );
				if ( $this.hasClass( 'edition-toggle-mobile' ) ) {
					$editionPicker = _this.$editionsMobile;
					$editionPicker.toggleClass( 'visible' );
					if ( $editionPicker.hasClass( 'visible' ) ) {
						$editionPicker.nextAll().css( 'transform', 'translateY(0)' );
					} else {
						$editionPicker.nextAll().css( 'transform', 'translateY(' + ( - $editionPicker.outerHeight() ) + 'px)' );
					}
				} else {
					$editionPicker = _this.$editionsDesktop;
					$editionPicker.toggleClass( 'visible' );

					var position = '50px',
						$editionToggleDesktop = $( '.edition-toggle-desktop' ).parent(),
						$editionToggleDesktopRect = $editionToggleDesktop[0].getBoundingClientRect(),
						$positionLeft = $editionToggleDesktopRect.left - 77;

					if ( $editionPicker.hasClass( 'visible' ) ) {
						$editionPicker.css( 'transform', 'scaleY(1) translateY(' + position + ')' );
						$editionPicker.css( {
								'left': $positionLeft + 'px',
								'margin-left': '0'
								});
					} else {
						$editionPicker.css( 'transform', 'scaleY(0) translateY(-1000%)' );
					}
				}
			});
			if ( 960 < $window.width() ) {
				// Hide desktop edition picker on scroll
				$window.on( 'scroll', _.throttle( function(){
					_this.$editionsDesktop.removeClass( 'visible' );
				}, 1000 ) );
			}
		},
		// Set a preferred location
		setPreferred: function() {
			var _this = this,
			    $editionPicker;
			// "Set preferred edition" state
			_this.$setPreferredLink.on( 'click', function(){
				if ( $( this ).parent().parent( '.edition-picker' ).hasClass( 'edition-picker-mobile' ) ) {
					$editionPicker = _this.$editionsMobile;
				} else {
					$editionPicker = _this.$editionsDesktop;
				}
				$editionPicker.find( '.option-edition' ).unwrap();
				setTimeout( function(){
					$editionPicker.toggleClass( 'confirm' );
				}, 100);
			});
			// Confirm edition state
			_this.$confirmLink.on( 'click', function( e ){
				// Prevent any form submission
				e.preventDefault();
				// Get the value of the checked input, and set window.location to that
				var checked = $( this ).parent().find( '.option-edition:checked' ).val();
				if ( false !== cnneSupportsLocalStorage() ) {
					localStorage.setItem( 'editionPreference', checked );
				}
				window.location = checked.toString();
			});
		}
	};

	// Document ready
	$(function(){
		cnneEditionPicker.isChecked();
		cnneEditionPicker.showHide();
		cnneEditionPicker.setPreferred();
	});

})( jQuery );
(function( $ ) {

	'use strict';

	var ENMARCHA = [
		{
			"type": "Feature",
			"geometry": {
				"type": "Point",
				"coordinates": [-74.00594, 40.71278]
			},
			"properties": {
				"title": "Upfront Event in New York",
				"date": "16 mayo",
				"marker-color": "#e76759",
				"marker-size": "large"
			},
		},
		{
			"type": "Feature",
			"geometry": {
				"type": "Point",
				"coordinates": [ -119.41793, 36.77826 ]
			},
			"properties": {
				"title": "Copa América Centenario",
				"date": "3 al 26 junio",
				"anchor": {
					"text": "Ver sitio oficial",
					"link": "http://cnnespanol.cnn.com/category/copa-america-centenario-usa-2016/"
				},
				"marker-color": "#e76759",
				"marker-size": "large"
			},
		},
		{
			"type": "Feature",
			"geometry": {
				"type": "Point",
				"coordinates": [ -77.13687, 38.80719 ]
			},
			"properties": {
				"title": "Conferencia de Naleo",
				"date": "23 al 25 junio",
				"anchor": {
					"text": "Ver sitio oficial",
					"link": "https://www.showreg.net/NALEO1606/"
				},
				"marker-color": "#e76759",
				"marker-size": "large"
			},
		},
		{
			"type": "Feature",
			"geometry": {
				"type": "Point",
				"coordinates": [-81.69436, 41.49931]
			},
			"properties": {
				"title": "Convención Republicana",
				"date": "18 al 22 julio",
				"anchor": {
					"text": "Ver sitio oficial",
					"link": "https://www.2016cle.com"
				},
				"marker-color": "#e76759",
				"marker-size": "large"
			},
		},
		{
			"type": "Feature",
			"geometry": {
				"type": "Point",
				"coordinates": [-82.17091, 28.08009]
			},
			"properties": {
				"title": "La Raza National Conference",
				"date": "23 al 26 julio",
				"anchor": {
					"text": "Ver sitio oficial",
					"link": "http://www.nclr.org"
				},
				"marker-color": "#e76759",
				"marker-size": "large"
			},
		},
		{
			"type": "Feature",
			"geometry": {
				"type": "Point",
				"coordinates": [-75.16522, 39.95258]
			},
			"properties": {
				"title": "Convención Demócrata",
				"date": "25 al 29 julio",
				"anchor": {
					"text": "Ver sitio oficial",
					"link": "http://www.phldnc.com"
				},
				"marker-color": "#e76759",
				"marker-size": "large"
			},
		},
		{
			"type": "Feature",
			"geometry": {
				"type": "Point",
				"coordinates": [-77.03687, 38.90719]
			},
			"properties": {
				"title": "NABJ and NAHJ Joint Convention",
				"date": "3 al 7 agosto",
				"anchor": {
					"text": "Ver sitio oficial",
					"link": "http://www.nabj.org/?page=2016Convention"
				},
				"marker-color": "#e76759",
				"marker-size": "large"
			},
		},
		{
			"type": "Feature",
			"geometry": {
				"type": "Point",
				"coordinates": [ -120.63024,  47.69948 ]
			},
			"properties": {
				"title": "Voto Latino Panel",
				"date": "15 septiembre",
				"marker-color": "#e76759",
				"marker-size": "large"
			},
		},
		{
			"type": "Feature",
			"geometry": {
				"type": "Point",
				"coordinates": [-73.95792, 40.62358]
			},
			"properties": {
				"title": "Festival People en Español",
				"date": "15 octubre",
				"anchor": {
					"text": "Ver sitio oficial",
					"link": "http://www.peopleenespanol.com/festival"
				},
				"marker-color": "#e76759",
				"marker-size": "large"
			},
		},
		{
			"type": "Feature",
			"geometry": {
				"type": "Point",
				"coordinates": [-73.84094, 40.62467]
			},
			"properties": {
				"title": "Latin Trade Symposium and Bravo Awards",
				"date": "28 octubre",
				"anchor": {
					"text": "Ver sitio oficial",
					"link": "http://www.hpra-usa.org/bravo-awards/"
				},
				"marker-color": "#e76759",
				"marker-size": "large"
			},
		},
		{
			"type": "Feature",
			"geometry": {
				"type": "Point",
				"coordinates": [-82.17091, 28.08009]
			},
			"properties": {
				"title": "Celumetrajes",
				"date": "17 noviembre",
				"marker-color": "#e76759",
				"marker-size": "large"
			},
		},
	];
	var ENMARCHA_RECORRIDO_IZQ = [
		[ 47.75107, -120.74013 ],
		[ 47.72523739961604, -120.68498611450195 ],
		[ 47.69948, -120.63024 ],
		[ 47.646886969413, -120.64189910888673 ],
		[ 47.558920607496525, -120.69751739501953 ],
		[ 46.626806395355175, -121.3714599609375 ],
		[ 45.79816953017263, -121.8218994140625 ],
		[ 44.77013681219717, -122.1844482421875 ],
		[ 43.6599240747891, -122.6019287109375 ],
		[ 42.79540065303723, -122.7008056640625 ],
		[ 42.13896840458089, -122.6788330078125 ],
		[ 41.104190944576466, -123.06335449218749 ],
		[ 40.43858586704328, -123.0743408203125 ],
		[ 39.7240885773337, -123.0413818359375 ],
		[ 38.94232097947902, -122.5579833984375 ],
		[ 38.376115424036016, -122.1844482421875 ],
		[ 37.77071473849609, -121.39343261718749 ],
		[ 37.38761749978395, -120.8551025390625 ],
		[ 37.142803443716836, -120.4046630859375 ],
		[ 36.77826, -119.41793 ]
	];
	var ENMARCHA_RECORRIDO_DER = [
		[ 41.49931, -81.69436 ],
		[ 41.244772343082076, -81.705322265625 ],
		[ 41.68932225997044, -80.299072265625 ],
		[ 42.21224516288584, -78.695068359375 ],
		[ 42.52069952914966, -77.596435546875 ],
		[ 42.47209690919285, -76.036376953125 ],
		[ 42.17968819665961, -75.11352539062499 ],
		[ 41.72213058512578, -74.586181640625 ],
		[ 41.33145127732962, -74.20440673828125 ],
		[ 41.09591205639546, -74.13299560546875 ],
		[ 40.8595252289932, -74.18243408203125 ],
		[ 40.73477098967238, -74.17694091796875 ],
		[ 40.676472128500016, -74.00115966796875 ],
		[ 40.71278, -74.00594 ],
		[ 40.70901126835032, -74.00613784790039 ],
		[ 40.709531765423854, -73.94056320190428 ],
		[ 40.71109323223401, -73.89764785766602 ],
		[ 40.70510741061974, -73.87945175170898 ],
		[ 40.70862, -73.87959 ],
		[ 40.703285532030286, -73.87910842895508 ],
		[ 40.687407052121316, -73.85782241821289 ],
		[ 40.66605624777334, -73.84443283081055 ],
		[ 40.64600109698021, -73.83928298950194 ],
		[ 40.62124942228214, -73.83996963500977 ],
		[ 40.62467, -73.84094 ],
		[ 40.62098882953795, -73.84099960327148 ],
		[ 40.61727527247161, -73.86936664581299 ],
		[ 40.61551614707256, -73.8986349105835 ],
		[ 40.61942525172379, -73.95146369934082 ],
		[ 40.620076746927374, -73.95781517028809 ],
		[ 40.62358, -73.95792 ],
		[ 40.62350920735189, -73.9579626917839 ],
		[ 40.62336670064212, -73.96194845438004 ],
		[ 40.622812957398224, -74.03240203857422 ],
		[ 40.605090749765786, -74.07360076904297 ],
		[ 40.5534610833091, -74.1525650024414 ],
		[ 40.52841417575909, -74.2514419555664 ],
		[ 40.503880004917846, -74.35718536376952 ],
		[ 40.405130697527866, -74.28680419921875 ],
		[ 40.287906612507406, -74.25384521484375 ],
		[ 40.1452892956766, -74.31976318359375 ],
		[ 40.01078714046552, -74.42413330078125 ],
		[ 39.91394967016644, -74.64935302734375 ],
		[ 39.842286020743394, -75.03387451171875 ],
		[ 39.87601941962116, -75.16571044921875 ],
		[ 39.95258, -75.16522 ],
		[ 39.952541561438544, -75.16521960496902 ],
		[ 39.95145180985654, -75.16857773065566 ],
		[ 39.85072092501597, -75.6024169921875 ],
		[ 39.76632525654491, -75.7672119140625 ],
		[ 39.639537564366684, -76.0968017578125 ],
		[ 39.49556336059472, -76.4373779296875 ],
		[ 39.27478966170308, -76.8878173828125 ],
		[ 39.13006024213511, -77.0086669921875 ],
		[ 38.907289773599665, -77.036854326725 ],
		[ 38.90719, -77.03687 ],
		[ 38.90707687924011, -77.0368704199791 ],
		[ 38.90645906454268, -77.03715473413467 ],
		[ 36.94111143010772, -77.2174072265625 ],
		[ 36.182224980422525, -77.0306396484375 ],
		[ 35.585851593232356, -77.0745849609375 ],
		[ 34.687427949314845, -77.86560058593749 ],
		[ 34.161818161230386, -81.298828125 ],
		[ 32.24997445586331, -82.705078125 ],
		[ 31.16580958786196, -82.77099609375 ],
		[ 30.372875188118016, -82.72705078125 ],
		[ 29.075375179558346, -82.19970703125 ],
		[ 28.401064827220896, -82.1942138671875 ],
		[ 28.080206518409966, -82.17092961072922 ],
		[ 28.08009, -82.17091 ]
	];

	var mapbox = $( '#mapbox-enmarcha' ),
		$element = '';
	if( mapbox.length > 0 ){
		$( '.mobile-cover' ).on( 'click', function(){
			$( this ).fadeOut(function(){
				$( this ).remove();
			});
		});
		//SET ACCESS TOKEN
		L.mapbox.accessToken = "pk.eyJ1IjoiY25uZGlnaXRhbCIsImEiOiJjaWZlZ2tkZ3c2dnMxc3htNzk3Zmg4OGV3In0.LBjYC0UDhXi153oFMqwT0Q";
		//CREATE MAP
		window.map = L.mapbox.map( 'mapbox-enmarcha', 'cnndigital.7qrl1lpn' )
						.setView([39.57182223734374, -85.69335937499999], 4);
		//SET STYLES
		//var mapStyle = L.mapbox.styleLayer('mapbox://styles/cnndigital/cikeaqnaq00bqaklxe2gb1bmh').addTo( map );
		//CREATE LAYER
		var mapLayer = L.mapbox.featureLayer().addTo( map );
		//DISABLE SCROLL
		map.scrollWheelZoom.disable();
		//MARKER AND CUSTOM TOOLTIP
		mapLayer.on( "layeradd", function( e ){
			var marker = e.layer,
				Properties = marker.feature.properties;

			$element = $( "<li />" ).append(
				$( "<span />" ).addClass( "icon-marker-medium-red" ),
				$( "<p />" ).text( Properties.date ).append(
					$( "<big />" ).text( Properties.title )
				)
			).on( "click", function(){
				map.panTo( marker.getLatLng() );
	      		marker.openPopup();
			});

			$( "#mapbox-events" ).find( "ul" ).append( $element );	

			if( Properties.icon !== undefined ){
				marker.setIcon( L.icon( Properties.icon ) );
			}
			var popup = "<p>"+Properties.date+"<big>"+Properties.title+"</big></p>";

			if( Properties.anchor !== undefined ){
				popup += '<a target="_blank" rel="nofollow" href="'+Properties.anchor.link+'" title="'+Properties.anchor.text+'">'+Properties.anchor.text+'</a>';
			}

			marker.bindPopup( popup, {});
		});
		//SET GEOJSON
		mapLayer.setGeoJSON( ENMARCHA );
		//IF MOBILE CENTER MAP TO MARKERS
		if( $( window ).width() < 768 ){
			map.fitBounds( mapLayer.getBounds() );
		}
		//DRAW POLYLINES
		var polyline_options = {
			color: '#fff',
			weight: 3,
			opacity: 1,
			dashArray: "5, 5"
		};
		L.polyline(ENMARCHA_RECORRIDO_IZQ, polyline_options).addTo(map);
		L.polyline(ENMARCHA_RECORRIDO_DER, polyline_options).addTo(map);
	}

	var COPAAMERICA = [
	{
		"type": "Feature",
		"geometry": {
			"type": "Point",
			"coordinates": [-121.9698, 37.40316]
		},
		"properties": {
			"city": "Santa Clara",
			"stadium": "Levi’s Stadium",
			"matchs": [
				{
					"date": "3 de junio",
					"match": "USA vs COL"
				},
				{
					"date": "6 de junio",
					"match": "ARG vs CHI"
				},
				{
					"date": "13 de junio",
					"match": "URU vs JAM"
				},
				{
					"date": "18 de junio",
					"match": "Cuartos de final"
				}
			],
			"marker-color": "#ba1812",
			"marker-size": "large"
		}
	},
	{
		"type": "Feature",
		"geometry": {
			"type": "Point",
			"coordinates": [-81.40274, 28.53904]
		},
		"properties": {
			"city": "Orlando, FL",
			"stadium": "Camping World Stadium",
			"matchs": [
				{
					"date": "4 de junio",
					"match": "CRC vs PAR",
				},
				{
					"date": "6 de junio",
					"match": "PAN vs BOL"
				},
				{
					"date": "8 de junio",
					"match": "BRA vs HAI"
				}
			],
			"marker-color": "#ba1812",
			"marker-size": "large"
		}
	},
	{
		"type": "Feature",
		"geometry": {
			"type": "Point",
			"coordinates": [-118.16764, 34.16132]
		},
		"properties": {
			"city": "Pasadena, CA",
			"stadium": "Rose Bowl Stadium",
			"matchs": [
				{
					"date": "4 de junio",
					"match": "BRA vs ECU"
				},
				{
					"date": "7 de junio",
					"match": "COL vs PAR"
				},
				{
					"date": "9 de junio",
					"match": "MEX vs JAM"
				}
			],
			"marker-color": "#ba1812",
			"marker-size": "large"
		}
	},
	{
		"type": "Feature",
		"geometry": {
			"type": "Point",
			"coordinates": [-122.33163, 47.59515]
		},
		"properties": {
			"city": "Seattle, WA",
			"stadium": "CenturyLink Field",
			"matchs": [
				{
					"date": "4 de junio",
					"match": "HAI vs PER"
				},
				{
					"date": "14 de junio",
					"match": "ARG vs BOL"
				},
				{
					"date": "16 de junio",
					"match": "Cuartos de final"
				}
			],
			"marker-color": "#ba1812",
			"marker-size": "large"
		}
	},
	{
		"type": "Feature",
		"geometry": {
			"type": "Point",
			"coordinates": [-87.61668, 41.86231]
		},
		"properties": {
			"city": "Chicago, IL",
			"stadium": "Soldier Field",
			"matchs": [
				{
					"date": "5 de junio",
					"match": "JAM vs VEN"
				},
				{
					"date": "7 de junio",
					"match": "USA vs CRC"
				},
				{
					"date": "10 de junio",
					"match": "ARG vs PAN"
				},
				{
					"date": "22 de junio",
					"match": "Semi final"
				}
			],
			"marker-color": "#ba1812",
			"marker-size": "large"
		}
	},
	{
		"type": "Feature",
		"geometry": {
			"type": "Point",
			"coordinates": [-112.26255, 33.52762]
		},
		"properties": {
			"city": "Glendale, AZ",
			"stadium": "University of Phoenix Stadium",
			"matchs": [
				{
					"date": "5 de junio",
					"match": "MEX vs URU"
				},
				{
					"date": "8 de junio",
					"match": "ECU vs PER"
				},
				{
					"date": "25 de junio",
					"match": "Tercer puesto"
				}
			],
			"marker-color": "#ba1812",
			"marker-size": "large"
		}
	},
	{
		"type": "Feature",
		"geometry": {
			"type": "Point",
			"coordinates": [-75.16676, 39.90289]
		},
		"properties": {
			"city": "Filadelfia, PA",
			"stadium": "Lincoln Financial Field",
			"matchs": [
				{
					"date": "9 de junio",
					"match": "URU vs VEN"
				},
				{
					"date": "11 de junio",
					"match": "USA vs PAR"
				},
				{
					"date": "14 de junio",
					"match": "CHI vs PAN"
				}
			],
			"marker-color": "#ba1812",
			"marker-size": "large"
		}
	},
	{
		"type": "Feature",
		"geometry": {
			"type": "Point",
			"coordinates": [-75.16676, 39.90289]
		},
		"properties": {
			"city": "Foxborough, MA",
			"stadium": "Gillette Stadium",
			"matchs": [
				{
					"date": "10 de junio",
					"match": "CHI vs BOL"
				},
				{
					"date": "12 de junio",
					"match": "BRA vs PER"
				},
				{
					"date": "18 de junio",
					"match": "Cuartos de final"
				}
			],
			"marker-color": "#ba1812",
			"marker-size": "large"
		}
	},
	{
		"type": "Feature",
		"geometry": {
			"type": "Point",
			"coordinates": [-95.4107, 29.68472]
		},
		"properties": {
			"city": "Houston, TX",
			"stadium": "NRG Stadium",
			"matchs": [
				{
					"date": "11 de junio",
					"match": "COL vs CRC",
				},
				{
					"date": "13 de junio",
					"match": "MEX vs VEN"
				},
				{
					"date": "21 de junio",
					"match": "Semi final"
				}
			],
			"marker-color": "#ba1812",
			"marker-size": "large"
		}
	},
	{
		"type": "Feature",
		"geometry": {
			"type": "Point",
			"coordinates": [-74.07262, 40.81429]
		},
		"properties": {
			"city": "East Rutherford, NJ",
			"stadium": "MetLife Stadium",
			"matchs": [
				{
					"date": "12 de junio",
					"match": "ECU vs HAI",
				},
				{
					"date": "17 de junio",
					"match": "Semi final"
				},
				{
					"date": "26 de junio",
					"match": "Final"
				}
			],
			"marker-color": "#ba1812",
			"marker-size": "large"
		}
	},
	];

	var $mapboxCopa = $( "#mapbox-copa-america-centenario-usa-2016" );
	if( $mapboxCopa.length > 0 ){
		$( ".mobile-cover" ).on( "click", function(){
			$( this ).fadeOut(function(){
				$( this ).remove();
			});
		});
		//SET ACCESS TOKEN
		L.mapbox.accessToken = "pk.eyJ1IjoiY25uZGlnaXRhbCIsImEiOiJjaWZlZ2tkZ3c2dnMxc3htNzk3Zmg4OGV3In0.LBjYC0UDhXi153oFMqwT0Q";
		//CREATE MAP
		window.map = L.mapbox.map( 'mapbox-copa-america-centenario-usa-2016', 'cnndigital.a8mb99pe' )
						.setView([39.57182223734374, -85.69335937499999], 4);


		//CREATE LAYER
		var mapLayerCopa = L.mapbox.featureLayer().addTo( map );
		//DISABLE SCROLL
		map.scrollWheelZoom.disable();
		//MARKER AND CUSTOM TOOLTIP
		mapLayerCopa.on( "layeradd", function( e ){
			var marker = e.layer,
				Properties = marker.feature.properties;

			$element = $( "<li />" ).append(
				$( "<span />" ).addClass( "icon-marker-medium-red" ),
				$( "<p />" ).text( Properties.date ).append(
					$( "<strong />" ).text( Properties.stadium ),
					$( "<span />" ).text( Properties.city )
				)
			).on( "click", function(){
				map.panTo( marker.getLatLng() );
	      		marker.openPopup();
			});

			var popup = "<strong>"+Properties.stadium+"</strong>";
				popup += "<span>"+Properties.city+"</span>";
			for( var i = 0, k = Properties.matchs.length; i < k; i++){
				popup += "<p><span>"+Properties.matchs[i].date+"</span>"+Properties.matchs[i].match+"</p>";
			}

			$( "#mapbox-events" ).find( "ul" ).append( $element );	

			if( Properties.icon !== undefined ){
				marker.setIcon(L.icon(Properties.icon));
			}
			marker.bindPopup( popup, {});
		});
		//SET GEOJSON
		mapLayerCopa.setGeoJSON( COPAAMERICA );
		//IF MOBILE CENTER MAP TO MARKERS
		if( $( window ).width() < 768 ){
			map.fitBounds( mapLayerCopa.getBounds() );
		}
	}
})( jQuery );

(function( $ ) {
	if ( $( '#js-mc-newsletter' ).length !== 0 ) { //if form exists on page
		// watch for changes to newsletter radio buttons
		$( "input[name=listname]:radio" ).change( function ( e ) {
			e.preventDefault();
			var $form = $( 'form#js-mc-newsletter' ),
				$list_id = $form.find( 'input[name="listname"]:checked' ).val(); //set list_id with value of currently checked radio button

			// now update the action attribute with proper newsletter ID
			$( $form ).attr( "action", "//cnn.us11.list-manage.com/subscribe/post?u=47c9040f6ff957a59bd88396e&amp;id=" + $list_id );
		} );
	}
} )
( jQuery );
(function( $ ){

	'use strict';

	var cnneLoadMorePosts = {
		doc: $( document ),
		// Hide or re-reveal ajax-loaded posts
		hideShow: function() {
			this.doc.on( 'click', '.read-fewer', function(){
				var $this = $( this ),
				    wraps = $this.parent().find( '.wrap-article' ),
				    items = ( wraps.length ) ? wraps.not( '.hidden' ) : $this.parent().find( 'article' ).not( '.hidden' ),
				    itemsSlice = ( items.length % 3 === 0 ) ? 3 : items.length % 3;
				// Hide ajax loaded posts, incrementally
				$this
					.parent()
					.find( items )
					.slice( -itemsSlice )
					.addClass( 'hidden' );
				// Switch button text and classes
				if ( $this.parent().find( items ).slice( 0, 4 ).hasClass( 'hidden' ) ) {
					$this
						.text( 'Más noticias' )
						.removeClass( 'read-fewer' )
						.addClass( 'read-more-static' )
						.append( '<span class="shape-addition"></span>' );
				}
			});
			this.doc.on( 'click', '.read-more-static', function(){
				var $this = $( this ),
				    wraps = $this.parent().find( '.wrap-article' ),
				    items = ( wraps.length ) ? wraps : $this.parent().find( 'article' );
				// Show all posts previously load w/ Ajax, incrementally
				$this
					.parent()
					.find( items )
					.filter( '.hidden' )
					.slice( 0, 3 )
					.removeClass( 'hidden' );
				// Switch button text and classes
				if ( ! $this.prev().hasClass( 'hidden' ) ) {
					$this
						.text( 'Menos noticias' )
						.removeClass( 'read-more-static' )
						.addClass( 'read-fewer' );

					if ( ! $( 'body' ).hasClass('category-francisco-en-mexico') ) {
						$this.append( '<span class="shape-subtraction"></span>' );
					}
				}
			});
		},
		init: function() {
			this.doc.on( 'click', '.read-more', function( e ) {
				e.preventDefault();
				var $this = $( this ),
				    parent = $this.parent(),
				    sourceType = parent.data( 'source-type' ),
				    sourceVar = parent.data( 'source-var' ),
				    $formatType = $this.data( 'format-type' ),
				    hiddenWithCSS = parent.find( '.hidden-post' ),
				    totalPosts = parent.find( 'article' ).length + $( 'section.article-lead article' ).length;

				if ( hiddenWithCSS.length > 3 ) {
					// Show any posts hidden w/ CSS
					hiddenWithCSS.slice( 0, 3 ).removeClass( 'hidden-post' );
					// We've got enough posts, don't request more
					return;
				} else if ( sourceType.length ) {
					$this.addClass( 'loading' );
					$.ajax({
						url: '/ajax/load-posts/' + sourceType + '/' + sourceVar + '/' + hiddenWithCSS.length + '/' + totalPosts + '/' + $formatType,
						success: function( data ) {
							var noAjaxPosts;
							if ( ! data.length && hiddenWithCSS.length <= 3 ) {
								noAjaxPosts = true;
							}
							// Show any posts hidden w/ CSS
							hiddenWithCSS.slice( 0, 3 ).removeClass( 'hidden-post' );
							// Load the posts
							$this.before( data );
							// Re-run picturefill
							window.picturefill();
							// Update the total post count
							parent.data( 'post-count', parent.find( 'article' ).length );
							$this.removeClass( 'loading' );
							// If we're on the last set of posts
							if ( ( ! parent.find( '.hidden-post' ).length && 1 === $this.prev().data( 'ajax-full' ) ) || true === noAjaxPosts ) {
								// Change the read more button to read fewer
								$this
									.removeClass( 'loading' )
									.text( 'Menos noticias' )
									.removeClass( 'read-more' )
									.addClass( 'read-fewer' );

								if ( ! $( 'body' ).hasClass('category-francisco-en-mexico') ) {
									$this.append( '<span class="shape-subtraction"></span>' );
								}
							}
							
						},
						error: function( data ) {
						}
					});
				}
			});
		}
	};

	$( 'a.link-more-stories' ).on( 'click', function( e ){
		e.preventDefault();
		// All hidden stories
		var hiddenStories = $( this ).prevAll( '.hidden' );
		// Show next three stories
		hiddenStories.slice( hiddenStories.length - 3 ).removeClass( 'hidden' ).addClass( 'show' );
	});

	// Document ready - already inside a closure
	cnneLoadMorePosts.init();
	cnneLoadMorePosts.hideShow();

})( jQuery );
(function( $ ){
	// Add the WhatsApp link with its custom protocol
	var shareString = encodeURI( $( 'title:first' ).text() + ' ' + window.location );
	var $whatsapp = $( '<li />' );
	$whatsapp.append( '<a />' );
	var $a = $whatsapp.find( 'a' );
	// Grunt doesn't seem to like multi-line chains. Booo.
	$whatsapp.addClass( 'share-whatsapp' ).attr( 'id', 'share-whatsapp' );
	$a.addClass( 'share-whatsapp sd-button share-icon no-text' );
	$a.attr( 'href', 'whatsapp://send?text=' + shareString );
	$a.append( '<span />' ).append( '<span />' );
	$whatsapp.find( 'span:last' ).addClass( 'sharing-screen-reader-text' ).text( sharing.whatsappText );
	// insert in the page
	$( '.sd-content li.share-end' ).before( $whatsapp );
})(jQuery);
(function( $ ) {

	'use strict';

	var $window = $( window );

	function cnneStickyShow( el, hideSimilar ) {
		var $el = $( el );
		if ( $el.hasClass( 'invisible' ) ) {
			$el.removeClass( 'invisible' ).addClass( 'visible' );
			cnneStickyHide( hideSimilar );
		}
	}

	function cnneStickyHide( el, showSimilar ) {
		var $el = $( el );
		if ( $el.hasClass( 'visible' ) ) {
			$el.removeClass( 'visible' ).addClass( 'invisible' );
			cnneStickyShow( showSimilar );
		}
	}

	function getSearchParams( key ) {
		var p = {};
		location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi,function(str,key,value){
			p[key]=value;
		});
		return key?p[key]:p;
	}

	// Function to create sticky elements
	var cnneSticky = {
		headerHeight: $( '.header--wrap' ).outerHeight(),
		fixColumns: '.col-2, .col-1.col-single', // Any sibling elements to the parent that need a margin adjustment
		minWidth: 960,
		gutterWidth: 20, // To maintain margin
		bottomStickerPaddingTop: 10, // Force a top padding when sticking to a non-wrapping element
		winWidth: $window.width(),
		setup: function( page, wrap, sticky, checkAdmin ) { // Add some data for positioning
			// Make sure we're on the right page
			if ( ! $( page ).length ) {
				return false;
			}
			var _this = this,
				adminBar = $( '#wpadminbar' );

			// Check to see is user is logged in, and adjust header height accordlingly
			if ( true === checkAdmin && adminBar.length ) {
				_this.headerHeight = _this.headerHeight + adminBar.outerHeight();
			}
			$( wrap ).each(function() {
				var $stickyPar = $( this ),
					$sticky = $( sticky, this ),
					headingBounds = $sticky[0].getBoundingClientRect();

				$stickyPar
					.data( 'offsetTop', $stickyPar.offset().top )
					.data( 'height', $stickyPar.outerHeight() );
				$sticky
				  .data( 'height', $sticky.outerHeight() )
					.data( 'width', $sticky.outerWidth() + _this.gutterWidth )
					.data( 'top-position', $sticky.css( 'margin-top' ) )
					.data( 'bottom-margin', $stickyPar.height() - $sticky.outerHeight() )
					.data( 'left', headingBounds.left )
					.data( 'bottom', ( $sticky.outerHeight() + $sticky.offset().top + _this.bottomStickerPaddingTop ) );
			});
		},
		// Create "sticky" elements, relative to parent container
		init: function( page, wrap, sticky, absolute, checkAdmin, bottomSticker, fixedBottom ) {
			var _this = this;
				// Set up data
				_this.setup( page, wrap, sticky, checkAdmin );
				// On scroll
				$window.scroll( _.throttle( function(){
					// Get scroll position
					var scrollPos = $window.scrollTop();
					// For each parent element
					$( wrap ).each(function() {
						var el = this, // Parent
							$par = $( el ), // Parent selector
							$sticky = $( sticky, el ), // The heading
							columnsRight = $sticky.siblings( _this.fixColumns ), // Columns to the right of the heading
							stickyExtraTop = $sticky.hasClass( 'flush-left' ) ? 10 : 0, // Accounts for logo overflow
							stickyExtraTopVideo = $( '.js-sticky-video' ) ? $( '.js-sticky-video' ).height() : 0; // Accounts for sticky video box

						// Position checking functions
						function belowTop() {
							if ( true === fixedBottom ) {
								return $sticky.data( 'bottom' ) < scrollPos + $window.height();
							}
							return $par.data( 'offsetTop' ) < scrollPos + _this.headerHeight + stickyExtraTop;
						}
						function aboveBottom() {
							if ( true === fixedBottom && false !== bottomSticker ) {
								return $( bottomSticker ).offset().top > scrollPos + $window.height();
							} else if ( false !== bottomSticker ) {
								return $( bottomSticker ).offset().top - $sticky.data( 'height' ) - _this.headerHeight > scrollPos + parseInt( $sticky.data( 'top-position' ) ) + _this.bottomStickerPaddingTop;
							}
							return $par.data( 'height' ) + $par.data( 'offsetTop' ) - $sticky.data( 'height' ) - _this.headerHeight > scrollPos + parseInt( $sticky.data( 'top-position' ) );
						}

						// Reset Heading
						function resetHeading() {
							if ( false === absolute && false === bottomSticker ) {
								$sticky
									.css('position', 'relative' )
									.css( 'top', '0' )
									.css( 'margin-top', parseInt( $sticky.data( 'top-position' ) ) )
									.css( 'left', '0' );
								if ( sticky == '.js-sticky-video' ) {
									$par.css( 'padding-top', '0' );
								}
							} else if ( true === absolute && false !== bottomSticker ) {
								$sticky
									.css('position', 'relative' )
									.css( 'margin-top', parseInt( $sticky.data( 'top-position' ) ) )
									.css( 'top', '0' );
							} else {
								$sticky
									.css( 'position', 'absolute' )
									.css( 'top', '0' );
							}

						}

						// Reset column margin
						function resetColMargin() {
							columnsRight.css( 'margin-left', '0' );
						}

						// If we're at a wide enough browser width
						if ( _this.winWidth >= _this.minWidth ) {
							// If window scroll is within the parent container

							if ( belowTop() && aboveBottom() ) {
								// Set a top margin to match the relative scroll position
								if ( false === fixedBottom ) {
									var totalHeaderHeight = $( '.header--wrap' ).outerHeight();

									if ( $( '#wpadminbar' ).length ) {
										totalHeaderHeight = totalHeaderHeight + $( '#wpadminbar' ).outerHeight();
									}

									if ( $( '#breaking-news-header' ).outerHeight() !== null ) {
										totalHeaderHeight = totalHeaderHeight + $( '#breaking-news-header' ).outerHeight();
									}

									$sticky
									.css( 'position', 'fixed' )
									.css( 'top', totalHeaderHeight + parseInt( $sticky.data( 'top-position' ) ) + stickyExtraTop )
									.css( 'margin-top', '0' );

									if ( sticky === '.js-sticky-video' ) {
										$par.css( 'padding-top', stickyExtraTopVideo );
									}
									if ( false === absolute ) {
										$sticky.css( 'left', $sticky.data( 'left' ) );
									}
								} else {
										$sticky
											.css( 'top', 'auto' )
											.css( 'position', 'fixed' )
											.css( 'bottom', '10px' );
								}

								columnsRight.css( 'margin-left', $sticky.data( 'width' ) );
								// Remove invisible class
								cnneStickyShow( $sticky, '.fixed.share' );
							}	// If scroll up beats the debouncer, reset
								else if ( ! belowTop() ) {
								resetHeading();
								resetColMargin();
								cnneStickyHide( $sticky, '.fixed.share' );
							}	// If scroll down beats the debouncer, set the proper state
								else if ( ! aboveBottom() && sticky !== '.js-sticky-video' ) {
								$sticky
									.css( 'margin-top', $sticky.data( 'bottom-margin' ) )
									.css('top', '0');
									if ( false !== bottomSticker ) {
										$sticky
											.css( 'position', 'absolute' )
											.css( 'top', $( bottomSticker ).offset().top - $sticky.data( 'height' ) - _this.bottomStickerPaddingTop - $( '#wpadminbar' ).outerHeight() - $( '.header--wrap' ).outerHeight() );
									}
									if ( false === absolute ) {
										$sticky
											.css( 'left', '0' )
											.css( 'position', 'relative' );
									} else {
										$sticky.css( 'position', 'absolute' );
									}
								resetColMargin();
								cnneStickyHide( $sticky, '.fixed.share' );
							}
						} else { // Reset everything if win width is too narrow
							resetHeading();
							resetColMargin();
						}
					});
				}, 10 ) );
		},
		build: function( page, wrap, sticky, absolute, checkAdmin, bottomSticker, fixedBottom ) {
			var _this = this;
			// Initialize sticky headings
			_this.init( page, wrap, sticky, absolute, checkAdmin, bottomSticker, fixedBottom );
			// Build or decontstruct, depending on window width
			$window.resize( _.debounce(function() {
				_this.winWidth = $( window ).width();
				_this.init( page, wrap, sticky, absolute, checkAdmin, bottomSticker, fixedBottom );
			}, 250 ) );
		}
	};

	// window.load inits
	$window.on( 'cnneInitSticky', function() {
		if ( $( 'html' ).hasClass( 'flexbox' ) ) {

			/*if ( $( 'body' ).hasClass( 'home' ) && $( '.js-sticky-video' ).length !== 0 ) {
				cnneSticky.build( 'body.home', '#sidebar-sticky', '.js-sticky-video', false, true, false, false );
			}
			if ( $( 'body' ).hasClass( 'single' ) ) {
				cnneSticky.build( 'body.single', '.article-view article', '.follow', true, true, false, false );
			}

			// Load sticky sidebar, but only if main content area is taller than it
			if ( ( $( '.content-main' ).outerHeight() + $( '.content-more' ).outerHeight() > $( '#sidebar-sticky' ).outerHeight() ) && ! ( $( 'body.page-template-page-video' ).length ) ) {
				cnneSticky.build( 'body.archive, body.home, body.page, body.single, body.search', '#wrap-sidebar-sticky', '#sidebar-sticky', true, false, '#footer-primary', true );
			}*/

		}
	});

	// check for Turner ads JS
	if ( _.isUndefined( AdFuel ) ) {
		console.log( 'AdFuel is missing' );
		return;
	}

	// listen for response when Ad render complete
	AdFuel.addEvent(document, 'GPTRenderComplete', function(e){
		// initialize the sticky video on HP again
		if ( $( 'body' ).hasClass( 'home' ) && $( '.js-sticky-video' ).length !== 0 ) {
			cnneSticky.build( 'body.home', '#sidebar-sticky', '.js-sticky-video', false, true, false, false );
		}
		// Load sticky sidebar, but only if main content area is taller than it
		if ( ( $( '.content-main' ).outerHeight() + $( '.content-more' ).outerHeight() > $( '#sidebar-sticky' ).outerHeight() ) && ! ( $( 'body.page-template-page-video' ).length ) ) {
			cnneSticky.build( 'body.archive, body.home, body.page, body.single, body.search', '#wrap-sidebar-sticky', '#sidebar-sticky', true, false, '#footer-primary', true );
		}
	});

	// Nav 2017
	if ( $( 'body' ).is( '.cnnespanol-site' ) ) {

	// create list of page templates to not execute on for now as they have different nav setup
	var noClassList = '.post-format-long-form, .page-template-page-special-papa-template, .page-template-page-multimedia-special, ',
		headerWrapPresent = '';
		noClassList += '.page-template-page-agenda-special, .page-template-page-special-blank-template, .page-template-page-special-copa-media-wall, .page-template-page-special-sub-cat';

		headerWrapPresent = document.getElementsByClassName( 'header--wrap' );

			// don't execute if not using default header/menu
			if ( 0 === headerWrapPresent.length ) {
				return;
			}

		$( window ).scroll( function ( event ) {
			// set vars
			var scrollPos = $( this ).scrollTop(),
				adminBarEle = $( '#wpadminbar' ),
				adminBarHeight = ( adminBarEle.height() === null ) ? 0 : adminBarEle.height(),
				breakingNewsEle = $( '#breaking-news-header' ),
				breakingNewsHeight = ( null === breakingNewsEle.height() ) ? 0 : breakingNewsEle.height(),
				headerHeight = $( '.header-inner-nav' ).outerHeight() + breakingNewsHeight,
				topAdWrap = $( '#js_ad--wrap' ),
				topAd = $( '#ad_bnr_atf_01' ),
				topAdHeight = topAd.outerHeight(),
				headerMenu = $( '#header-cnne' ),
				scrollTrigger = 300,
				maxAdHeight = 270,
				enableSticky = true;

			// set different scroll triggers
			if ( $( 'body' ).hasClass( 'single-video' ) ) {
				// video leaf only has 20px of space above video
				scrollTrigger = 20;
			} else if ( $( 'body' ).hasClass( 'single-post' ) ) {
				// article leaf has 200px if space above media lead due to title of article and share buttons
				scrollTrigger = 200;
			}

			// check if data attribute is set, if so use it, if not get height from outerHeight()
			if ( undefined !== topAdWrap.data( 'ad-height' ) ) {
				topAdHeight = parseInt( topAdWrap.attr( 'data-ad-height' ), 10 );
			} else {
				topAdHeight = topAd.outerHeight();
			}
			// if above max ad height for sticky function, exit
			if ( maxAdHeight < topAdHeight ) {
				// disable sticky function
				$( 'body' ).addClass( 'disable-sticky--top-ad' );
				enableSticky = false;
			} else if ( 1 === topAd.find('iframe').height() ) {
				// disable sticky function
				$( 'body' ).addClass( 'disable-sticky--top-ad' );
				enableSticky = false;
			} else {
				// enable sticky function
				$( 'body' ).removeClass( 'disable-sticky--top-ad' );
				enableSticky = true;
			}

			if ( $( 'body' ).hasClass( 'is-mobile' ) ) {
				// disable sticky function
				$( 'body' ).addClass( 'disable-sticky--top-ad' );
				enableSticky = false;
			}

			// sticky enabled?
			if ( enableSticky ) {
				// if scrollPos is less than adheight
				if ( scrollPos < scrollTrigger ) {

					// set class for easy detection
					$( 'body' ).addClass( 'ad-top-expanded' ).removeClass( 'ad-top-collapse' );

					// if ad slot doesn't have data-ad-height attribute set, then check height and set attribute if actual ad is there
					if ( undefined === topAdWrap.data( 'ad-height' ) || 0 === topAdWrap.data( 'ad-height' ) ) {
						topAdHeight = topAd.outerHeight();

						if ( 59 < topAdHeight ) {
							topAdWrap.attr( 'data-ad-height', topAdHeight );
						}
					}

					// topAdWrap
					topAdWrap.css({
						'max-height': topAdHeight +'px'
					});

					// pad the body so content is below header with ad
					$( 'body' ).css({
						'padding-top': topAdHeight + headerHeight +'px'
					});

					// Menu unset to top
					headerMenu.css({
						'top' : '',
						'position' : ''
					});

				// if scrollPos is more than scrollTrigger
				} else if ( scrollPos >= scrollTrigger ) {
					// set class for easy detection
					$( 'body' ).addClass( 'ad-top-collapse' ).removeClass( 'ad-top-expanded' );

					// topAdWrap
					topAdWrap.css({
						'max-height': ''
					});

					// set content padding to only as big as menu without ad displaying
					$( 'body' ).css({
						'padding-top': headerHeight +'px'
					});
				} 
			} else { // sticky disabled
				// if scrollPos is less than adheight
				if ( scrollPos < topAdHeight ) {
					// Menu unset to top
					headerMenu.css({
						'top' : '',
						'position' : ''
					});

					// remove any padding
					$( 'body' ).css({
						'padding-top': ''
					});

					// topAdWrap remove max-height
					topAdWrap.css({
						'max-height': ''
					});

				} else if ( scrollPos >= topAdHeight ) {
					// Menu set to top
					headerMenu.css({
						'top': adminBarHeight +'px',
						'position' : 'fixed'
					});

					// remove any padding
					$( 'body' ).css({
						'padding-top': ''
					});

					// topAdWrap remove max-height
					topAdWrap.css({
						'max-height': ''
					});
				}
			}
		});
	}

})( jQuery );
(function( $ ){

	'use strict';

	$( '#schedule-filterer' ).on( 'click', 'h2, svg', function(){
		var $this = $( this ),
		    $wrap = $this.parents( '#schedule-filterer' ),
		    $selects = $wrap.find( 'select' );
		$wrap.toggleClass( 'open' );
		if ( $wrap.hasClass( 'open' ) ) {
			$selects.prop( 'disabled', false );
		} else {
			$selects.prop( 'disabled', true );
		}
	});

	// Function to filter schedule
	function cnneFilterSchedule() {

		$( '#refine-schedule' ).on( 'click', function( e ) {
			e.preventDefault();
			// Get Unix timestamp from date select, add time of day select value 
			var day = parseInt( $( '.filter-select-date option:selected' ).val() ) + ( parseInt( $( '.filter-select-time-of-day option:selected' ).val() ) * 3600 );
			// Empty schedule
			$( '.schedule-tv' ).html( '' );
			$.ajax({
				// Note: the second URL param ("0") prevents a new WP transient from being constructed
				url: '/ajax/tv-schedule/' + day + '/0',
				success: function( data ) {
					$( '.schedule-tv' ).append( data );
				}
			});

		});

	}
		
	$(function(){
		cnneFilterSchedule();
	});

})(jQuery);
(function( $ ){

	'use strict';

	var $iframes = null;

	/**
	 * make CNN video iframes "responsive" by setting CSS proportionately after load and resize
	 */

	function getResponsiveIframes() {
		if ( $( 'body' ).hasClass( 'single-video' ) ) {
			// disable on single-video .cnnvideoXXX wont exist
			$iframes = $( '.cnnvideoXXX' );
		} else {
			$iframes = $( '.cnnvideo.responsive' );
		}
		if ( 0 === $iframes.length ) {
			return;
		}
		// store height-width ratio in data attribute
		$( $iframes ).each( function(){
			var $this = $(this);
			var heightRatio = 0.6343;

			$this.attr( 'data-detectedheight', $this.height() );
			$this.attr( 'data-detectedwidth', $this.width() );

			$this.attr( 'data-heightratio', heightRatio );
			$this.attr({
				width: null,
				height: null
			});
			$this.css( 'width', '100%' );
		});
	}

	function resizeIframes() {
		// look for videos if we haven't already looked
		if ( null === $iframes ) {
			getResponsiveIframes();
		}

		$( $iframes ).each( function(){
			var $this = $(this);
			var heightRatio = parseFloat( $this.attr( 'data-heightratio' ) );
			if ( ! _.isNaN( heightRatio ) ) {
				// measure width based on parent element to account for initial load
				$this.css( 'height', ( $this.parent().width() * heightRatio ) + 'px' );
			}
		});
	}

	$( document ).ready( resizeIframes );
	$( window ).resize( _.debounce( resizeIframes, 250 ) );

})(jQuery);;
